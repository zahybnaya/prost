#####TASK#####
## name
navigation_inst_mdp__4
## horizon
40
## discount factor
1
## number of action fluents
4
## number of det state fluents
10
## number of prob state fluents
20
## number of preconds
0
## number of actions
5
## number of hashing functions
31
## initial state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
1
## method to calculate the final reward
NOOP
## 1 if reward formula allows reward lock detection and a reward lock was found during task analysis
1
## 1 if an unreasonable action was detected
1
## 1 if an unreasonable action was detected in the determinization
1
## number of states that were encountered during task analysis
6509
## number of unique states that were encountered during task analysis
20
## number of states with only one applicable reasonable action that were encountered during task analysis
5793
## number of unique states with only one applicable reasonable action that were encountered during task analysis
1


#####ACTION FLUENTS#####
## index
0
## name
move-east
## number of values
2
## values
0 false
1 true

## index
1
## name
move-north
## number of values
2
## values
0 false
1 true

## index
2
## name
move-south
## number of values
2
## values
0 false
1 true

## index
3
## name
move-west
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
robot-at(x14, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(0)) and($a(0) $s(0)) and($a(3) $s(0))) : $c(0)) (or(and($a(2) $s(10)) and($a(0) $s(8)) and($a(3) $s(2))) : $c(1)) ($c(1) : $s(0)) )
## hash index
0
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 1
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 1
16 0
17 1
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 1
45 1
46 0
47 1
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 1
56 0
57 1
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 1
86 0
87 1
88 0
89 0
90 0
91 1
92 1
93 0
94 0
95 1
96 0
97 1
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 1
123 0
124 1
125 1
126 0
127 1
128 0
129 0
130 0
131 1
132 1
133 0
134 1
135 1
136 0
137 1
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
1
## name
robot-at(x14, y47)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(2) $s(1)) and($a(0) $s(1)) and($a(3) $s(1))) : $c(0)) (or(and($a(1) $s(13)) and($a(0) $s(9)) and($a(3) $s(3))) : $c(1)) ($c(1) : $s(1)) )
## hash index
1
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 1
9 0
10 0
11 1
12 0
13 0
14 0
15 1
16 0
17 0
18 1
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 1
45 1
46 0
47 0
48 1
49 0
50 0
51 1
52 0
53 0
54 1
55 1
56 0
57 0
58 1
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 1
86 0
87 0
88 1
89 0
90 0
91 1
92 0
93 1
94 0
95 1
96 0
97 0
98 1
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 1
124 1
125 1
126 0
127 0
128 1
129 0
130 0
131 1
132 0
133 1
134 1
135 1
136 0
137 0
138 1
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
2
## name
robot-at(x21, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(2)) and($a(0) $s(2)) and($a(3) $s(2))) : $c(0)) (or(and($a(2) $s(14)) and($a(0) $s(0)) and($a(3) $s(4))) : $c(1)) ($c(1) : $s(2)) )
## hash index
2
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 1
13 0
14 0
15 1
16 0
17 1
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 1
30 1
31 0
32 1
33 0
34 0
35 1
36 0
37 1
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 1
88 0
89 1
90 1
91 0
92 1
93 0
94 0
95 1
96 0
97 1
98 0
99 0
100 0
101 1
102 1
103 0
104 0
105 0
106 1
107 1
108 0
109 1
110 1
111 0
112 1
113 0
114 0
115 1
116 0
117 1
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
3
## name
robot-at(x21, y47)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(2) $s(3)) and($a(0) $s(3)) and($a(3) $s(3))) : $c(0)) (or(and($a(1) $s(17)) and($a(0) $s(1)) and($a(3) $s(5))) : $c(1)) ($c(1) : $s(3)) )
## hash index
3
## caching type 
VECTOR
## precomputed results
80
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 0
13 1
14 0
15 1
16 0
17 0
18 1
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 1
44 0
45 0
46 0
47 0
48 1
49 1
50 1
51 0
52 0
53 1
54 0
55 1
56 0
57 0
58 1
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
4
## name
robot-at(x30, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(4)) and($a(3) $s(4))) : $c(0)) (or(and($a(2) $s(18)) and($a(0) $s(2))) : $c(1)) ($c(1) : $s(4)) )
## hash index
4
## caching type 
VECTOR
## precomputed results
80
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 1
13 0
14 1
15 1
16 0
17 1
18 0
19 1
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 1
43 0
44 0
45 0
46 0
47 1
48 0
49 1
50 1
51 0
52 1
53 0
54 1
55 1
56 0
57 1
58 0
59 1
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
5
## name
robot-at(x30, y47)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(5) : $c(1)) (or($s(5) and($a(2) $s(5)) and($a(3) $s(5))) : $c(0)) (or(and($a(1) $s(21)) and($a(0) $s(3))) : $c(1)) ($c(1) : $s(5)) )
## hash index
5
## caching type 
VECTOR
## precomputed results
40
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 1
12 1
13 1
14 1
15 1
16 1
17 1
18 1
19 1
20 0
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 1
29 1
30 1
31 1
32 1
33 1
34 1
35 1
36 1
37 1
38 1
39 1
## kleene caching type
VECTOR
## kleene caching vec size
135
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
6
## name
robot-at(x6, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(6)) and($a(0) $s(6))) : $c(0)) (or(and($a(2) $s(22)) and($a(3) $s(8))) : $c(1)) ($c(1) : $s(6)) )
## hash index
6
## caching type 
VECTOR
## precomputed results
80
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 1
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 1
32 1
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 1
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 1
51 1
52 1
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 1
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 1
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
7
## name
robot-at(x6, y47)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(2) $s(7)) and($a(0) $s(7))) : $c(0)) (or(and($a(1) $s(25)) and($a(3) $s(9))) : $c(1)) ($c(1) : $s(7)) )
## hash index
7
## caching type 
VECTOR
## precomputed results
80
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 1
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 1
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 1
44 0
45 0
46 0
47 0
48 0
49 0
50 1
51 1
52 0
53 1
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 1
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 1
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
8
## name
robot-at(x9, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(8)) and($a(0) $s(8)) and($a(3) $s(8))) : $c(0)) (or(and($a(2) $s(26)) and($a(0) $s(6)) and($a(3) $s(0))) : $c(1)) ($c(1) : $s(8)) )
## hash index
8
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 0
26 1
27 0
28 0
29 1
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 1
41 0
42 1
43 0
44 0
45 1
46 0
47 1
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 1
63 0
64 0
65 1
66 0
67 1
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 1
87 1
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 1
103 0
104 1
105 0
106 1
107 1
108 0
109 1
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 1
121 0
122 1
123 0
124 0
125 1
126 0
127 1
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 1
143 0
144 0
145 1
146 0
147 1
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
9
## name
robot-at(x9, y47)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(2) $s(9)) and($a(0) $s(9)) and($a(3) $s(9))) : $c(0)) (or(and($a(1) $s(29)) and($a(0) $s(7)) and($a(3) $s(1))) : $c(1)) ($c(1) : $s(9)) )
## hash index
9
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 0
26 1
27 0
28 0
29 1
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 1
41 0
42 0
43 1
44 0
45 1
46 0
47 0
48 1
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 1
64 0
65 1
66 0
67 0
68 1
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 1
87 0
88 1
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 1
104 1
105 0
106 1
107 0
108 1
109 1
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 1
121 0
122 0
123 1
124 0
125 1
126 0
127 0
128 1
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 0
143 1
144 0
145 1
146 0
147 0
148 1
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
robot-at(x14, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(10)) and($a(2) $s(10)) and($a(0) $s(10)) and($a(3) $s(10))) : $c(0)) (or(and($a(1) $s(0)) and($a(2) $s(11)) and($a(0) $s(26)) and($a(3) $s(14))) : Bernoulli($c(0.496592471376061))) ($c(1) : $s(10)) )
## determinized formula
switch( (or($s(5) and($a(1) $s(10)) and($a(2) $s(10)) and($a(0) $s(10)) and($a(3) $s(10))) : $c(0)) (or(and($a(1) $s(0)) and($a(2) $s(11)) and($a(0) $s(26)) and($a(3) $s(14))) : $c(0)) ($c(1) : $s(10)) )
## hash index
10
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 2 0 0.503407528623939 1 0.496592471376061
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 1 1 1 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 1 1 1 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 2 0 0.503407528623939 1 0.496592471376061
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 2 0 0.503407528623939 1 0.496592471376061
48 0 2 0 0.503407528623939 1 0.496592471376061
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 1 1 1 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 2 0 0.503407528623939 1 0.496592471376061
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 2 0 0.503407528623939 1 0.496592471376061
87 0 1 0 1
88 0 2 0 0.503407528623939 1 0.496592471376061
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 1 1 1 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 0 2 0 0.503407528623939 1 0.496592471376061
122 0 2 0 0.503407528623939 1 0.496592471376061
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 2 0 0.503407528623939 1 0.496592471376061
127 0 2 0 0.503407528623939 1 0.496592471376061
128 0 2 0 0.503407528623939 1 0.496592471376061
129 0 1 0 1
130 0 1 0 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 1 1 1 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 0 2 0 0.503407528623939 1 0.496592471376061
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 2 0 0.503407528623939 1 0.496592471376061
169 0 2 0 0.503407528623939 1 0.496592471376061
170 0 1 0 1
171 0 1 0 1
172 0 1 0 1
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 1 1 1 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 1 1 1 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 1 0 1
202 0 2 0 0.503407528623939 1 0.496592471376061
203 0 1 0 1
204 0 2 0 0.503407528623939 1 0.496592471376061
205 0 1 0 1
206 0 1 0 1
207 0 2 0 0.503407528623939 1 0.496592471376061
208 0 2 0 0.503407528623939 1 0.496592471376061
209 0 2 0 0.503407528623939 1 0.496592471376061
210 0 1 0 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 1 1 1 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 0 2 0 0.503407528623939 1 0.496592471376061
242 0 1 0 1
243 0 1 0 1
244 0 2 0 0.503407528623939 1 0.496592471376061
245 0 1 0 1
246 0 2 0 0.503407528623939 1 0.496592471376061
247 0 1 0 1
248 0 2 0 0.503407528623939 1 0.496592471376061
249 0 2 0 0.503407528623939 1 0.496592471376061
250 0 1 0 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 1 1 1 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 0 1 0 1
281 0 2 0 0.503407528623939 1 0.496592471376061
282 0 2 0 0.503407528623939 1 0.496592471376061
283 0 1 0 1
284 0 2 0 0.503407528623939 1 0.496592471376061
285 0 1 0 1
286 0 2 0 0.503407528623939 1 0.496592471376061
287 0 2 0 0.503407528623939 1 0.496592471376061
288 0 2 0 0.503407528623939 1 0.496592471376061
289 0 2 0 0.503407528623939 1 0.496592471376061
290 0 1 0 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 1 1 1 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 0 1 0 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
1
## name
robot-at(x14, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(11)) and($a(2) $s(11)) and($a(0) $s(11)) and($a(3) $s(11))) : $c(0)) (or(and($a(1) $s(10)) and($a(2) $s(12)) and($a(0) $s(27)) and($a(3) $s(15))) : Bernoulli($c(0.509218361228704))) ($c(1) : $s(11)) )
## determinized formula
switch( (or($s(5) and($a(1) $s(11)) and($a(2) $s(11)) and($a(0) $s(11)) and($a(3) $s(11))) : $c(0)) (or(and($a(1) $s(10)) and($a(2) $s(12)) and($a(0) $s(27)) and($a(3) $s(15))) : $c(1)) ($c(1) : $s(11)) )
## hash index
11
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.490781638771296 1 0.509218361228704
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 1 1 1 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 1 1 1 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 1 2 0 0.490781638771296 1 0.509218361228704
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 1 2 0 0.490781638771296 1 0.509218361228704
53 1 2 0 0.490781638771296 1 0.509218361228704
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 1 2 0 0.490781638771296 1 0.509218361228704
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 1 2 0 0.490781638771296 1 0.509218361228704
92 0 1 0 1
93 1 2 0 0.490781638771296 1 0.509218361228704
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 1 2 0 0.490781638771296 1 0.509218361228704
122 1 2 0 0.490781638771296 1 0.509218361228704
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 1 2 0 0.490781638771296 1 0.509218361228704
132 1 2 0 0.490781638771296 1 0.509218361228704
133 1 2 0 0.490781638771296 1 0.509218361228704
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 1 2 0 0.490781638771296 1 0.509218361228704
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 1 0 1
172 0 1 0 1
173 1 2 0 0.490781638771296 1 0.509218361228704
174 1 2 0 0.490781638771296 1 0.509218361228704
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 1 1 1 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 1 1 1 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 1 0 1
202 1 2 0 0.490781638771296 1 0.509218361228704
203 0 1 0 1
204 1 2 0 0.490781638771296 1 0.509218361228704
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 1 0 1
212 1 2 0 0.490781638771296 1 0.509218361228704
213 1 2 0 0.490781638771296 1 0.509218361228704
214 1 2 0 0.490781638771296 1 0.509218361228704
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 1 2 0 0.490781638771296 1 0.509218361228704
242 0 1 0 1
243 0 1 0 1
244 1 2 0 0.490781638771296 1 0.509218361228704
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 1 2 0 0.490781638771296 1 0.509218361228704
252 0 1 0 1
253 1 2 0 0.490781638771296 1 0.509218361228704
254 1 2 0 0.490781638771296 1 0.509218361228704
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 0 1 0 1
281 1 2 0 0.490781638771296 1 0.509218361228704
282 1 2 0 0.490781638771296 1 0.509218361228704
283 0 1 0 1
284 1 2 0 0.490781638771296 1 0.509218361228704
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 0 1 0 1
291 1 2 0 0.490781638771296 1 0.509218361228704
292 1 2 0 0.490781638771296 1 0.509218361228704
293 1 2 0 0.490781638771296 1 0.509218361228704
294 1 2 0 0.490781638771296 1 0.509218361228704
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
2
## name
robot-at(x14, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(12)) and($a(2) $s(12)) and($a(0) $s(12)) and($a(3) $s(12))) : $c(0)) (or(and($a(1) $s(11)) and($a(2) $s(13)) and($a(0) $s(28)) and($a(3) $s(16))) : Bernoulli($c(0.524497988633811))) ($c(1) : $s(12)) )
## determinized formula
switch( (or($s(5) and($a(1) $s(12)) and($a(2) $s(12)) and($a(0) $s(12)) and($a(3) $s(12))) : $c(0)) (or(and($a(1) $s(11)) and($a(2) $s(13)) and($a(0) $s(28)) and($a(3) $s(16))) : $c(1)) ($c(1) : $s(12)) )
## hash index
12
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.475502011366189 1 0.524497988633811
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 1 1 1 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 1 1 1 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 1 2 0 0.475502011366189 1 0.524497988633811
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 1 2 0 0.475502011366189 1 0.524497988633811
53 1 2 0 0.475502011366189 1 0.524497988633811
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 1 2 0 0.475502011366189 1 0.524497988633811
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 1 2 0 0.475502011366189 1 0.524497988633811
92 0 1 0 1
93 1 2 0 0.475502011366189 1 0.524497988633811
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 1 2 0 0.475502011366189 1 0.524497988633811
122 1 2 0 0.475502011366189 1 0.524497988633811
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 1 2 0 0.475502011366189 1 0.524497988633811
132 1 2 0 0.475502011366189 1 0.524497988633811
133 1 2 0 0.475502011366189 1 0.524497988633811
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 1 2 0 0.475502011366189 1 0.524497988633811
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 1 0 1
172 0 1 0 1
173 1 2 0 0.475502011366189 1 0.524497988633811
174 1 2 0 0.475502011366189 1 0.524497988633811
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 1 1 1 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 1 1 1 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 1 0 1
202 1 2 0 0.475502011366189 1 0.524497988633811
203 0 1 0 1
204 1 2 0 0.475502011366189 1 0.524497988633811
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 1 0 1
212 1 2 0 0.475502011366189 1 0.524497988633811
213 1 2 0 0.475502011366189 1 0.524497988633811
214 1 2 0 0.475502011366189 1 0.524497988633811
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 1 2 0 0.475502011366189 1 0.524497988633811
242 0 1 0 1
243 0 1 0 1
244 1 2 0 0.475502011366189 1 0.524497988633811
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 1 2 0 0.475502011366189 1 0.524497988633811
252 0 1 0 1
253 1 2 0 0.475502011366189 1 0.524497988633811
254 1 2 0 0.475502011366189 1 0.524497988633811
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 0 1 0 1
281 1 2 0 0.475502011366189 1 0.524497988633811
282 1 2 0 0.475502011366189 1 0.524497988633811
283 0 1 0 1
284 1 2 0 0.475502011366189 1 0.524497988633811
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 0 1 0 1
291 1 2 0 0.475502011366189 1 0.524497988633811
292 1 2 0 0.475502011366189 1 0.524497988633811
293 1 2 0 0.475502011366189 1 0.524497988633811
294 1 2 0 0.475502011366189 1 0.524497988633811
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
3
## name
robot-at(x14, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(13)) and($a(2) $s(13)) and($a(0) $s(13)) and($a(3) $s(13))) : $c(0)) (or(and($a(1) $s(12)) and($a(2) $s(1)) and($a(0) $s(29)) and($a(3) $s(17))) : Bernoulli($c(0.525006419047713))) ($c(1) : $s(13)) )
## determinized formula
switch( (or($s(5) and($a(1) $s(13)) and($a(2) $s(13)) and($a(0) $s(13)) and($a(3) $s(13))) : $c(0)) (or(and($a(1) $s(12)) and($a(2) $s(1)) and($a(0) $s(29)) and($a(3) $s(17))) : $c(1)) ($c(1) : $s(13)) )
## hash index
13
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 1 2 0 0.474993580952287 1 0.525006419047713
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 1 2 0 0.474993580952287 1 0.525006419047713
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 1 2 0 0.474993580952287 1 0.525006419047713
28 1 2 0 0.474993580952287 1 0.525006419047713
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 1 1 1 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 1 1 1 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 1 2 0 0.474993580952287 1 0.525006419047713
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 1 2 0 0.474993580952287 1 0.525006419047713
87 1 2 0 0.474993580952287 1 0.525006419047713
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 1 2 0 0.474993580952287 1 0.525006419047713
102 0 1 0 1
103 1 2 0 0.474993580952287 1 0.525006419047713
104 0 1 0 1
105 0 1 0 1
106 1 2 0 0.474993580952287 1 0.525006419047713
107 1 2 0 0.474993580952287 1 0.525006419047713
108 1 2 0 0.474993580952287 1 0.525006419047713
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 1 1 1 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 1 1 1 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 1 2 0 0.474993580952287 1 0.525006419047713
165 0 1 0 1
166 0 1 0 1
167 1 2 0 0.474993580952287 1 0.525006419047713
168 0 1 0 1
169 1 2 0 0.474993580952287 1 0.525006419047713
170 0 1 0 1
171 0 1 0 1
172 0 1 0 1
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 1 0 1
182 0 1 0 1
183 1 2 0 0.474993580952287 1 0.525006419047713
184 1 2 0 0.474993580952287 1 0.525006419047713
185 0 1 0 1
186 0 1 0 1
187 1 2 0 0.474993580952287 1 0.525006419047713
188 1 2 0 0.474993580952287 1 0.525006419047713
189 1 2 0 0.474993580952287 1 0.525006419047713
190 0 1 0 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 1 1 1 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 1 1 1 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 1 2 0 0.474993580952287 1 0.525006419047713
242 0 1 0 1
243 0 1 0 1
244 1 2 0 0.474993580952287 1 0.525006419047713
245 0 1 0 1
246 1 2 0 0.474993580952287 1 0.525006419047713
247 1 2 0 0.474993580952287 1 0.525006419047713
248 0 1 0 1
249 1 2 0 0.474993580952287 1 0.525006419047713
250 0 1 0 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 1 2 0 0.474993580952287 1 0.525006419047713
262 0 1 0 1
263 1 2 0 0.474993580952287 1 0.525006419047713
264 1 2 0 0.474993580952287 1 0.525006419047713
265 0 1 0 1
266 1 2 0 0.474993580952287 1 0.525006419047713
267 1 2 0 0.474993580952287 1 0.525006419047713
268 1 2 0 0.474993580952287 1 0.525006419047713
269 1 2 0 0.474993580952287 1 0.525006419047713
270 0 1 0 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 1 1 1 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 0 1 0 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 1 1 1 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 0 1 0 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
4
## name
robot-at(x21, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(14)) and($a(2) $s(14)) and($a(0) $s(14)) and($a(3) $s(14))) : $c(0)) (or(and($a(1) $s(2)) and($a(2) $s(15)) and($a(0) $s(10)) and($a(3) $s(18))) : Bernoulli($c(0.297873362898827))) ($c(1) : $s(14)) )
## determinized formula
switch( (or($s(5) and($a(1) $s(14)) and($a(2) $s(14)) and($a(0) $s(14)) and($a(3) $s(14))) : $c(0)) (or(and($a(1) $s(2)) and($a(2) $s(15)) and($a(0) $s(10)) and($a(3) $s(18))) : $c(0)) ($c(1) : $s(14)) )
## hash index
14
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 2 0 0.702126637101173 1 0.297873362898827
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 2 0 0.702126637101173 1 0.297873362898827
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 2 0 0.702126637101173 1 0.297873362898827
29 0 2 0 0.702126637101173 1 0.297873362898827
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 1 1 1 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 1 1 1 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 2 0 0.702126637101173 1 0.297873362898827
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 2 0 0.702126637101173 1 0.297873362898827
88 0 2 0 0.702126637101173 1 0.297873362898827
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 2 0 0.702126637101173 1 0.297873362898827
103 0 1 0 1
104 0 2 0 0.702126637101173 1 0.297873362898827
105 0 1 0 1
106 0 1 0 1
107 0 2 0 0.702126637101173 1 0.297873362898827
108 0 2 0 0.702126637101173 1 0.297873362898827
109 0 2 0 0.702126637101173 1 0.297873362898827
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 1 1 1 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 1 1 1 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.702126637101173 1 0.297873362898827
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 2 0 0.702126637101173 1 0.297873362898827
167 0 1 0 1
168 0 2 0 0.702126637101173 1 0.297873362898827
169 0 1 0 1
170 0 1 0 1
171 0 1 0 1
172 0 1 0 1
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.702126637101173 1 0.297873362898827
182 0 1 0 1
183 0 1 0 1
184 0 2 0 0.702126637101173 1 0.297873362898827
185 0 1 0 1
186 0 2 0 0.702126637101173 1 0.297873362898827
187 0 1 0 1
188 0 2 0 0.702126637101173 1 0.297873362898827
189 0 2 0 0.702126637101173 1 0.297873362898827
190 0 1 0 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 1 1 1 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 1 1 1 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 0 2 0 0.702126637101173 1 0.297873362898827
242 0 2 0 0.702126637101173 1 0.297873362898827
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 2 0 0.702126637101173 1 0.297873362898827
247 0 2 0 0.702126637101173 1 0.297873362898827
248 0 2 0 0.702126637101173 1 0.297873362898827
249 0 1 0 1
250 0 1 0 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 2 0 0.702126637101173 1 0.297873362898827
262 0 2 0 0.702126637101173 1 0.297873362898827
263 0 1 0 1
264 0 2 0 0.702126637101173 1 0.297873362898827
265 0 1 0 1
266 0 2 0 0.702126637101173 1 0.297873362898827
267 0 2 0 0.702126637101173 1 0.297873362898827
268 0 2 0 0.702126637101173 1 0.297873362898827
269 0 2 0 0.702126637101173 1 0.297873362898827
270 0 1 0 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 1 1 1 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 0 1 0 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 1 1 1 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 0 1 0 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
5
## name
robot-at(x21, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(15)) and($a(2) $s(15)) and($a(0) $s(15)) and($a(3) $s(15))) : $c(0)) (or(and($a(1) $s(14)) and($a(2) $s(16)) and($a(0) $s(11)) and($a(3) $s(19))) : Bernoulli($c(0.272078393027186))) ($c(1) : $s(15)) )
## determinized formula
switch( (or($s(5) and($a(1) $s(15)) and($a(2) $s(15)) and($a(0) $s(15)) and($a(3) $s(15))) : $c(0)) (or(and($a(1) $s(14)) and($a(2) $s(16)) and($a(0) $s(11)) and($a(3) $s(19))) : $c(0)) ($c(1) : $s(15)) )
## hash index
15
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 2 0 0.727921606972814 1 0.272078393027186
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 2 0 0.727921606972814 1 0.272078393027186
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 2 0 0.727921606972814 1 0.272078393027186
34 0 2 0 0.727921606972814 1 0.272078393027186
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 2 0 0.727921606972814 1 0.272078393027186
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 2 0 0.727921606972814 1 0.272078393027186
93 0 1 0 1
94 0 2 0 0.727921606972814 1 0.272078393027186
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 2 0 0.727921606972814 1 0.272078393027186
103 0 2 0 0.727921606972814 1 0.272078393027186
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 2 0 0.727921606972814 1 0.272078393027186
113 0 2 0 0.727921606972814 1 0.272078393027186
114 0 2 0 0.727921606972814 1 0.272078393027186
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.727921606972814 1 0.272078393027186
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.727921606972814 1 0.272078393027186
172 0 1 0 1
173 0 1 0 1
174 0 2 0 0.727921606972814 1 0.272078393027186
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.727921606972814 1 0.272078393027186
182 0 1 0 1
183 0 2 0 0.727921606972814 1 0.272078393027186
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 2 0 0.727921606972814 1 0.272078393027186
192 0 1 0 1
193 0 2 0 0.727921606972814 1 0.272078393027186
194 0 2 0 0.727921606972814 1 0.272078393027186
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 0 2 0 0.727921606972814 1 0.272078393027186
242 0 2 0 0.727921606972814 1 0.272078393027186
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 0 2 0 0.727921606972814 1 0.272078393027186
252 0 2 0 0.727921606972814 1 0.272078393027186
253 0 1 0 1
254 0 2 0 0.727921606972814 1 0.272078393027186
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 2 0 0.727921606972814 1 0.272078393027186
262 0 2 0 0.727921606972814 1 0.272078393027186
263 0 2 0 0.727921606972814 1 0.272078393027186
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 2 0 0.727921606972814 1 0.272078393027186
272 0 2 0 0.727921606972814 1 0.272078393027186
273 0 2 0 0.727921606972814 1 0.272078393027186
274 0 2 0 0.727921606972814 1 0.272078393027186
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
6
## name
robot-at(x21, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(16)) and($a(2) $s(16)) and($a(0) $s(16)) and($a(3) $s(16))) : $c(0)) (or(and($a(1) $s(15)) and($a(2) $s(17)) and($a(0) $s(12)) and($a(3) $s(20))) : Bernoulli($c(0.294511631131172))) ($c(1) : $s(16)) )
## determinized formula
switch( (or($s(5) and($a(1) $s(16)) and($a(2) $s(16)) and($a(0) $s(16)) and($a(3) $s(16))) : $c(0)) (or(and($a(1) $s(15)) and($a(2) $s(17)) and($a(0) $s(12)) and($a(3) $s(20))) : $c(0)) ($c(1) : $s(16)) )
## hash index
16
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 2 0 0.705488368868828 1 0.294511631131172
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 2 0 0.705488368868828 1 0.294511631131172
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 2 0 0.705488368868828 1 0.294511631131172
34 0 2 0 0.705488368868828 1 0.294511631131172
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 2 0 0.705488368868828 1 0.294511631131172
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 2 0 0.705488368868828 1 0.294511631131172
93 0 1 0 1
94 0 2 0 0.705488368868828 1 0.294511631131172
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 2 0 0.705488368868828 1 0.294511631131172
103 0 2 0 0.705488368868828 1 0.294511631131172
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 2 0 0.705488368868828 1 0.294511631131172
113 0 2 0 0.705488368868828 1 0.294511631131172
114 0 2 0 0.705488368868828 1 0.294511631131172
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.705488368868828 1 0.294511631131172
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.705488368868828 1 0.294511631131172
172 0 1 0 1
173 0 1 0 1
174 0 2 0 0.705488368868828 1 0.294511631131172
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.705488368868828 1 0.294511631131172
182 0 1 0 1
183 0 2 0 0.705488368868828 1 0.294511631131172
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 2 0 0.705488368868828 1 0.294511631131172
192 0 1 0 1
193 0 2 0 0.705488368868828 1 0.294511631131172
194 0 2 0 0.705488368868828 1 0.294511631131172
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 0 2 0 0.705488368868828 1 0.294511631131172
242 0 2 0 0.705488368868828 1 0.294511631131172
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 0 2 0 0.705488368868828 1 0.294511631131172
252 0 2 0 0.705488368868828 1 0.294511631131172
253 0 1 0 1
254 0 2 0 0.705488368868828 1 0.294511631131172
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 2 0 0.705488368868828 1 0.294511631131172
262 0 2 0 0.705488368868828 1 0.294511631131172
263 0 2 0 0.705488368868828 1 0.294511631131172
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 2 0 0.705488368868828 1 0.294511631131172
272 0 2 0 0.705488368868828 1 0.294511631131172
273 0 2 0 0.705488368868828 1 0.294511631131172
274 0 2 0 0.705488368868828 1 0.294511631131172
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
7
## name
robot-at(x21, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(17)) and($a(2) $s(17)) and($a(0) $s(17)) and($a(3) $s(17))) : $c(0)) (or(and($a(1) $s(16)) and($a(2) $s(3)) and($a(0) $s(13)) and($a(3) $s(21))) : Bernoulli($c(0.278771745041013))) ($c(1) : $s(17)) )
## determinized formula
switch( (or($s(5) and($a(1) $s(17)) and($a(2) $s(17)) and($a(0) $s(17)) and($a(3) $s(17))) : $c(0)) (or(and($a(1) $s(16)) and($a(2) $s(3)) and($a(0) $s(13)) and($a(3) $s(21))) : $c(0)) ($c(1) : $s(17)) )
## hash index
17
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 2 0 0.721228254958987 1 0.278771745041013
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 2 0 0.721228254958987 1 0.278771745041013
25 0 1 0 1
26 0 1 0 1
27 0 2 0 0.721228254958987 1 0.278771745041013
28 0 1 0 1
29 0 2 0 0.721228254958987 1 0.278771745041013
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 2 0 0.721228254958987 1 0.278771745041013
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 2 0 0.721228254958987 1 0.278771745041013
48 0 2 0 0.721228254958987 1 0.278771745041013
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 2 0 0.721228254958987 1 0.278771745041013
64 0 2 0 0.721228254958987 1 0.278771745041013
65 0 1 0 1
66 0 1 0 1
67 0 2 0 0.721228254958987 1 0.278771745041013
68 0 2 0 0.721228254958987 1 0.278771745041013
69 0 2 0 0.721228254958987 1 0.278771745041013
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 1 1 1 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 1 1 1 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 1 1 1 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 1 1 1 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.721228254958987 1 0.278771745041013
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 2 0 0.721228254958987 1 0.278771745041013
167 0 2 0 0.721228254958987 1 0.278771745041013
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 1 0 1
172 0 1 0 1
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.721228254958987 1 0.278771745041013
182 0 1 0 1
183 0 1 0 1
184 0 2 0 0.721228254958987 1 0.278771745041013
185 0 1 0 1
186 0 2 0 0.721228254958987 1 0.278771745041013
187 0 2 0 0.721228254958987 1 0.278771745041013
188 0 1 0 1
189 0 2 0 0.721228254958987 1 0.278771745041013
190 0 1 0 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 2 0 0.721228254958987 1 0.278771745041013
202 0 1 0 1
203 0 2 0 0.721228254958987 1 0.278771745041013
204 0 1 0 1
205 0 1 0 1
206 0 2 0 0.721228254958987 1 0.278771745041013
207 0 2 0 0.721228254958987 1 0.278771745041013
208 0 2 0 0.721228254958987 1 0.278771745041013
209 0 1 0 1
210 0 1 0 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 0 2 0 0.721228254958987 1 0.278771745041013
222 0 1 0 1
223 0 2 0 0.721228254958987 1 0.278771745041013
224 0 2 0 0.721228254958987 1 0.278771745041013
225 0 1 0 1
226 0 2 0 0.721228254958987 1 0.278771745041013
227 0 2 0 0.721228254958987 1 0.278771745041013
228 0 2 0 0.721228254958987 1 0.278771745041013
229 0 2 0 0.721228254958987 1 0.278771745041013
230 0 1 0 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 1 1 1 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 1 1 1 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 1 1 1 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 0 1 0 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 1 1 1 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 0 1 0 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
8
## name
robot-at(x30, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(18)) and($a(2) $s(18)) and($a(3) $s(18))) : $c(0)) (or(and($a(1) $s(4)) and($a(2) $s(19)) and($a(0) $s(14))) : Bernoulli($c(0.0800459077581763))) ($c(1) : $s(18)) )
## determinized formula
switch( (or($s(5) and($a(1) $s(18)) and($a(2) $s(18)) and($a(3) $s(18))) : $c(0)) (or(and($a(1) $s(4)) and($a(2) $s(19)) and($a(0) $s(14))) : $c(0)) ($c(1) : $s(18)) )
## hash index
18
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
160
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 2 0 0.919954092241824 1 0.0800459077581763
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 2 0 0.919954092241824 1 0.0800459077581763
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 2 0 0.919954092241824 1 0.0800459077581763
29 0 2 0 0.919954092241824 1 0.0800459077581763
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 1 1 1 1
45 1 1 1 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 1 1 1 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 2 0 0.919954092241824 1 0.0800459077581763
65 1 1 1 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 2 0 0.919954092241824 1 0.0800459077581763
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 2 0 0.919954092241824 1 0.0800459077581763
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 2 0 0.919954092241824 1 0.0800459077581763
88 0 2 0 0.919954092241824 1 0.0800459077581763
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 2 0 0.919954092241824 1 0.0800459077581763
103 0 1 0 1
104 0 2 0 0.919954092241824 1 0.0800459077581763
105 0 1 0 1
106 0 1 0 1
107 0 2 0 0.919954092241824 1 0.0800459077581763
108 0 2 0 0.919954092241824 1 0.0800459077581763
109 0 2 0 0.919954092241824 1 0.0800459077581763
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 1 1 1 1
125 1 1 1 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 1 1 1 1
130 0 1 0 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 2 0 0.919954092241824 1 0.0800459077581763
145 1 1 1 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 2 0 0.919954092241824 1 0.0800459077581763
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
9
## name
robot-at(x30, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(19)) and($a(2) $s(19)) and($a(3) $s(19))) : $c(0)) (or(and($a(1) $s(18)) and($a(2) $s(20)) and($a(0) $s(15))) : Bernoulli($c(0.0802786229178309))) ($c(1) : $s(19)) )
## determinized formula
switch( (or($s(5) and($a(1) $s(19)) and($a(2) $s(19)) and($a(3) $s(19))) : $c(0)) (or(and($a(1) $s(18)) and($a(2) $s(20)) and($a(0) $s(15))) : $c(0)) ($c(1) : $s(19)) )
## hash index
19
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
160
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 2 0 0.919721377082169 1 0.0802786229178309
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 2 0 0.919721377082169 1 0.0802786229178309
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 2 0 0.919721377082169 1 0.0802786229178309
34 0 2 0 0.919721377082169 1 0.0802786229178309
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 1 1 1 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 2 0 0.919721377082169 1 0.0802786229178309
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 1 1 1 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 2 0 0.919721377082169 1 0.0802786229178309
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 2 0 0.919721377082169 1 0.0802786229178309
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 2 0 0.919721377082169 1 0.0802786229178309
93 0 1 0 1
94 0 2 0 0.919721377082169 1 0.0802786229178309
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 2 0 0.919721377082169 1 0.0802786229178309
103 0 2 0 0.919721377082169 1 0.0802786229178309
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 2 0 0.919721377082169 1 0.0802786229178309
113 0 2 0 0.919721377082169 1 0.0802786229178309
114 0 2 0 0.919721377082169 1 0.0802786229178309
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 1 1 1 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 2 0 0.919721377082169 1 0.0802786229178309
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 1 1 1 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 2 0 0.919721377082169 1 0.0802786229178309
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
10
## name
robot-at(x30, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(20)) and($a(2) $s(20)) and($a(3) $s(20))) : $c(0)) (or(and($a(1) $s(19)) and($a(2) $s(21)) and($a(0) $s(16))) : Bernoulli($c(0.0892714198562317))) ($c(1) : $s(20)) )
## determinized formula
switch( (or($s(5) and($a(1) $s(20)) and($a(2) $s(20)) and($a(3) $s(20))) : $c(0)) (or(and($a(1) $s(19)) and($a(2) $s(21)) and($a(0) $s(16))) : $c(0)) ($c(1) : $s(20)) )
## hash index
20
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
160
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 2 0 0.910728580143768 1 0.0892714198562317
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 2 0 0.910728580143768 1 0.0892714198562317
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 2 0 0.910728580143768 1 0.0892714198562317
34 0 2 0 0.910728580143768 1 0.0892714198562317
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 1 1 1 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 2 0 0.910728580143768 1 0.0892714198562317
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 1 1 1 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 2 0 0.910728580143768 1 0.0892714198562317
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 2 0 0.910728580143768 1 0.0892714198562317
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 2 0 0.910728580143768 1 0.0892714198562317
93 0 1 0 1
94 0 2 0 0.910728580143768 1 0.0892714198562317
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 2 0 0.910728580143768 1 0.0892714198562317
103 0 2 0 0.910728580143768 1 0.0892714198562317
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 2 0 0.910728580143768 1 0.0892714198562317
113 0 2 0 0.910728580143768 1 0.0892714198562317
114 0 2 0 0.910728580143768 1 0.0892714198562317
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 1 1 1 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 2 0 0.910728580143768 1 0.0892714198562317
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 1 1 1 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 2 0 0.910728580143768 1 0.0892714198562317
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
11
## name
robot-at(x30, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(21)) and($a(2) $s(21)) and($a(3) $s(21))) : $c(0)) (or(and($a(1) $s(20)) and($a(2) $s(5)) and($a(0) $s(17))) : Bernoulli($c(0.0502918232232332))) ($c(1) : $s(21)) )
## determinized formula
switch( (or($s(5) and($a(1) $s(21)) and($a(2) $s(21)) and($a(3) $s(21))) : $c(0)) (or(and($a(1) $s(20)) and($a(2) $s(5)) and($a(0) $s(17))) : $c(0)) ($c(1) : $s(21)) )
## hash index
21
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
80
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 2 0 0.949708176776767 1 0.0502918232232332
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 2 0 0.949708176776767 1 0.0502918232232332
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 2 0 0.949708176776767 1 0.0502918232232332
34 0 2 0 0.949708176776767 1 0.0502918232232332
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 1 1 1 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 2 0 0.949708176776767 1 0.0502918232232332
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 1 1 1 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 2 0 0.949708176776767 1 0.0502918232232332
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
12
## name
robot-at(x6, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(22)) and($a(2) $s(22)) and($a(0) $s(22))) : $c(0)) (or(and($a(1) $s(6)) and($a(2) $s(23)) and($a(3) $s(26))) : Bernoulli($c(0.986827218206599))) ($c(1) : $s(22)) )
## determinized formula
switch( (or($s(5) and($a(1) $s(22)) and($a(2) $s(22)) and($a(0) $s(22))) : $c(0)) (or(and($a(1) $s(6)) and($a(2) $s(23)) and($a(3) $s(26))) : $c(1)) ($c(1) : $s(22)) )
## hash index
22
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
160
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.0131727817934006 1 0.986827218206599
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 1 1 1 1
21 1 1 1 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 1 1 1 1
31 1 1 1 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 1 2 0 0.0131727817934006 1 0.986827218206599
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 1 2 0 0.0131727817934006 1 0.986827218206599
53 1 2 0 0.0131727817934006 1 0.986827218206599
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 1 1 1 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 1 1 1 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 1 2 0 0.0131727817934006 1 0.986827218206599
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 1 2 0 0.0131727817934006 1 0.986827218206599
92 0 1 0 1
93 1 2 0 0.0131727817934006 1 0.986827218206599
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 1 2 0 0.0131727817934006 1 0.986827218206599
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 1 2 0 0.0131727817934006 1 0.986827218206599
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 1 2 0 0.0131727817934006 1 0.986827218206599
122 1 2 0 0.0131727817934006 1 0.986827218206599
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 1 2 0 0.0131727817934006 1 0.986827218206599
132 1 2 0 0.0131727817934006 1 0.986827218206599
133 1 2 0 0.0131727817934006 1 0.986827218206599
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 1 2 0 0.0131727817934006 1 0.986827218206599
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 1 2 0 0.0131727817934006 1 0.986827218206599
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
13
## name
robot-at(x6, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(23)) and($a(2) $s(23)) and($a(0) $s(23))) : $c(0)) (or(and($a(1) $s(22)) and($a(2) $s(24)) and($a(3) $s(27))) : Bernoulli($c(0.975623976439238))) ($c(1) : $s(23)) )
## determinized formula
switch( (or($s(5) and($a(1) $s(23)) and($a(2) $s(23)) and($a(0) $s(23))) : $c(0)) (or(and($a(1) $s(22)) and($a(2) $s(24)) and($a(3) $s(27))) : $c(1)) ($c(1) : $s(23)) )
## hash index
23
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
160
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.0243760235607624 1 0.975623976439238
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 1 1 1 1
21 1 1 1 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 1 1 1 1
31 1 1 1 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 1 2 0 0.0243760235607624 1 0.975623976439238
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 1 2 0 0.0243760235607624 1 0.975623976439238
53 1 2 0 0.0243760235607624 1 0.975623976439238
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 1 1 1 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 1 1 1 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 1 2 0 0.0243760235607624 1 0.975623976439238
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 1 2 0 0.0243760235607624 1 0.975623976439238
92 0 1 0 1
93 1 2 0 0.0243760235607624 1 0.975623976439238
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 1 2 0 0.0243760235607624 1 0.975623976439238
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 1 2 0 0.0243760235607624 1 0.975623976439238
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 1 2 0 0.0243760235607624 1 0.975623976439238
122 1 2 0 0.0243760235607624 1 0.975623976439238
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 1 2 0 0.0243760235607624 1 0.975623976439238
132 1 2 0 0.0243760235607624 1 0.975623976439238
133 1 2 0 0.0243760235607624 1 0.975623976439238
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 1 2 0 0.0243760235607624 1 0.975623976439238
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 1 2 0 0.0243760235607624 1 0.975623976439238
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
14
## name
robot-at(x6, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(24)) and($a(2) $s(24)) and($a(0) $s(24))) : $c(0)) (or(and($a(1) $s(23)) and($a(2) $s(25)) and($a(3) $s(28))) : Bernoulli($c(0.95541518740356))) ($c(1) : $s(24)) )
## determinized formula
switch( (or($s(5) and($a(1) $s(24)) and($a(2) $s(24)) and($a(0) $s(24))) : $c(0)) (or(and($a(1) $s(23)) and($a(2) $s(25)) and($a(3) $s(28))) : $c(1)) ($c(1) : $s(24)) )
## hash index
24
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
160
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.0445848125964403 1 0.95541518740356
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 1 1 1 1
21 1 1 1 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 1 1 1 1
31 1 1 1 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 1 2 0 0.0445848125964403 1 0.95541518740356
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 1 2 0 0.0445848125964403 1 0.95541518740356
53 1 2 0 0.0445848125964403 1 0.95541518740356
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 1 1 1 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 1 1 1 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 1 2 0 0.0445848125964403 1 0.95541518740356
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 1 2 0 0.0445848125964403 1 0.95541518740356
92 0 1 0 1
93 1 2 0 0.0445848125964403 1 0.95541518740356
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 1 2 0 0.0445848125964403 1 0.95541518740356
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 1 2 0 0.0445848125964403 1 0.95541518740356
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 1 2 0 0.0445848125964403 1 0.95541518740356
122 1 2 0 0.0445848125964403 1 0.95541518740356
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 1 2 0 0.0445848125964403 1 0.95541518740356
132 1 2 0 0.0445848125964403 1 0.95541518740356
133 1 2 0 0.0445848125964403 1 0.95541518740356
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 1 2 0 0.0445848125964403 1 0.95541518740356
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 1 2 0 0.0445848125964403 1 0.95541518740356
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
15
## name
robot-at(x6, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(25)) and($a(2) $s(25)) and($a(0) $s(25))) : $c(0)) (or(and($a(1) $s(24)) and($a(2) $s(7)) and($a(3) $s(29))) : Bernoulli($c(0.944610694423318))) ($c(1) : $s(25)) )
## determinized formula
switch( (or($s(5) and($a(1) $s(25)) and($a(2) $s(25)) and($a(0) $s(25))) : $c(0)) (or(and($a(1) $s(24)) and($a(2) $s(7)) and($a(3) $s(29))) : $c(1)) ($c(1) : $s(25)) )
## hash index
25
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
160
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 1 2 0 0.0553893055766821 1 0.944610694423318
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 1 2 0 0.0553893055766821 1 0.944610694423318
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 1 2 0 0.0553893055766821 1 0.944610694423318
33 1 2 0 0.0553893055766821 1 0.944610694423318
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 1 1 1 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 1 1 1 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 1 1 1 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 1 1 1 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 1 2 0 0.0553893055766821 1 0.944610694423318
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 1 2 0 0.0553893055766821 1 0.944610694423318
92 1 2 0 0.0553893055766821 1 0.944610694423318
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 1 2 0 0.0553893055766821 1 0.944610694423318
102 0 1 0 1
103 1 2 0 0.0553893055766821 1 0.944610694423318
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 1 2 0 0.0553893055766821 1 0.944610694423318
112 1 2 0 0.0553893055766821 1 0.944610694423318
113 1 2 0 0.0553893055766821 1 0.944610694423318
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 1 2 0 0.0553893055766821 1 0.944610694423318
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 1 2 0 0.0553893055766821 1 0.944610694423318
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 1 2 0 0.0553893055766821 1 0.944610694423318
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 1 2 0 0.0553893055766821 1 0.944610694423318
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
16
## name
robot-at(x9, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(26)) and($a(2) $s(26)) and($a(0) $s(26)) and($a(3) $s(26))) : $c(0)) (or(and($a(1) $s(8)) and($a(2) $s(27)) and($a(0) $s(22)) and($a(3) $s(10))) : Bernoulli($c(0.761129587423056))) ($c(1) : $s(26)) )
## determinized formula
switch( (or($s(5) and($a(1) $s(26)) and($a(2) $s(26)) and($a(0) $s(26)) and($a(3) $s(26))) : $c(0)) (or(and($a(1) $s(8)) and($a(2) $s(27)) and($a(0) $s(22)) and($a(3) $s(10))) : $c(1)) ($c(1) : $s(26)) )
## hash index
26
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.238870412576944 1 0.761129587423056
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 1 2 0 0.238870412576944 1 0.761129587423056
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 1 2 0 0.238870412576944 1 0.761129587423056
32 0 1 0 1
33 1 2 0 0.238870412576944 1 0.761129587423056
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 1 2 0 0.238870412576944 1 0.761129587423056
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 1 2 0 0.238870412576944 1 0.761129587423056
54 1 2 0 0.238870412576944 1 0.761129587423056
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 1 2 0 0.238870412576944 1 0.761129587423056
62 0 1 0 1
63 0 1 0 1
64 1 2 0 0.238870412576944 1 0.761129587423056
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 1 2 0 0.238870412576944 1 0.761129587423056
72 0 1 0 1
73 1 2 0 0.238870412576944 1 0.761129587423056
74 1 2 0 0.238870412576944 1 0.761129587423056
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 1 2 0 0.238870412576944 1 0.761129587423056
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 1 0 1
172 1 2 0 0.238870412576944 1 0.761129587423056
173 1 2 0 0.238870412576944 1 0.761129587423056
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 1 2 0 0.238870412576944 1 0.761129587423056
182 1 2 0 0.238870412576944 1 0.761129587423056
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 1 2 0 0.238870412576944 1 0.761129587423056
192 1 2 0 0.238870412576944 1 0.761129587423056
193 1 2 0 0.238870412576944 1 0.761129587423056
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 1 0 1
202 1 2 0 0.238870412576944 1 0.761129587423056
203 0 1 0 1
204 1 2 0 0.238870412576944 1 0.761129587423056
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 1 0 1
212 1 2 0 0.238870412576944 1 0.761129587423056
213 1 2 0 0.238870412576944 1 0.761129587423056
214 1 2 0 0.238870412576944 1 0.761129587423056
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 1 2 0 0.238870412576944 1 0.761129587423056
222 1 2 0 0.238870412576944 1 0.761129587423056
223 0 1 0 1
224 1 2 0 0.238870412576944 1 0.761129587423056
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 1 2 0 0.238870412576944 1 0.761129587423056
232 1 2 0 0.238870412576944 1 0.761129587423056
233 1 2 0 0.238870412576944 1 0.761129587423056
234 1 2 0 0.238870412576944 1 0.761129587423056
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
17
## name
robot-at(x9, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(27)) and($a(2) $s(27)) and($a(0) $s(27)) and($a(3) $s(27))) : $c(0)) (or(and($a(1) $s(26)) and($a(2) $s(28)) and($a(0) $s(23)) and($a(3) $s(11))) : Bernoulli($c(0.7256391774863))) ($c(1) : $s(27)) )
## determinized formula
switch( (or($s(5) and($a(1) $s(27)) and($a(2) $s(27)) and($a(0) $s(27)) and($a(3) $s(27))) : $c(0)) (or(and($a(1) $s(26)) and($a(2) $s(28)) and($a(0) $s(23)) and($a(3) $s(11))) : $c(1)) ($c(1) : $s(27)) )
## hash index
27
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 1 2 0 0.2743608225137 1 0.7256391774863
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 1 2 0 0.2743608225137 1 0.7256391774863
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 1 2 0 0.2743608225137 1 0.7256391774863
32 0 1 0 1
33 0 1 0 1
34 1 2 0 0.2743608225137 1 0.7256391774863
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 1 2 0 0.2743608225137 1 0.7256391774863
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 1 2 0 0.2743608225137 1 0.7256391774863
52 0 1 0 1
53 1 2 0 0.2743608225137 1 0.7256391774863
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 1 2 0 0.2743608225137 1 0.7256391774863
64 1 2 0 0.2743608225137 1 0.7256391774863
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 1 2 0 0.2743608225137 1 0.7256391774863
72 0 1 0 1
73 1 2 0 0.2743608225137 1 0.7256391774863
74 1 2 0 0.2743608225137 1 0.7256391774863
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 1 2 0 0.2743608225137 1 0.7256391774863
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 1 2 0 0.2743608225137 1 0.7256391774863
172 1 2 0 0.2743608225137 1 0.7256391774863
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 1 0 1
182 1 2 0 0.2743608225137 1 0.7256391774863
183 0 1 0 1
184 1 2 0 0.2743608225137 1 0.7256391774863
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 1 2 0 0.2743608225137 1 0.7256391774863
192 1 2 0 0.2743608225137 1 0.7256391774863
193 0 1 0 1
194 1 2 0 0.2743608225137 1 0.7256391774863
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 1 0 1
202 1 2 0 0.2743608225137 1 0.7256391774863
203 1 2 0 0.2743608225137 1 0.7256391774863
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 1 2 0 0.2743608225137 1 0.7256391774863
212 1 2 0 0.2743608225137 1 0.7256391774863
213 1 2 0 0.2743608225137 1 0.7256391774863
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 0 1 0 1
222 1 2 0 0.2743608225137 1 0.7256391774863
223 1 2 0 0.2743608225137 1 0.7256391774863
224 1 2 0 0.2743608225137 1 0.7256391774863
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 1 2 0 0.2743608225137 1 0.7256391774863
232 1 2 0 0.2743608225137 1 0.7256391774863
233 1 2 0 0.2743608225137 1 0.7256391774863
234 1 2 0 0.2743608225137 1 0.7256391774863
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
18
## name
robot-at(x9, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(28)) and($a(2) $s(28)) and($a(0) $s(28)) and($a(3) $s(28))) : $c(0)) (or(and($a(1) $s(27)) and($a(2) $s(29)) and($a(0) $s(24)) and($a(3) $s(12))) : Bernoulli($c(0.757241037208587))) ($c(1) : $s(28)) )
## determinized formula
switch( (or($s(5) and($a(1) $s(28)) and($a(2) $s(28)) and($a(0) $s(28)) and($a(3) $s(28))) : $c(0)) (or(and($a(1) $s(27)) and($a(2) $s(29)) and($a(0) $s(24)) and($a(3) $s(12))) : $c(1)) ($c(1) : $s(28)) )
## hash index
28
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 1 2 0 0.242758962791413 1 0.757241037208587
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 1 2 0 0.242758962791413 1 0.757241037208587
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 1 2 0 0.242758962791413 1 0.757241037208587
32 0 1 0 1
33 0 1 0 1
34 1 2 0 0.242758962791413 1 0.757241037208587
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 1 2 0 0.242758962791413 1 0.757241037208587
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 1 2 0 0.242758962791413 1 0.757241037208587
52 0 1 0 1
53 1 2 0 0.242758962791413 1 0.757241037208587
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 1 2 0 0.242758962791413 1 0.757241037208587
64 1 2 0 0.242758962791413 1 0.757241037208587
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 1 2 0 0.242758962791413 1 0.757241037208587
72 0 1 0 1
73 1 2 0 0.242758962791413 1 0.757241037208587
74 1 2 0 0.242758962791413 1 0.757241037208587
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 1 2 0 0.242758962791413 1 0.757241037208587
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 1 2 0 0.242758962791413 1 0.757241037208587
172 1 2 0 0.242758962791413 1 0.757241037208587
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 1 0 1
182 1 2 0 0.242758962791413 1 0.757241037208587
183 0 1 0 1
184 1 2 0 0.242758962791413 1 0.757241037208587
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 1 2 0 0.242758962791413 1 0.757241037208587
192 1 2 0 0.242758962791413 1 0.757241037208587
193 0 1 0 1
194 1 2 0 0.242758962791413 1 0.757241037208587
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 1 0 1
202 1 2 0 0.242758962791413 1 0.757241037208587
203 1 2 0 0.242758962791413 1 0.757241037208587
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 1 2 0 0.242758962791413 1 0.757241037208587
212 1 2 0 0.242758962791413 1 0.757241037208587
213 1 2 0 0.242758962791413 1 0.757241037208587
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 0 1 0 1
222 1 2 0 0.242758962791413 1 0.757241037208587
223 1 2 0 0.242758962791413 1 0.757241037208587
224 1 2 0 0.242758962791413 1 0.757241037208587
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 1 2 0 0.242758962791413 1 0.757241037208587
232 1 2 0 0.242758962791413 1 0.757241037208587
233 1 2 0 0.242758962791413 1 0.757241037208587
234 1 2 0 0.242758962791413 1 0.757241037208587
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
19
## name
robot-at(x9, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(29)) and($a(2) $s(29)) and($a(0) $s(29)) and($a(3) $s(29))) : $c(0)) (or(and($a(1) $s(28)) and($a(2) $s(9)) and($a(0) $s(25)) and($a(3) $s(13))) : Bernoulli($c(0.73500944674015))) ($c(1) : $s(29)) )
## determinized formula
switch( (or($s(5) and($a(1) $s(29)) and($a(2) $s(29)) and($a(0) $s(29)) and($a(3) $s(29))) : $c(0)) (or(and($a(1) $s(28)) and($a(2) $s(9)) and($a(0) $s(25)) and($a(3) $s(13))) : $c(1)) ($c(1) : $s(29)) )
## hash index
29
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 1 2 0 0.26499055325985 1 0.73500944674015
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 1 2 0 0.26499055325985 1 0.73500944674015
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 1 2 0 0.26499055325985 1 0.73500944674015
32 1 2 0 0.26499055325985 1 0.73500944674015
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 1 2 0 0.26499055325985 1 0.73500944674015
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 1 2 0 0.26499055325985 1 0.73500944674015
53 0 1 0 1
54 1 2 0 0.26499055325985 1 0.73500944674015
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 1 2 0 0.26499055325985 1 0.73500944674015
62 0 1 0 1
63 0 1 0 1
64 1 2 0 0.26499055325985 1 0.73500944674015
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 1 2 0 0.26499055325985 1 0.73500944674015
72 1 2 0 0.26499055325985 1 0.73500944674015
73 0 1 0 1
74 1 2 0 0.26499055325985 1 0.73500944674015
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 1 0 1
83 1 2 0 0.26499055325985 1 0.73500944674015
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 1 2 0 0.26499055325985 1 0.73500944674015
93 1 2 0 0.26499055325985 1 0.73500944674015
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 1 2 0 0.26499055325985 1 0.73500944674015
102 0 1 0 1
103 1 2 0 0.26499055325985 1 0.73500944674015
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 1 2 0 0.26499055325985 1 0.73500944674015
112 1 2 0 0.26499055325985 1 0.73500944674015
113 1 2 0 0.26499055325985 1 0.73500944674015
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 0 1 0 1
122 0 1 0 1
123 1 2 0 0.26499055325985 1 0.73500944674015
124 1 2 0 0.26499055325985 1 0.73500944674015
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 0 1 0 1
132 1 2 0 0.26499055325985 1 0.73500944674015
133 1 2 0 0.26499055325985 1 0.73500944674015
134 1 2 0 0.26499055325985 1 0.73500944674015
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 1 2 0 0.26499055325985 1 0.73500944674015
142 0 1 0 1
143 1 2 0 0.26499055325985 1 0.73500944674015
144 1 2 0 0.26499055325985 1 0.73500944674015
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 1 2 0 0.26499055325985 1 0.73500944674015
152 1 2 0 0.26499055325985 1 0.73500944674015
153 1 2 0 0.26499055325985 1 0.73500944674015
154 1 2 0 0.26499055325985 1 0.73500944674015
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 1 1 1 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 1 1 1 1
171 0 1 0 1
172 0 1 0 1
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 1 1 1 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 1 1 1 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####REWARD#####
## formula
-($c(0) ~($s(5)))
## min
-1
## max
0
## independent from actions
1
## hash index
30
## caching type
VECTOR
## precomputed results
2
0 -1
1 0
## kleene caching type
VECTOR
## kleene caching vec size
3
## action hash keys
0 0
1 0
2 0
3 0
4 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 1 0 0 
## relevant preconditions
0


## index
4
## state
1 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## kleene state hash key base
1
## state fluent hash keys (first line is the number of keys)
4
0 5
2 5
8 5
10 5
## kleene state fluent hash keys (first line is the number of keys)
4
0 5
2 5
8 5
10 5

## index
1
## state hash key (for each value in the domain)
0 2
## kleene state hash key base
3
## state fluent hash keys (first line is the number of keys)
4
1 5
3 5
9 5
13 5
## kleene state fluent hash keys (first line is the number of keys)
4
1 5
3 5
9 5
13 5

## index
2
## state hash key (for each value in the domain)
0 4
## kleene state hash key base
9
## state fluent hash keys (first line is the number of keys)
4
0 10
2 10
4 5
14 5
## kleene state fluent hash keys (first line is the number of keys)
4
0 15
2 15
4 5
14 5

## index
3
## state hash key (for each value in the domain)
0 8
## kleene state hash key base
27
## state fluent hash keys (first line is the number of keys)
4
1 10
3 10
5 5
17 5
## kleene state fluent hash keys (first line is the number of keys)
4
1 15
3 15
5 5
17 5

## index
4
## state hash key (for each value in the domain)
0 16
## kleene state hash key base
81
## state fluent hash keys (first line is the number of keys)
3
2 20
4 10
18 5
## kleene state fluent hash keys (first line is the number of keys)
3
2 45
4 15
18 5

## index
5
## state hash key (for each value in the domain)
0 32
## kleene state hash key base
243
## state fluent hash keys (first line is the number of keys)
31
0 20
1 20
2 40
3 20
4 20
5 10
6 5
7 5
8 10
9 10
10 10
11 5
12 5
13 10
14 10
15 5
16 5
17 10
18 10
19 5
20 5
21 5
22 5
23 5
24 5
25 5
26 5
27 5
28 5
29 5
30 1
## kleene state fluent hash keys (first line is the number of keys)
31
0 45
1 45
2 135
3 45
4 45
5 15
6 5
7 5
8 15
9 15
10 15
11 5
12 5
13 15
14 15
15 5
16 5
17 15
18 15
19 5
20 5
21 5
22 5
23 5
24 5
25 5
26 5
27 5
28 5
29 5
30 1

## index
6
## state hash key (for each value in the domain)
0 64
## kleene state hash key base
729
## state fluent hash keys (first line is the number of keys)
3
6 10
8 20
22 10
## kleene state fluent hash keys (first line is the number of keys)
3
6 15
8 45
22 15

## index
7
## state hash key (for each value in the domain)
0 128
## kleene state hash key base
2187
## state fluent hash keys (first line is the number of keys)
3
7 10
9 20
25 10
## kleene state fluent hash keys (first line is the number of keys)
3
7 15
9 45
25 15

## index
8
## state hash key (for each value in the domain)
0 256
## kleene state hash key base
6561
## state fluent hash keys (first line is the number of keys)
4
0 40
6 20
8 40
26 10
## kleene state fluent hash keys (first line is the number of keys)
4
0 135
6 45
8 135
26 15

## index
9
## state hash key (for each value in the domain)
0 512
## kleene state hash key base
19683
## state fluent hash keys (first line is the number of keys)
4
1 40
7 20
9 40
29 10
## kleene state fluent hash keys (first line is the number of keys)
4
1 135
7 45
9 135
29 15


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1024
## kleene state hash key base
59049
## state fluent hash keys (first line is the number of keys)
5
0 80
10 20
11 10
14 20
26 20
## kleene state fluent hash keys (first line is the number of keys)
5
0 405
10 45
11 15
14 45
26 45

## index
1
## state hash key (for each value in the domain)
0 2048
## kleene state hash key base
177147
## state fluent hash keys (first line is the number of keys)
5
10 40
11 20
12 10
15 10
27 10
## kleene state fluent hash keys (first line is the number of keys)
5
10 135
11 45
12 15
15 15
27 15

## index
2
## state hash key (for each value in the domain)
0 4096
## kleene state hash key base
531441
## state fluent hash keys (first line is the number of keys)
5
11 40
12 20
13 20
16 10
28 10
## kleene state fluent hash keys (first line is the number of keys)
5
11 135
12 45
13 45
16 15
28 15

## index
3
## state hash key (for each value in the domain)
0 8192
## kleene state hash key base
1594323
## state fluent hash keys (first line is the number of keys)
5
1 80
12 40
13 40
17 20
29 20
## kleene state fluent hash keys (first line is the number of keys)
5
1 405
12 135
13 135
17 45
29 45

## index
4
## state hash key (for each value in the domain)
0 16384
## kleene state hash key base
4782969
## state fluent hash keys (first line is the number of keys)
5
2 80
10 80
14 40
15 20
18 20
## kleene state fluent hash keys (first line is the number of keys)
5
2 405
10 405
14 135
15 45
18 45

## index
5
## state hash key (for each value in the domain)
0 32768
## kleene state hash key base
14348907
## state fluent hash keys (first line is the number of keys)
5
11 80
14 80
15 40
16 20
19 10
## kleene state fluent hash keys (first line is the number of keys)
5
11 405
14 405
15 135
16 45
19 15

## index
6
## state hash key (for each value in the domain)
0 65536
## kleene state hash key base
43046721
## state fluent hash keys (first line is the number of keys)
5
12 80
15 80
16 40
17 40
20 10
## kleene state fluent hash keys (first line is the number of keys)
5
12 405
15 405
16 135
17 135
20 15

## index
7
## state hash key (for each value in the domain)
0 131072
## kleene state hash key base
129140163
## state fluent hash keys (first line is the number of keys)
5
3 40
13 80
16 80
17 80
21 10
## kleene state fluent hash keys (first line is the number of keys)
5
3 135
13 405
16 405
17 405
21 15

## index
8
## state hash key (for each value in the domain)
0 262144
## kleene state hash key base
387420489
## state fluent hash keys (first line is the number of keys)
4
4 40
14 160
18 40
19 20
## kleene state fluent hash keys (first line is the number of keys)
4
4 135
14 1215
18 135
19 45

## index
9
## state hash key (for each value in the domain)
0 524288
## kleene state hash key base
1162261467
## state fluent hash keys (first line is the number of keys)
4
15 160
18 80
19 40
20 20
## kleene state fluent hash keys (first line is the number of keys)
4
15 1215
18 405
19 135
20 45

## index
10
## state hash key (for each value in the domain)
0 1048576
## kleene state hash key base
3486784401
## state fluent hash keys (first line is the number of keys)
4
16 160
19 80
20 40
21 20
## kleene state fluent hash keys (first line is the number of keys)
4
16 1215
19 405
20 135
21 45

## index
11
## state hash key (for each value in the domain)
0 2097152
## kleene state hash key base
10460353203
## state fluent hash keys (first line is the number of keys)
4
5 20
17 160
20 80
21 40
## kleene state fluent hash keys (first line is the number of keys)
4
5 45
17 1215
20 405
21 135

## index
12
## state hash key (for each value in the domain)
0 4194304
## kleene state hash key base
31381059609
## state fluent hash keys (first line is the number of keys)
4
6 40
22 20
23 10
26 40
## kleene state fluent hash keys (first line is the number of keys)
4
6 135
22 45
23 15
26 135

## index
13
## state hash key (for each value in the domain)
0 8388608
## kleene state hash key base
94143178827
## state fluent hash keys (first line is the number of keys)
4
22 40
23 20
24 10
27 20
## kleene state fluent hash keys (first line is the number of keys)
4
22 135
23 45
24 15
27 45

## index
14
## state hash key (for each value in the domain)
0 16777216
## kleene state hash key base
282429536481
## state fluent hash keys (first line is the number of keys)
4
23 40
24 20
25 20
28 20
## kleene state fluent hash keys (first line is the number of keys)
4
23 135
24 45
25 45
28 45

## index
15
## state hash key (for each value in the domain)
0 33554432
## kleene state hash key base
847288609443
## state fluent hash keys (first line is the number of keys)
4
7 40
24 40
25 40
29 40
## kleene state fluent hash keys (first line is the number of keys)
4
7 135
24 135
25 135
29 135

## index
16
## state hash key (for each value in the domain)
0 67108864
## kleene state hash key base
2541865828329
## state fluent hash keys (first line is the number of keys)
5
8 80
10 160
22 80
26 80
27 40
## kleene state fluent hash keys (first line is the number of keys)
5
8 405
10 1215
22 405
26 405
27 135

## index
17
## state hash key (for each value in the domain)
0 134217728
## kleene state hash key base
7625597484987
## state fluent hash keys (first line is the number of keys)
5
11 160
23 80
26 160
27 80
28 40
## kleene state fluent hash keys (first line is the number of keys)
5
11 1215
23 405
26 1215
27 405
28 135

## index
18
## state hash key (for each value in the domain)
0 268435456
## kleene state hash key base
22876792454961
## state fluent hash keys (first line is the number of keys)
5
12 160
24 80
27 160
28 80
29 80
## kleene state fluent hash keys (first line is the number of keys)
5
12 1215
24 405
27 1215
28 405
29 405

## index
19
## state hash key (for each value in the domain)
0 536870912
## kleene state hash key base
68630377364883
## state fluent hash keys (first line is the number of keys)
5
9 80
13 160
25 80
28 160
29 160
## kleene state fluent hash keys (first line is the number of keys)
5
9 405
13 1215
25 405
28 1215
29 1215



#####TRAINING SET#####
20
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
