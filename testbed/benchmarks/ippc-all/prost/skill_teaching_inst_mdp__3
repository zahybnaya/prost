#####TASK#####
## name
skill_teaching_inst_mdp__3
## horizon
40
## discount factor
1
## number of action fluents
8
## number of det state fluents
16
## number of prob state fluents
8
## number of preconds
0
## number of actions
9
## number of hashing functions
25
## initial state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
1
## method to calculate the final reward
NOOP
## 1 if reward formula allows reward lock detection and a reward lock was found during task analysis
1
## 1 if an unreasonable action was detected
1
## 1 if an unreasonable action was detected in the determinization
1
## number of states that were encountered during task analysis
5795
## number of unique states that were encountered during task analysis
750
## number of states with only one applicable reasonable action that were encountered during task analysis
2697
## number of unique states with only one applicable reasonable action that were encountered during task analysis
669


#####ACTION FLUENTS#####
## index
0
## name
askProb(s0)
## number of values
2
## values
0 false
1 true

## index
1
## name
askProb(s1)
## number of values
2
## values
0 false
1 true

## index
2
## name
askProb(s2)
## number of values
2
## values
0 false
1 true

## index
3
## name
askProb(s3)
## number of values
2
## values
0 false
1 true

## index
4
## name
giveHint(s0)
## number of values
2
## values
0 false
1 true

## index
5
## name
giveHint(s1)
## number of values
2
## values
0 false
1 true

## index
6
## name
giveHint(s2)
## number of values
2
## values
0 false
1 true

## index
7
## name
giveHint(s3)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
hintDelayVar(s0)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(4))
## hash index
0
## caching type 
VECTOR
## precomputed results
32
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
## kleene caching type
VECTOR
## kleene caching vec size
162
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0

## index
1
## name
hintDelayVar(s1)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(5))
## hash index
1
## caching type 
VECTOR
## precomputed results
32
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
## kleene caching type
VECTOR
## kleene caching vec size
162
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0

## index
2
## name
hintDelayVar(s2)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(6))
## hash index
2
## caching type 
VECTOR
## precomputed results
32
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
## kleene caching type
VECTOR
## kleene caching vec size
162
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0

## index
3
## name
hintDelayVar(s3)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(7))
## hash index
3
## caching type 
VECTOR
## precomputed results
32
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
## kleene caching type
VECTOR
## kleene caching vec size
162
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
4
## name
hintedRight(s0)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(4))
## hash index
4
## caching type 
VECTOR
## precomputed results
32
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
## kleene caching type
VECTOR
## kleene caching vec size
162
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0

## index
5
## name
hintedRight(s1)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(5))
## hash index
5
## caching type 
VECTOR
## precomputed results
32
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
## kleene caching type
VECTOR
## kleene caching vec size
162
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0

## index
6
## name
hintedRight(s2)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(6) $s(21))
## hash index
6
## caching type 
VECTOR
## precomputed results
64
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
## kleene caching type
VECTOR
## kleene caching vec size
486
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0

## index
7
## name
hintedRight(s3)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(7) $s(21) $s(22))
## hash index
7
## caching type 
VECTOR
## precomputed results
128
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 1
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
## kleene caching type
VECTOR
## kleene caching vec size
1458
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
8
## name
proficiencyMed(s0)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(12)) $s(8)) : $c(1)) (and($s(12) $s(4)) : $c(1)) (and($s(12) $s(16)) : $c(1)) ($s(20) : $c(1)) ($c(1) : and($s(8) $s(12) $s(0))) )
## hash index
8
## caching type 
VECTOR
## precomputed results
64
0 0
1 0
2 0
3 0
4 1
5 1
6 1
7 1
8 0
9 0
10 1
11 1
12 0
13 1
14 1
15 1
16 0
17 0
18 0
19 0
20 1
21 1
22 1
23 1
24 1
25 1
26 1
27 1
28 1
29 1
30 1
31 1
32 1
33 1
34 1
35 1
36 1
37 1
38 1
39 1
40 1
41 1
42 1
43 1
44 1
45 1
46 1
47 1
48 1
49 1
50 1
51 1
52 1
53 1
54 1
55 1
56 1
57 1
58 1
59 1
60 1
61 1
62 1
63 1
## kleene caching type
VECTOR
## kleene caching vec size
729
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
9
## name
proficiencyMed(s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(13)) $s(9)) : $c(1)) (and($s(13) $s(5)) : $c(1)) (and($s(13) $s(17)) : $c(1)) ($s(21) : $c(1)) ($c(1) : and($s(9) $s(13) $s(1))) )
## hash index
9
## caching type 
VECTOR
## precomputed results
64
0 0
1 0
2 0
3 0
4 1
5 1
6 1
7 1
8 0
9 0
10 1
11 1
12 0
13 1
14 1
15 1
16 0
17 0
18 0
19 0
20 1
21 1
22 1
23 1
24 1
25 1
26 1
27 1
28 1
29 1
30 1
31 1
32 1
33 1
34 1
35 1
36 1
37 1
38 1
39 1
40 1
41 1
42 1
43 1
44 1
45 1
46 1
47 1
48 1
49 1
50 1
51 1
52 1
53 1
54 1
55 1
56 1
57 1
58 1
59 1
60 1
61 1
62 1
63 1
## kleene caching type
VECTOR
## kleene caching vec size
729
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
10
## name
proficiencyMed(s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(14)) $s(10)) : $c(1)) (and($s(14) $s(6)) : $c(1)) (and($s(14) $s(18)) : $c(1)) ($s(22) : $c(1)) ($c(1) : and($s(10) $s(14) $s(2))) )
## hash index
10
## caching type 
VECTOR
## precomputed results
64
0 0
1 0
2 0
3 0
4 1
5 1
6 1
7 1
8 0
9 0
10 1
11 1
12 0
13 1
14 1
15 1
16 0
17 0
18 0
19 0
20 1
21 1
22 1
23 1
24 1
25 1
26 1
27 1
28 1
29 1
30 1
31 1
32 1
33 1
34 1
35 1
36 1
37 1
38 1
39 1
40 1
41 1
42 1
43 1
44 1
45 1
46 1
47 1
48 1
49 1
50 1
51 1
52 1
53 1
54 1
55 1
56 1
57 1
58 1
59 1
60 1
61 1
62 1
63 1
## kleene caching type
VECTOR
## kleene caching vec size
729
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
11
## name
proficiencyMed(s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(15)) $s(11)) : $c(1)) (and($s(15) $s(7)) : $c(1)) (and($s(15) $s(19)) : $c(1)) ($s(23) : $c(1)) ($c(1) : and($s(11) $s(15) $s(3))) )
## hash index
11
## caching type 
VECTOR
## precomputed results
64
0 0
1 0
2 0
3 0
4 1
5 1
6 1
7 1
8 0
9 0
10 1
11 1
12 0
13 1
14 1
15 1
16 0
17 0
18 0
19 0
20 1
21 1
22 1
23 1
24 1
25 1
26 1
27 1
28 1
29 1
30 1
31 1
32 1
33 1
34 1
35 1
36 1
37 1
38 1
39 1
40 1
41 1
42 1
43 1
44 1
45 1
46 1
47 1
48 1
49 1
50 1
51 1
52 1
53 1
54 1
55 1
56 1
57 1
58 1
59 1
60 1
61 1
62 1
63 1
## kleene caching type
VECTOR
## kleene caching vec size
729
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
12
## name
updateTurn(s0)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) or($a(0) $a(4)))
## hash index
12
## caching type 
VECTOR
## precomputed results
48
0 0
1 1
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
## kleene caching type
VECTOR
## kleene caching vec size
243
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 2

## index
13
## name
updateTurn(s1)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) or($a(1) $a(5)))
## hash index
13
## caching type 
VECTOR
## precomputed results
48
0 0
1 1
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
## kleene caching type
VECTOR
## kleene caching vec size
243
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 2
8 0

## index
14
## name
updateTurn(s2)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) or($a(2) $a(6)))
## hash index
14
## caching type 
VECTOR
## precomputed results
48
0 0
1 1
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
## kleene caching type
VECTOR
## kleene caching vec size
243
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 2
7 0
8 0

## index
15
## name
updateTurn(s3)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) or($a(3) $a(7)))
## hash index
15
## caching type 
VECTOR
## precomputed results
48
0 0
1 1
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
## kleene caching type
VECTOR
## kleene caching vec size
243
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 2
6 0
7 0
8 0



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
answeredRight(s0)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(0) $s(20)) : Bernoulli($c(0.99047893))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(0) $s(8)) : Bernoulli($c(0.7459964))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(0) $s(8) $a(0)) : $c(0)) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(0)) : Bernoulli($c(0.66335756))) ($c(1) : $c(0)) )
## determinized formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(0) $s(20)) : $c(1)) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(0) $s(8)) : $c(1)) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(0) $s(8) $a(0)) : $c(0)) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(0)) : $c(1)) ($c(1) : $c(0)) )
## hash index
16
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
128
0 0 1 0 1
1 1 2 0 0.33664244 1 0.66335756
2 0 1 0 1
3 1 2 0 0.2540036 1 0.7459964
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 1 2 0 0.00952107000000002 1 0.99047893
66 0 1 0 1
67 1 2 0 0.00952107000000002 1 0.99047893
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
1458
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1

## index
1
## name
answeredRight(s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(1) $s(21)) : Bernoulli($c(0.8791513))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(1) $s(9)) : Bernoulli($c(0.7089525))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(1) $s(9) $a(1)) : $c(0)) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(1)) : Bernoulli($c(0.55798024))) ($c(1) : $c(0)) )
## determinized formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(1) $s(21)) : $c(1)) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(1) $s(9)) : $c(1)) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(1) $s(9) $a(1)) : $c(0)) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(1)) : $c(1)) ($c(1) : $c(0)) )
## hash index
17
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
128
0 0 1 0 1
1 1 2 0 0.44201976 1 0.55798024
2 0 1 0 1
3 1 2 0 0.2910475 1 0.7089525
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 1 2 0 0.1208487 1 0.8791513
66 0 1 0 1
67 1 2 0 0.1208487 1 0.8791513
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
1458
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0

## index
2
## name
answeredRight(s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(2) $s(22)) : Bernoulli($c(0.9442033))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(2) $s(10) $s(21)) : Bernoulli($c(0.7432575))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(2) $s(10) $a(2)) : Bernoulli($c(0.684086966514587))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(2) $s(21)) : Bernoulli($c(0.708089))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(2) $a(2)) : Bernoulli($c(0.681960296630859))) ($c(1) : $c(0)) )
## determinized formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(2) $s(22)) : $c(1)) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(2) $s(10) $s(21)) : $c(1)) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(2) $s(10) $a(2)) : $c(1)) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(2) $s(21)) : $c(1)) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(2) $a(2)) : $c(1)) ($c(1) : $c(0)) )
## hash index
18
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
256
0 0 1 0 1
1 1 2 0 0.318039703369141 1 0.681960296630859
2 0 1 0 1
3 1 2 0 0.315913033485413 1 0.684086966514587
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 1 2 0 0.291911 1 0.708089
66 0 1 0 1
67 1 2 0 0.2567425 1 0.7432575
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 1 2 0 0.0557967 1 0.9442033
130 0 1 0 1
131 1 2 0 0.0557967 1 0.9442033
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 1 0 1
172 0 1 0 1
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 1 0 1
192 0 1 0 1
193 1 2 0 0.0557967 1 0.9442033
194 0 1 0 1
195 1 2 0 0.0557967 1 0.9442033
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
4374
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0

## index
3
## name
answeredRight(s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(3) $s(23)) : Bernoulli($c(0.9625534))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(3) $s(11) $s(21) $s(22)) : Bernoulli($c(0.6968088))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(3) $s(11) $a(3)) : Bernoulli($c(0.597277450561523))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(3) $s(21) $s(22)) : Bernoulli($c(0.6968088))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(3) $a(3)) : Bernoulli($c(0.541122722625732))) ($c(1) : $c(0)) )
## determinized formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(3) $s(23)) : $c(1)) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(3) $s(11) $s(21) $s(22)) : $c(1)) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(3) $s(11) $a(3)) : $c(1)) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(3) $s(21) $s(22)) : $c(1)) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(3) $a(3)) : $c(1)) ($c(1) : $c(0)) )
## hash index
19
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
512
0 0 1 0 1
1 1 2 0 0.458877277374268 1 0.541122722625732
2 0 1 0 1
3 1 2 0 0.402722549438477 1 0.597277450561523
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 1 2 0 0.458877277374268 1 0.541122722625732
66 0 1 0 1
67 1 2 0 0.402722549438477 1 0.597277450561523
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 1 2 0 0.458877277374268 1 0.541122722625732
130 0 1 0 1
131 1 2 0 0.402722549438477 1 0.597277450561523
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 1 0 1
172 0 1 0 1
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 1 0 1
192 0 1 0 1
193 1 2 0 0.3031912 1 0.6968088
194 0 1 0 1
195 1 2 0 0.3031912 1 0.6968088
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 1 2 0 0.0374466 1 0.9625534
258 0 1 0 1
259 1 2 0 0.0374466 1 0.9625534
260 0 1 0 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 0 1 0 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 0 1 0 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 0 1 0 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 0 1 0 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
320 0 1 0 1
321 1 2 0 0.0374466 1 0.9625534
322 0 1 0 1
323 1 2 0 0.0374466 1 0.9625534
324 0 1 0 1
325 0 1 0 1
326 0 1 0 1
327 0 1 0 1
328 0 1 0 1
329 0 1 0 1
330 0 1 0 1
331 0 1 0 1
332 0 1 0 1
333 0 1 0 1
334 0 1 0 1
335 0 1 0 1
336 0 1 0 1
337 0 1 0 1
338 0 1 0 1
339 0 1 0 1
340 0 1 0 1
341 0 1 0 1
342 0 1 0 1
343 0 1 0 1
344 0 1 0 1
345 0 1 0 1
346 0 1 0 1
347 0 1 0 1
348 0 1 0 1
349 0 1 0 1
350 0 1 0 1
351 0 1 0 1
352 0 1 0 1
353 0 1 0 1
354 0 1 0 1
355 0 1 0 1
356 0 1 0 1
357 0 1 0 1
358 0 1 0 1
359 0 1 0 1
360 0 1 0 1
361 0 1 0 1
362 0 1 0 1
363 0 1 0 1
364 0 1 0 1
365 0 1 0 1
366 0 1 0 1
367 0 1 0 1
368 0 1 0 1
369 0 1 0 1
370 0 1 0 1
371 0 1 0 1
372 0 1 0 1
373 0 1 0 1
374 0 1 0 1
375 0 1 0 1
376 0 1 0 1
377 0 1 0 1
378 0 1 0 1
379 0 1 0 1
380 0 1 0 1
381 0 1 0 1
382 0 1 0 1
383 0 1 0 1
384 0 1 0 1
385 1 2 0 0.0374466 1 0.9625534
386 0 1 0 1
387 1 2 0 0.0374466 1 0.9625534
388 0 1 0 1
389 0 1 0 1
390 0 1 0 1
391 0 1 0 1
392 0 1 0 1
393 0 1 0 1
394 0 1 0 1
395 0 1 0 1
396 0 1 0 1
397 0 1 0 1
398 0 1 0 1
399 0 1 0 1
400 0 1 0 1
401 0 1 0 1
402 0 1 0 1
403 0 1 0 1
404 0 1 0 1
405 0 1 0 1
406 0 1 0 1
407 0 1 0 1
408 0 1 0 1
409 0 1 0 1
410 0 1 0 1
411 0 1 0 1
412 0 1 0 1
413 0 1 0 1
414 0 1 0 1
415 0 1 0 1
416 0 1 0 1
417 0 1 0 1
418 0 1 0 1
419 0 1 0 1
420 0 1 0 1
421 0 1 0 1
422 0 1 0 1
423 0 1 0 1
424 0 1 0 1
425 0 1 0 1
426 0 1 0 1
427 0 1 0 1
428 0 1 0 1
429 0 1 0 1
430 0 1 0 1
431 0 1 0 1
432 0 1 0 1
433 0 1 0 1
434 0 1 0 1
435 0 1 0 1
436 0 1 0 1
437 0 1 0 1
438 0 1 0 1
439 0 1 0 1
440 0 1 0 1
441 0 1 0 1
442 0 1 0 1
443 0 1 0 1
444 0 1 0 1
445 0 1 0 1
446 0 1 0 1
447 0 1 0 1
448 0 1 0 1
449 1 2 0 0.0374466 1 0.9625534
450 0 1 0 1
451 1 2 0 0.0374466 1 0.9625534
452 0 1 0 1
453 0 1 0 1
454 0 1 0 1
455 0 1 0 1
456 0 1 0 1
457 0 1 0 1
458 0 1 0 1
459 0 1 0 1
460 0 1 0 1
461 0 1 0 1
462 0 1 0 1
463 0 1 0 1
464 0 1 0 1
465 0 1 0 1
466 0 1 0 1
467 0 1 0 1
468 0 1 0 1
469 0 1 0 1
470 0 1 0 1
471 0 1 0 1
472 0 1 0 1
473 0 1 0 1
474 0 1 0 1
475 0 1 0 1
476 0 1 0 1
477 0 1 0 1
478 0 1 0 1
479 0 1 0 1
480 0 1 0 1
481 0 1 0 1
482 0 1 0 1
483 0 1 0 1
484 0 1 0 1
485 0 1 0 1
486 0 1 0 1
487 0 1 0 1
488 0 1 0 1
489 0 1 0 1
490 0 1 0 1
491 0 1 0 1
492 0 1 0 1
493 0 1 0 1
494 0 1 0 1
495 0 1 0 1
496 0 1 0 1
497 0 1 0 1
498 0 1 0 1
499 0 1 0 1
500 0 1 0 1
501 0 1 0 1
502 0 1 0 1
503 0 1 0 1
504 0 1 0 1
505 0 1 0 1
506 0 1 0 1
507 0 1 0 1
508 0 1 0 1
509 0 1 0 1
510 0 1 0 1
511 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
13122
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0

## index
4
## name
proficiencyHigh(s0)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15))) : $s(20)) (and(~($s(12)) $s(20)) : Bernoulli($c(0.987662625312805))) (and($s(8) $s(12) $s(16)) : $c(1)) ($c(1) : and($s(20) $s(12) or($s(0) $s(16)))) )
## determinized formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15))) : $s(20)) (and(~($s(12)) $s(20)) : $c(1)) (and($s(8) $s(12) $s(16)) : $c(1)) ($c(1) : and($s(20) $s(12) or($s(0) $s(16)))) )
## hash index
20
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
256
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 1 1 1 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 1 1 1 1
79 1 1 1 1
80 0 1 0 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 1 1 1 1
87 1 1 1 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 1 1 1 1
95 1 1 1 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 1 1 1 1
103 1 1 1 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 1 1 1 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 1 1 1 1
119 1 1 1 1
120 0 1 0 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 1 1 1 1
127 1 1 1 1
128 1 1 1 1
129 1 1 1 1
130 1 1 1 1
131 1 1 1 1
132 0 1 0 1
133 1 1 1 1
134 0 1 0 1
135 1 1 1 1
136 1 2 0 0.0123373746871949 1 0.987662625312805
137 1 2 0 0.0123373746871949 1 0.987662625312805
138 1 2 0 0.0123373746871949 1 0.987662625312805
139 1 2 0 0.0123373746871949 1 0.987662625312805
140 0 1 0 1
141 1 1 1 1
142 0 1 0 1
143 1 1 1 1
144 1 2 0 0.0123373746871949 1 0.987662625312805
145 1 2 0 0.0123373746871949 1 0.987662625312805
146 1 2 0 0.0123373746871949 1 0.987662625312805
147 1 2 0 0.0123373746871949 1 0.987662625312805
148 0 1 0 1
149 1 1 1 1
150 0 1 0 1
151 1 1 1 1
152 1 2 0 0.0123373746871949 1 0.987662625312805
153 1 2 0 0.0123373746871949 1 0.987662625312805
154 1 2 0 0.0123373746871949 1 0.987662625312805
155 1 2 0 0.0123373746871949 1 0.987662625312805
156 0 1 0 1
157 1 1 1 1
158 0 1 0 1
159 1 1 1 1
160 1 2 0 0.0123373746871949 1 0.987662625312805
161 1 2 0 0.0123373746871949 1 0.987662625312805
162 1 2 0 0.0123373746871949 1 0.987662625312805
163 1 2 0 0.0123373746871949 1 0.987662625312805
164 0 1 0 1
165 1 1 1 1
166 0 1 0 1
167 1 1 1 1
168 1 2 0 0.0123373746871949 1 0.987662625312805
169 1 2 0 0.0123373746871949 1 0.987662625312805
170 1 2 0 0.0123373746871949 1 0.987662625312805
171 1 2 0 0.0123373746871949 1 0.987662625312805
172 0 1 0 1
173 1 1 1 1
174 0 1 0 1
175 1 1 1 1
176 1 2 0 0.0123373746871949 1 0.987662625312805
177 1 2 0 0.0123373746871949 1 0.987662625312805
178 1 2 0 0.0123373746871949 1 0.987662625312805
179 1 2 0 0.0123373746871949 1 0.987662625312805
180 0 1 0 1
181 1 1 1 1
182 0 1 0 1
183 1 1 1 1
184 1 2 0 0.0123373746871949 1 0.987662625312805
185 1 2 0 0.0123373746871949 1 0.987662625312805
186 1 2 0 0.0123373746871949 1 0.987662625312805
187 1 2 0 0.0123373746871949 1 0.987662625312805
188 0 1 0 1
189 1 1 1 1
190 0 1 0 1
191 1 1 1 1
192 1 1 1 1
193 1 1 1 1
194 1 1 1 1
195 1 1 1 1
196 1 1 1 1
197 1 1 1 1
198 1 1 1 1
199 1 1 1 1
200 1 2 0 0.0123373746871949 1 0.987662625312805
201 1 2 0 0.0123373746871949 1 0.987662625312805
202 1 2 0 0.0123373746871949 1 0.987662625312805
203 1 2 0 0.0123373746871949 1 0.987662625312805
204 1 1 1 1
205 1 1 1 1
206 1 1 1 1
207 1 1 1 1
208 1 2 0 0.0123373746871949 1 0.987662625312805
209 1 2 0 0.0123373746871949 1 0.987662625312805
210 1 2 0 0.0123373746871949 1 0.987662625312805
211 1 2 0 0.0123373746871949 1 0.987662625312805
212 1 1 1 1
213 1 1 1 1
214 1 1 1 1
215 1 1 1 1
216 1 2 0 0.0123373746871949 1 0.987662625312805
217 1 2 0 0.0123373746871949 1 0.987662625312805
218 1 2 0 0.0123373746871949 1 0.987662625312805
219 1 2 0 0.0123373746871949 1 0.987662625312805
220 1 1 1 1
221 1 1 1 1
222 1 1 1 1
223 1 1 1 1
224 1 2 0 0.0123373746871949 1 0.987662625312805
225 1 2 0 0.0123373746871949 1 0.987662625312805
226 1 2 0 0.0123373746871949 1 0.987662625312805
227 1 2 0 0.0123373746871949 1 0.987662625312805
228 1 1 1 1
229 1 1 1 1
230 1 1 1 1
231 1 1 1 1
232 1 2 0 0.0123373746871949 1 0.987662625312805
233 1 2 0 0.0123373746871949 1 0.987662625312805
234 1 2 0 0.0123373746871949 1 0.987662625312805
235 1 2 0 0.0123373746871949 1 0.987662625312805
236 1 1 1 1
237 1 1 1 1
238 1 1 1 1
239 1 1 1 1
240 1 2 0 0.0123373746871949 1 0.987662625312805
241 1 2 0 0.0123373746871949 1 0.987662625312805
242 1 2 0 0.0123373746871949 1 0.987662625312805
243 1 2 0 0.0123373746871949 1 0.987662625312805
244 1 1 1 1
245 1 1 1 1
246 1 1 1 1
247 1 1 1 1
248 1 2 0 0.0123373746871949 1 0.987662625312805
249 1 2 0 0.0123373746871949 1 0.987662625312805
250 1 2 0 0.0123373746871949 1 0.987662625312805
251 1 2 0 0.0123373746871949 1 0.987662625312805
252 1 1 1 1
253 1 1 1 1
254 1 1 1 1
255 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
6561
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
5
## name
proficiencyHigh(s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15))) : $s(21)) (and(~($s(13)) $s(21)) : Bernoulli($c(0.950922125577927))) (and($s(9) $s(13) $s(17)) : $c(1)) ($c(1) : and($s(21) $s(13) or($s(1) $s(17)))) )
## determinized formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15))) : $s(21)) (and(~($s(13)) $s(21)) : $c(1)) (and($s(9) $s(13) $s(17)) : $c(1)) ($c(1) : and($s(21) $s(13) or($s(1) $s(17)))) )
## hash index
21
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
256
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 1 1 1 1
75 1 1 1 1
76 0 1 0 1
77 0 1 0 1
78 1 1 1 1
79 1 1 1 1
80 0 1 0 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 1 1 1 1
92 0 1 0 1
93 0 1 0 1
94 1 1 1 1
95 1 1 1 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 1 1 1 1
107 1 1 1 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 1 1 1 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 0 1 0 1
122 1 1 1 1
123 1 1 1 1
124 0 1 0 1
125 0 1 0 1
126 1 1 1 1
127 1 1 1 1
128 1 1 1 1
129 1 1 1 1
130 1 1 1 1
131 1 1 1 1
132 1 2 0 0.0490778744220733 1 0.950922125577927
133 1 2 0 0.0490778744220733 1 0.950922125577927
134 1 2 0 0.0490778744220733 1 0.950922125577927
135 1 2 0 0.0490778744220733 1 0.950922125577927
136 0 1 0 1
137 1 1 1 1
138 0 1 0 1
139 1 1 1 1
140 0 1 0 1
141 1 1 1 1
142 0 1 0 1
143 1 1 1 1
144 1 2 0 0.0490778744220733 1 0.950922125577927
145 1 2 0 0.0490778744220733 1 0.950922125577927
146 1 2 0 0.0490778744220733 1 0.950922125577927
147 1 2 0 0.0490778744220733 1 0.950922125577927
148 1 2 0 0.0490778744220733 1 0.950922125577927
149 1 2 0 0.0490778744220733 1 0.950922125577927
150 1 2 0 0.0490778744220733 1 0.950922125577927
151 1 2 0 0.0490778744220733 1 0.950922125577927
152 0 1 0 1
153 1 1 1 1
154 0 1 0 1
155 1 1 1 1
156 0 1 0 1
157 1 1 1 1
158 0 1 0 1
159 1 1 1 1
160 1 2 0 0.0490778744220733 1 0.950922125577927
161 1 2 0 0.0490778744220733 1 0.950922125577927
162 1 2 0 0.0490778744220733 1 0.950922125577927
163 1 2 0 0.0490778744220733 1 0.950922125577927
164 1 2 0 0.0490778744220733 1 0.950922125577927
165 1 2 0 0.0490778744220733 1 0.950922125577927
166 1 2 0 0.0490778744220733 1 0.950922125577927
167 1 2 0 0.0490778744220733 1 0.950922125577927
168 0 1 0 1
169 1 1 1 1
170 0 1 0 1
171 1 1 1 1
172 0 1 0 1
173 1 1 1 1
174 0 1 0 1
175 1 1 1 1
176 1 2 0 0.0490778744220733 1 0.950922125577927
177 1 2 0 0.0490778744220733 1 0.950922125577927
178 1 2 0 0.0490778744220733 1 0.950922125577927
179 1 2 0 0.0490778744220733 1 0.950922125577927
180 1 2 0 0.0490778744220733 1 0.950922125577927
181 1 2 0 0.0490778744220733 1 0.950922125577927
182 1 2 0 0.0490778744220733 1 0.950922125577927
183 1 2 0 0.0490778744220733 1 0.950922125577927
184 0 1 0 1
185 1 1 1 1
186 0 1 0 1
187 1 1 1 1
188 0 1 0 1
189 1 1 1 1
190 0 1 0 1
191 1 1 1 1
192 1 1 1 1
193 1 1 1 1
194 1 1 1 1
195 1 1 1 1
196 1 2 0 0.0490778744220733 1 0.950922125577927
197 1 2 0 0.0490778744220733 1 0.950922125577927
198 1 2 0 0.0490778744220733 1 0.950922125577927
199 1 2 0 0.0490778744220733 1 0.950922125577927
200 1 1 1 1
201 1 1 1 1
202 1 1 1 1
203 1 1 1 1
204 1 1 1 1
205 1 1 1 1
206 1 1 1 1
207 1 1 1 1
208 1 2 0 0.0490778744220733 1 0.950922125577927
209 1 2 0 0.0490778744220733 1 0.950922125577927
210 1 2 0 0.0490778744220733 1 0.950922125577927
211 1 2 0 0.0490778744220733 1 0.950922125577927
212 1 2 0 0.0490778744220733 1 0.950922125577927
213 1 2 0 0.0490778744220733 1 0.950922125577927
214 1 2 0 0.0490778744220733 1 0.950922125577927
215 1 2 0 0.0490778744220733 1 0.950922125577927
216 1 1 1 1
217 1 1 1 1
218 1 1 1 1
219 1 1 1 1
220 1 1 1 1
221 1 1 1 1
222 1 1 1 1
223 1 1 1 1
224 1 2 0 0.0490778744220733 1 0.950922125577927
225 1 2 0 0.0490778744220733 1 0.950922125577927
226 1 2 0 0.0490778744220733 1 0.950922125577927
227 1 2 0 0.0490778744220733 1 0.950922125577927
228 1 2 0 0.0490778744220733 1 0.950922125577927
229 1 2 0 0.0490778744220733 1 0.950922125577927
230 1 2 0 0.0490778744220733 1 0.950922125577927
231 1 2 0 0.0490778744220733 1 0.950922125577927
232 1 1 1 1
233 1 1 1 1
234 1 1 1 1
235 1 1 1 1
236 1 1 1 1
237 1 1 1 1
238 1 1 1 1
239 1 1 1 1
240 1 2 0 0.0490778744220733 1 0.950922125577927
241 1 2 0 0.0490778744220733 1 0.950922125577927
242 1 2 0 0.0490778744220733 1 0.950922125577927
243 1 2 0 0.0490778744220733 1 0.950922125577927
244 1 2 0 0.0490778744220733 1 0.950922125577927
245 1 2 0 0.0490778744220733 1 0.950922125577927
246 1 2 0 0.0490778744220733 1 0.950922125577927
247 1 2 0 0.0490778744220733 1 0.950922125577927
248 1 1 1 1
249 1 1 1 1
250 1 1 1 1
251 1 1 1 1
252 1 1 1 1
253 1 1 1 1
254 1 1 1 1
255 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
6561
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
6
## name
proficiencyHigh(s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15))) : $s(22)) (and(~($s(14)) $s(22)) : Bernoulli($c(0.977067977190018))) (and($s(10) $s(14) $s(18)) : $c(1)) ($c(1) : and($s(22) $s(14) or($s(2) $s(18)))) )
## determinized formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15))) : $s(22)) (and(~($s(14)) $s(22)) : $c(1)) (and($s(10) $s(14) $s(18)) : $c(1)) ($c(1) : and($s(22) $s(14) or($s(2) $s(18)))) )
## hash index
22
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
256
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 1 1 1 1
83 1 1 1 1
84 0 1 0 1
85 0 1 0 1
86 1 1 1 1
87 1 1 1 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 1 1 1 1
92 0 1 0 1
93 0 1 0 1
94 1 1 1 1
95 1 1 1 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 1 1 1 1
115 1 1 1 1
116 0 1 0 1
117 0 1 0 1
118 1 1 1 1
119 1 1 1 1
120 0 1 0 1
121 0 1 0 1
122 1 1 1 1
123 1 1 1 1
124 0 1 0 1
125 0 1 0 1
126 1 1 1 1
127 1 1 1 1
128 1 1 1 1
129 1 1 1 1
130 1 1 1 1
131 1 1 1 1
132 1 2 0 0.0229320228099823 1 0.977067977190018
133 1 2 0 0.0229320228099823 1 0.977067977190018
134 1 2 0 0.0229320228099823 1 0.977067977190018
135 1 2 0 0.0229320228099823 1 0.977067977190018
136 1 2 0 0.0229320228099823 1 0.977067977190018
137 1 2 0 0.0229320228099823 1 0.977067977190018
138 1 2 0 0.0229320228099823 1 0.977067977190018
139 1 2 0 0.0229320228099823 1 0.977067977190018
140 1 2 0 0.0229320228099823 1 0.977067977190018
141 1 2 0 0.0229320228099823 1 0.977067977190018
142 1 2 0 0.0229320228099823 1 0.977067977190018
143 1 2 0 0.0229320228099823 1 0.977067977190018
144 0 1 0 1
145 1 1 1 1
146 0 1 0 1
147 1 1 1 1
148 0 1 0 1
149 1 1 1 1
150 0 1 0 1
151 1 1 1 1
152 0 1 0 1
153 1 1 1 1
154 0 1 0 1
155 1 1 1 1
156 0 1 0 1
157 1 1 1 1
158 0 1 0 1
159 1 1 1 1
160 1 2 0 0.0229320228099823 1 0.977067977190018
161 1 2 0 0.0229320228099823 1 0.977067977190018
162 1 2 0 0.0229320228099823 1 0.977067977190018
163 1 2 0 0.0229320228099823 1 0.977067977190018
164 1 2 0 0.0229320228099823 1 0.977067977190018
165 1 2 0 0.0229320228099823 1 0.977067977190018
166 1 2 0 0.0229320228099823 1 0.977067977190018
167 1 2 0 0.0229320228099823 1 0.977067977190018
168 1 2 0 0.0229320228099823 1 0.977067977190018
169 1 2 0 0.0229320228099823 1 0.977067977190018
170 1 2 0 0.0229320228099823 1 0.977067977190018
171 1 2 0 0.0229320228099823 1 0.977067977190018
172 1 2 0 0.0229320228099823 1 0.977067977190018
173 1 2 0 0.0229320228099823 1 0.977067977190018
174 1 2 0 0.0229320228099823 1 0.977067977190018
175 1 2 0 0.0229320228099823 1 0.977067977190018
176 0 1 0 1
177 1 1 1 1
178 0 1 0 1
179 1 1 1 1
180 0 1 0 1
181 1 1 1 1
182 0 1 0 1
183 1 1 1 1
184 0 1 0 1
185 1 1 1 1
186 0 1 0 1
187 1 1 1 1
188 0 1 0 1
189 1 1 1 1
190 0 1 0 1
191 1 1 1 1
192 1 1 1 1
193 1 1 1 1
194 1 1 1 1
195 1 1 1 1
196 1 2 0 0.0229320228099823 1 0.977067977190018
197 1 2 0 0.0229320228099823 1 0.977067977190018
198 1 2 0 0.0229320228099823 1 0.977067977190018
199 1 2 0 0.0229320228099823 1 0.977067977190018
200 1 2 0 0.0229320228099823 1 0.977067977190018
201 1 2 0 0.0229320228099823 1 0.977067977190018
202 1 2 0 0.0229320228099823 1 0.977067977190018
203 1 2 0 0.0229320228099823 1 0.977067977190018
204 1 2 0 0.0229320228099823 1 0.977067977190018
205 1 2 0 0.0229320228099823 1 0.977067977190018
206 1 2 0 0.0229320228099823 1 0.977067977190018
207 1 2 0 0.0229320228099823 1 0.977067977190018
208 1 1 1 1
209 1 1 1 1
210 1 1 1 1
211 1 1 1 1
212 1 1 1 1
213 1 1 1 1
214 1 1 1 1
215 1 1 1 1
216 1 1 1 1
217 1 1 1 1
218 1 1 1 1
219 1 1 1 1
220 1 1 1 1
221 1 1 1 1
222 1 1 1 1
223 1 1 1 1
224 1 2 0 0.0229320228099823 1 0.977067977190018
225 1 2 0 0.0229320228099823 1 0.977067977190018
226 1 2 0 0.0229320228099823 1 0.977067977190018
227 1 2 0 0.0229320228099823 1 0.977067977190018
228 1 2 0 0.0229320228099823 1 0.977067977190018
229 1 2 0 0.0229320228099823 1 0.977067977190018
230 1 2 0 0.0229320228099823 1 0.977067977190018
231 1 2 0 0.0229320228099823 1 0.977067977190018
232 1 2 0 0.0229320228099823 1 0.977067977190018
233 1 2 0 0.0229320228099823 1 0.977067977190018
234 1 2 0 0.0229320228099823 1 0.977067977190018
235 1 2 0 0.0229320228099823 1 0.977067977190018
236 1 2 0 0.0229320228099823 1 0.977067977190018
237 1 2 0 0.0229320228099823 1 0.977067977190018
238 1 2 0 0.0229320228099823 1 0.977067977190018
239 1 2 0 0.0229320228099823 1 0.977067977190018
240 1 1 1 1
241 1 1 1 1
242 1 1 1 1
243 1 1 1 1
244 1 1 1 1
245 1 1 1 1
246 1 1 1 1
247 1 1 1 1
248 1 1 1 1
249 1 1 1 1
250 1 1 1 1
251 1 1 1 1
252 1 1 1 1
253 1 1 1 1
254 1 1 1 1
255 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
6561
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
7
## name
proficiencyHigh(s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15))) : $s(23)) (and(~($s(15)) $s(23)) : Bernoulli($c(0.981752020120621))) (and($s(11) $s(15) $s(19)) : $c(1)) ($c(1) : and($s(23) $s(15) or($s(3) $s(19)))) )
## determinized formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15))) : $s(23)) (and(~($s(15)) $s(23)) : $c(1)) (and($s(11) $s(15) $s(19)) : $c(1)) ($c(1) : and($s(23) $s(15) or($s(3) $s(19)))) )
## hash index
23
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
256
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 1 1 1 1
99 1 1 1 1
100 0 1 0 1
101 0 1 0 1
102 1 1 1 1
103 1 1 1 1
104 0 1 0 1
105 0 1 0 1
106 1 1 1 1
107 1 1 1 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 1 1 1 1
112 0 1 0 1
113 0 1 0 1
114 1 1 1 1
115 1 1 1 1
116 0 1 0 1
117 0 1 0 1
118 1 1 1 1
119 1 1 1 1
120 0 1 0 1
121 0 1 0 1
122 1 1 1 1
123 1 1 1 1
124 0 1 0 1
125 0 1 0 1
126 1 1 1 1
127 1 1 1 1
128 1 1 1 1
129 1 1 1 1
130 1 1 1 1
131 1 1 1 1
132 1 2 0 0.0182479798793793 1 0.981752020120621
133 1 2 0 0.0182479798793793 1 0.981752020120621
134 1 2 0 0.0182479798793793 1 0.981752020120621
135 1 2 0 0.0182479798793793 1 0.981752020120621
136 1 2 0 0.0182479798793793 1 0.981752020120621
137 1 2 0 0.0182479798793793 1 0.981752020120621
138 1 2 0 0.0182479798793793 1 0.981752020120621
139 1 2 0 0.0182479798793793 1 0.981752020120621
140 1 2 0 0.0182479798793793 1 0.981752020120621
141 1 2 0 0.0182479798793793 1 0.981752020120621
142 1 2 0 0.0182479798793793 1 0.981752020120621
143 1 2 0 0.0182479798793793 1 0.981752020120621
144 1 2 0 0.0182479798793793 1 0.981752020120621
145 1 2 0 0.0182479798793793 1 0.981752020120621
146 1 2 0 0.0182479798793793 1 0.981752020120621
147 1 2 0 0.0182479798793793 1 0.981752020120621
148 1 2 0 0.0182479798793793 1 0.981752020120621
149 1 2 0 0.0182479798793793 1 0.981752020120621
150 1 2 0 0.0182479798793793 1 0.981752020120621
151 1 2 0 0.0182479798793793 1 0.981752020120621
152 1 2 0 0.0182479798793793 1 0.981752020120621
153 1 2 0 0.0182479798793793 1 0.981752020120621
154 1 2 0 0.0182479798793793 1 0.981752020120621
155 1 2 0 0.0182479798793793 1 0.981752020120621
156 1 2 0 0.0182479798793793 1 0.981752020120621
157 1 2 0 0.0182479798793793 1 0.981752020120621
158 1 2 0 0.0182479798793793 1 0.981752020120621
159 1 2 0 0.0182479798793793 1 0.981752020120621
160 0 1 0 1
161 1 1 1 1
162 0 1 0 1
163 1 1 1 1
164 0 1 0 1
165 1 1 1 1
166 0 1 0 1
167 1 1 1 1
168 0 1 0 1
169 1 1 1 1
170 0 1 0 1
171 1 1 1 1
172 0 1 0 1
173 1 1 1 1
174 0 1 0 1
175 1 1 1 1
176 0 1 0 1
177 1 1 1 1
178 0 1 0 1
179 1 1 1 1
180 0 1 0 1
181 1 1 1 1
182 0 1 0 1
183 1 1 1 1
184 0 1 0 1
185 1 1 1 1
186 0 1 0 1
187 1 1 1 1
188 0 1 0 1
189 1 1 1 1
190 0 1 0 1
191 1 1 1 1
192 1 1 1 1
193 1 1 1 1
194 1 1 1 1
195 1 1 1 1
196 1 2 0 0.0182479798793793 1 0.981752020120621
197 1 2 0 0.0182479798793793 1 0.981752020120621
198 1 2 0 0.0182479798793793 1 0.981752020120621
199 1 2 0 0.0182479798793793 1 0.981752020120621
200 1 2 0 0.0182479798793793 1 0.981752020120621
201 1 2 0 0.0182479798793793 1 0.981752020120621
202 1 2 0 0.0182479798793793 1 0.981752020120621
203 1 2 0 0.0182479798793793 1 0.981752020120621
204 1 2 0 0.0182479798793793 1 0.981752020120621
205 1 2 0 0.0182479798793793 1 0.981752020120621
206 1 2 0 0.0182479798793793 1 0.981752020120621
207 1 2 0 0.0182479798793793 1 0.981752020120621
208 1 2 0 0.0182479798793793 1 0.981752020120621
209 1 2 0 0.0182479798793793 1 0.981752020120621
210 1 2 0 0.0182479798793793 1 0.981752020120621
211 1 2 0 0.0182479798793793 1 0.981752020120621
212 1 2 0 0.0182479798793793 1 0.981752020120621
213 1 2 0 0.0182479798793793 1 0.981752020120621
214 1 2 0 0.0182479798793793 1 0.981752020120621
215 1 2 0 0.0182479798793793 1 0.981752020120621
216 1 2 0 0.0182479798793793 1 0.981752020120621
217 1 2 0 0.0182479798793793 1 0.981752020120621
218 1 2 0 0.0182479798793793 1 0.981752020120621
219 1 2 0 0.0182479798793793 1 0.981752020120621
220 1 2 0 0.0182479798793793 1 0.981752020120621
221 1 2 0 0.0182479798793793 1 0.981752020120621
222 1 2 0 0.0182479798793793 1 0.981752020120621
223 1 2 0 0.0182479798793793 1 0.981752020120621
224 1 1 1 1
225 1 1 1 1
226 1 1 1 1
227 1 1 1 1
228 1 1 1 1
229 1 1 1 1
230 1 1 1 1
231 1 1 1 1
232 1 1 1 1
233 1 1 1 1
234 1 1 1 1
235 1 1 1 1
236 1 1 1 1
237 1 1 1 1
238 1 1 1 1
239 1 1 1 1
240 1 1 1 1
241 1 1 1 1
242 1 1 1 1
243 1 1 1 1
244 1 1 1 1
245 1 1 1 1
246 1 1 1 1
247 1 1 1 1
248 1 1 1 1
249 1 1 1 1
250 1 1 1 1
251 1 1 1 1
252 1 1 1 1
253 1 1 1 1
254 1 1 1 1
255 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
6561
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0



#####REWARD#####
## formula
+(*($s(20) $c(1.0374055)) *($s(21) $c(1.1605124)) *($s(22) $c(2.058421)) *($s(23) $c(3.2540152)) -($c(0) *(~($s(8)) $c(1.0374055))) -($c(0) *(~($s(9)) $c(1.1605124))) -($c(0) *(~($s(10)) $c(2.058421))) -($c(0) *(~($s(11)) $c(3.2540152))))
## min
-7.5103541
## max
7.5103541
## independent from actions
1
## hash index
24
## caching type
VECTOR
## precomputed results
256
0 -7.5103541
1 -6.4729486
2 -6.3498417
3 -5.3124362
4 -5.4519331
5 -4.4145276
6 -4.2914207
7 -3.2540152
8 -4.2563389
9 -3.2189334
10 -3.0958265
11 -2.058421
12 -2.1979179
13 -1.1605124
14 -1.0374055
15 0
16 -6.4729486
17 -5.4355431
18 -5.3124362
19 -4.2750307
20 -4.4145276
21 -3.3771221
22 -3.2540152
23 -2.2166097
24 -3.2189334
25 -2.1815279
26 -2.058421
27 -1.0210155
28 -1.1605124
29 -0.1231069
30 0
31 1.0374055
32 -6.3498417
33 -5.3124362
34 -5.1893293
35 -4.1519238
36 -4.2914207
37 -3.2540152
38 -3.1309083
39 -2.0935028
40 -3.0958265
41 -2.058421
42 -1.9353141
43 -0.8979086
44 -1.0374055
45 0
46 0.1231069
47 1.1605124
48 -5.3124362
49 -4.2750307
50 -4.1519238
51 -3.1145183
52 -3.2540152
53 -2.2166097
54 -2.0935028
55 -1.0560973
56 -2.058421
57 -1.0210155
58 -0.8979086
59 0.1394969
60 2.22044604925031e-16
61 1.0374055
62 1.1605124
63 2.1979179
64 -5.4519331
65 -4.4145276
66 -4.2914207
67 -3.2540152
68 -3.3935121
69 -2.3561066
70 -2.2329997
71 -1.1955942
72 -2.1979179
73 -1.1605124
74 -1.0374055
75 0
76 -0.1394969
77 0.8979086
78 1.0210155
79 2.058421
80 -4.4145276
81 -3.3771221
82 -3.2540152
83 -2.2166097
84 -2.3561066
85 -1.3187011
86 -1.1955942
87 -0.1581887
88 -1.1605124
89 -0.1231069
90 0
91 1.0374055
92 0.8979086
93 1.9353141
94 2.058421
95 3.0958265
96 -4.2914207
97 -3.2540152
98 -3.1309083
99 -2.0935028
100 -2.2329997
101 -1.1955942
102 -1.0724873
103 -0.0350817999999999
104 -1.0374055
105 0
106 0.1231069
107 1.1605124
108 1.0210155
109 2.058421
110 2.1815279
111 3.2189334
112 -3.2540152
113 -2.2166097
114 -2.0935028
115 -1.0560973
116 -1.1955942
117 -0.1581887
118 -0.0350817999999999
119 1.0023237
120 0
121 1.0374055
122 1.1605124
123 2.1979179
124 2.058421
125 3.0958265
126 3.2189334
127 4.2563389
128 -4.2563389
129 -3.2189334
130 -3.0958265
131 -2.058421
132 -2.1979179
133 -1.1605124
134 -1.0374055
135 0
136 -1.0023237
137 0.0350817999999999
138 0.1581887
139 1.1955942
140 1.0560973
141 2.0935028
142 2.2166097
143 3.2540152
144 -3.2189334
145 -2.1815279
146 -2.058421
147 -1.0210155
148 -1.1605124
149 -0.1231069
150 -4.44089209850063e-16
151 1.0374055
152 0.0350817999999995
153 1.0724873
154 1.1955942
155 2.2329997
156 2.0935028
157 3.1309083
158 3.2540152
159 4.2914207
160 -3.0958265
161 -2.058421
162 -1.9353141
163 -0.897908600000001
164 -1.0374055
165 -4.44089209850063e-16
166 0.123106899999999
167 1.1605124
168 0.158188699999999
169 1.1955942
170 1.3187011
171 2.3561066
172 2.2166097
173 3.2540152
174 3.3771221
175 4.4145276
176 -2.058421
177 -1.0210155
178 -0.897908600000001
179 0.1394969
180 -4.44089209850063e-16
181 1.0374055
182 1.1605124
183 2.1979179
184 1.1955942
185 2.2329997
186 2.3561066
187 3.3935121
188 3.2540152
189 4.2914207
190 4.4145276
191 5.4519331
192 -2.1979179
193 -1.1605124
194 -1.0374055
195 4.44089209850063e-16
196 -0.1394969
197 0.897908600000001
198 1.0210155
199 2.058421
200 1.0560973
201 2.0935028
202 2.2166097
203 3.2540152
204 3.1145183
205 4.1519238
206 4.2750307
207 5.3124362
208 -1.1605124
209 -0.123106899999999
210 4.44089209850063e-16
211 1.0374055
212 0.897908600000001
213 1.9353141
214 2.058421
215 3.0958265
216 2.0935028
217 3.1309083
218 3.2540152
219 4.2914207
220 4.1519238
221 5.1893293
222 5.3124362
223 6.3498417
224 -1.0374055
225 4.44089209850063e-16
226 0.1231069
227 1.1605124
228 1.0210155
229 2.058421
230 2.1815279
231 3.2189334
232 2.2166097
233 3.2540152
234 3.3771221
235 4.4145276
236 4.2750307
237 5.3124362
238 5.4355431
239 6.4729486
240 4.44089209850063e-16
241 1.0374055
242 1.1605124
243 2.1979179
244 2.058421
245 3.0958265
246 3.2189334
247 4.2563389
248 3.2540152
249 4.2914207
250 4.4145276
251 5.4519331
252 5.3124362
253 6.3498417
254 6.4729486
255 7.5103541
## kleene caching type
VECTOR
## kleene caching vec size
6561
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
1 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## kleene state hash key base
1
## state fluent hash keys (first line is the number of keys)
2
8 1
20 1
## kleene state fluent hash keys (first line is the number of keys)
2
8 1
20 1

## index
1
## state hash key (for each value in the domain)
0 2
## kleene state hash key base
3
## state fluent hash keys (first line is the number of keys)
2
9 1
21 1
## kleene state fluent hash keys (first line is the number of keys)
2
9 1
21 1

## index
2
## state hash key (for each value in the domain)
0 4
## kleene state hash key base
9
## state fluent hash keys (first line is the number of keys)
2
10 1
22 1
## kleene state fluent hash keys (first line is the number of keys)
2
10 1
22 1

## index
3
## state hash key (for each value in the domain)
0 8
## kleene state hash key base
27
## state fluent hash keys (first line is the number of keys)
2
11 1
23 1
## kleene state fluent hash keys (first line is the number of keys)
2
11 1
23 1

## index
4
## state hash key (for each value in the domain)
0 16
## kleene state hash key base
81
## state fluent hash keys (first line is the number of keys)
1
8 2
## kleene state fluent hash keys (first line is the number of keys)
1
8 3

## index
5
## state hash key (for each value in the domain)
0 32
## kleene state hash key base
243
## state fluent hash keys (first line is the number of keys)
1
9 2
## kleene state fluent hash keys (first line is the number of keys)
1
9 3

## index
6
## state hash key (for each value in the domain)
0 64
## kleene state hash key base
729
## state fluent hash keys (first line is the number of keys)
1
10 2
## kleene state fluent hash keys (first line is the number of keys)
1
10 3

## index
7
## state hash key (for each value in the domain)
0 128
## kleene state hash key base
2187
## state fluent hash keys (first line is the number of keys)
1
11 2
## kleene state fluent hash keys (first line is the number of keys)
1
11 3

## index
8
## state hash key (for each value in the domain)
0 256
## kleene state hash key base
6561
## state fluent hash keys (first line is the number of keys)
4
8 4
16 2
20 2
24 1
## kleene state fluent hash keys (first line is the number of keys)
4
8 9
16 2
20 3
24 1

## index
9
## state hash key (for each value in the domain)
0 512
## kleene state hash key base
19683
## state fluent hash keys (first line is the number of keys)
4
9 4
17 2
21 2
24 2
## kleene state fluent hash keys (first line is the number of keys)
4
9 9
17 2
21 3
24 3

## index
10
## state hash key (for each value in the domain)
0 1024
## kleene state hash key base
59049
## state fluent hash keys (first line is the number of keys)
4
10 4
18 2
22 2
24 4
## kleene state fluent hash keys (first line is the number of keys)
4
10 9
18 2
22 3
24 9

## index
11
## state hash key (for each value in the domain)
0 2048
## kleene state hash key base
177147
## state fluent hash keys (first line is the number of keys)
4
11 4
19 2
23 2
24 8
## kleene state fluent hash keys (first line is the number of keys)
4
11 9
19 2
23 3
24 27

## index
12
## state hash key (for each value in the domain)
0 4096
## kleene state hash key base
531441
## state fluent hash keys (first line is the number of keys)
21
0 2
1 2
2 2
3 2
4 2
5 2
6 2
7 2
8 8
12 3
13 3
14 3
15 3
16 4
17 4
18 4
19 4
20 4
21 4
22 4
23 4
## kleene state fluent hash keys (first line is the number of keys)
21
0 2
1 2
2 2
3 2
4 2
5 2
6 2
7 2
8 27
12 3
13 3
14 3
15 3
16 6
17 6
18 6
19 6
20 9
21 9
22 9
23 9

## index
13
## state hash key (for each value in the domain)
0 8192
## kleene state hash key base
1594323
## state fluent hash keys (first line is the number of keys)
21
0 4
1 4
2 4
3 4
4 4
5 4
6 4
7 4
9 8
12 6
13 6
14 6
15 6
16 8
17 8
18 8
19 8
20 8
21 8
22 8
23 8
## kleene state fluent hash keys (first line is the number of keys)
21
0 6
1 6
2 6
3 6
4 6
5 6
6 6
7 6
9 27
12 9
13 9
14 9
15 9
16 18
17 18
18 18
19 18
20 27
21 27
22 27
23 27

## index
14
## state hash key (for each value in the domain)
0 16384
## kleene state hash key base
4782969
## state fluent hash keys (first line is the number of keys)
21
0 8
1 8
2 8
3 8
4 8
5 8
6 8
7 8
10 8
12 12
13 12
14 12
15 12
16 16
17 16
18 16
19 16
20 16
21 16
22 16
23 16
## kleene state fluent hash keys (first line is the number of keys)
21
0 18
1 18
2 18
3 18
4 18
5 18
6 18
7 18
10 27
12 27
13 27
14 27
15 27
16 54
17 54
18 54
19 54
20 81
21 81
22 81
23 81

## index
15
## state hash key (for each value in the domain)
0 32768
## kleene state hash key base
14348907
## state fluent hash keys (first line is the number of keys)
21
0 16
1 16
2 16
3 16
4 16
5 16
6 16
7 16
11 8
12 24
13 24
14 24
15 24
16 32
17 32
18 32
19 32
20 32
21 32
22 32
23 32
## kleene state fluent hash keys (first line is the number of keys)
21
0 54
1 54
2 54
3 54
4 54
5 54
6 54
7 54
11 27
12 81
13 81
14 81
15 81
16 162
17 162
18 162
19 162
20 243
21 243
22 243
23 243


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 65536
## kleene state hash key base
43046721
## state fluent hash keys (first line is the number of keys)
2
8 16
20 64
## kleene state fluent hash keys (first line is the number of keys)
2
8 81
20 729

## index
1
## state hash key (for each value in the domain)
0 131072
## kleene state hash key base
129140163
## state fluent hash keys (first line is the number of keys)
2
9 16
21 64
## kleene state fluent hash keys (first line is the number of keys)
2
9 81
21 729

## index
2
## state hash key (for each value in the domain)
0 262144
## kleene state hash key base
387420489
## state fluent hash keys (first line is the number of keys)
2
10 16
22 64
## kleene state fluent hash keys (first line is the number of keys)
2
10 81
22 729

## index
3
## state hash key (for each value in the domain)
0 524288
## kleene state hash key base
1162261467
## state fluent hash keys (first line is the number of keys)
2
11 16
23 64
## kleene state fluent hash keys (first line is the number of keys)
2
11 81
23 729

## index
4
## state hash key (for each value in the domain)
0 1048576
## kleene state hash key base
3486784401
## state fluent hash keys (first line is the number of keys)
4
8 32
16 64
20 128
24 16
## kleene state fluent hash keys (first line is the number of keys)
4
8 243
16 486
20 2187
24 81

## index
5
## state hash key (for each value in the domain)
0 2097152
## kleene state hash key base
10460353203
## state fluent hash keys (first line is the number of keys)
8
6 32
7 32
9 32
17 64
18 64
19 64
21 128
24 32
## kleene state fluent hash keys (first line is the number of keys)
8
6 162
7 162
9 243
17 486
18 486
19 486
21 2187
24 243

## index
6
## state hash key (for each value in the domain)
0 4194304
## kleene state hash key base
31381059609
## state fluent hash keys (first line is the number of keys)
6
7 64
10 32
18 128
19 128
22 128
24 64
## kleene state fluent hash keys (first line is the number of keys)
6
7 486
10 243
18 1458
19 1458
22 2187
24 729

## index
7
## state hash key (for each value in the domain)
0 8388608
## kleene state hash key base
94143178827
## state fluent hash keys (first line is the number of keys)
4
11 32
19 256
23 128
24 128
## kleene state fluent hash keys (first line is the number of keys)
4
11 243
19 4374
23 2187
24 2187



#####TRAINING SET#####
200
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 1 0 0 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 
0 1 0 0 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 
0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 
0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 
0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 0 0 0 0 0 
0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 1 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 
1 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 
1 0 0 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 0 1 0 0 0 
1 0 0 0 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 
1 0 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 
0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 
0 1 0 0 0 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 
0 1 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 
0 1 0 0 0 1 0 0 1 0 1 1 0 1 0 0 0 0 0 0 1 0 0 0 
0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 
0 0 1 0 0 0 0 0 1 1 1 0 0 0 1 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 1 1 1 0 0 1 0 0 0 0 0 1 0 0 0 
0 0 1 0 0 0 0 0 1 1 1 1 0 0 1 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 0 0 0 
0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 
0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 1 0 0 0 0 1 0 0 0 
0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 1 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 1 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 1 1 0 0 0 1 0 0 0 1 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 1 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 1 1 1 0 0 1 0 0 0 1 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 
0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 1 0 0 0 1 1 0 0 0 
0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 
0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 1 0 0 
1 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 
1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 1 0 0 
0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 
0 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 0 0 
0 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 
0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 
0 0 1 0 0 0 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 0 0 
0 0 0 0 0 0 0 0 1 1 1 0 0 0 1 0 0 0 0 0 0 1 0 0 
0 0 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 0 0 
0 0 1 0 0 0 1 0 1 1 1 1 0 0 1 0 0 0 0 0 0 1 0 0 
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 
0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 
0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 1 0 0 0 0 0 1 0 0 
0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 1 0 0 0 0 1 0 0 
0 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 0 1 0 0 0 1 0 0 
0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 1 0 0 1 0 0 
0 0 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 0 1 0 0 1 0 0 
0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 
0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 1 1 0 0 
0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 1 1 0 0 
0 1 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 1 0 0 
0 0 0 0 0 0 0 0 1 1 1 0 0 0 1 0 0 0 0 0 1 1 0 0 
0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 1 0 0 0 0 1 1 0 0 
0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 0 0 
0 0 0 0 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 0 1 1 0 0 
0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 1 1 0 0 
0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 1 0 0 0 1 1 1 0 0 
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 
0 1 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 
0 1 0 0 0 1 0 0 1 0 1 1 0 1 0 0 0 0 0 0 0 0 1 0 
0 0 1 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 1 0 0 0 0 0 1 1 1 1 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 1 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 1 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 0 1 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 1 0 0 1 0 
0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 0 0 1 0 
0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 1 0 1 0 
0 1 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 0 1 0 
0 1 0 0 0 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 1 0 1 0 
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 1 0 1 0 
0 0 0 1 0 0 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 0 1 0 
0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 1 0 0 0 1 0 1 0 
0 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 0 1 0 0 1 0 1 0 
0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 1 0 1 0 1 0 
0 1 0 0 0 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 0 1 1 0 
0 0 1 0 0 0 1 0 1 1 1 0 0 0 1 0 0 0 0 0 0 1 1 0 
0 0 1 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 1 0 
0 0 0 1 0 0 0 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 0 
0 0 0 1 0 0 0 1 1 1 1 1 0 0 0 1 0 0 0 0 0 1 1 0 
0 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 1 0 0 0 0 1 1 0 
0 0 0 0 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 0 0 1 1 0 
0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 0 0 1 0 0 0 1 1 0 
0 0 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 0 1 0 0 1 1 0 
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 1 0 1 1 0 
0 0 1 0 0 0 1 0 1 1 1 1 0 0 1 0 0 0 0 0 1 1 1 0 
0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 1 1 0 
0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 1 0 0 0 1 1 1 1 0 
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 
0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 1 
1 0 0 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 1 
0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 1 
0 0 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 0 0 0 0 0 0 1 
0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 
0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 0 0 0 0 0 1 
0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 0 0 0 1 
0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 0 0 1 
0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 1 0 0 0 0 1 
0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 1 0 0 0 1 0 0 0 1 
0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 1 0 0 0 1 0 0 0 1 
0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 1 0 0 0 1 0 0 0 1 
0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 1 
0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 
1 0 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 0 0 1 
0 0 0 0 0 0 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 0 0 1 
0 1 0 0 0 1 0 0 1 0 1 1 0 1 0 0 0 0 0 0 1 0 0 1 
0 0 1 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 1 0 0 1 
0 0 1 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 0 1 0 0 1 
0 0 0 0 0 0 0 0 1 0 1 1 0 0 1 0 0 0 0 0 1 0 0 1 
0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 0 1 0 0 1 
0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 0 1 
0 0 0 0 0 0 0 0 1 0 1 1 0 0 1 0 0 0 1 0 1 0 0 1 
1 0 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 1 
0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 0 0 1 0 0 0 1 0 1 
0 0 0 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 1 0 0 1 0 1 
0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 1 0 0 0 1 0 1 0 1 
0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 0 1 0 1 
1 0 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 1 0 1 
0 1 0 0 0 1 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 1 
0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 0 0 1 1 0 1 
0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 1 0 0 0 1 1 0 1 
0 0 0 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 1 0 1 1 0 1 
0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 1 1 0 1 
0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 
0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 
0 0 0 0 0 0 0 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 1 1 
0 1 0 0 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 0 0 1 1 
0 0 1 0 0 0 0 0 0 1 1 1 0 0 1 0 0 0 0 0 0 0 1 1 
0 0 1 0 0 0 0 0 1 1 1 1 0 0 1 0 0 0 0 0 0 0 1 1 
0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 1 
0 0 0 1 0 0 0 0 1 0 1 1 0 0 0 1 0 0 0 0 0 0 1 1 
0 0 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 0 1 0 0 0 1 1 
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 1 0 0 1 1 
0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 1 0 1 1 
1 0 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 0 1 1 
0 0 0 1 0 0 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 0 1 1 
0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 1 0 1 1 
0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 1 1 1 
0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 1 1 1 
0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 0 0 1 0 0 0 1 1 1 
0 0 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 0 1 0 0 1 1 1 
0 0 0 0 0 0 0 0 1 1 1 1 0 0 1 0 0 0 1 0 0 1 1 1 
0 1 0 0 0 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 1 1 1 1 
0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 1 1 1 1 
