#####TASK#####
## name
navigation_inst_mdp__6
## horizon
40
## discount factor
1
## number of action fluents
4
## number of det state fluents
20
## number of prob state fluents
20
## number of preconds
0
## number of actions
5
## number of hashing functions
41
## initial state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
0
## method to calculate the final reward
NOOP
## 1 if reward formula allows reward lock detection and a reward lock was found during task analysis
1
## 1 if an unreasonable action was detected
1
## 1 if an unreasonable action was detected in the determinization
1
## number of states that were encountered during task analysis
3884
## number of unique states that were encountered during task analysis
14
## number of states with only one applicable reasonable action that were encountered during task analysis
3549
## number of unique states with only one applicable reasonable action that were encountered during task analysis
1


#####ACTION FLUENTS#####
## index
0
## name
move-east
## number of values
2
## values
0 false
1 true

## index
1
## name
move-north
## number of values
2
## values
0 false
1 true

## index
2
## name
move-south
## number of values
2
## values
0 false
1 true

## index
3
## name
move-west
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
robot-at(x105, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(0)) and($a(3) $s(0))) : $c(0)) (or(and($a(2) $s(20)) and($a(0) $s(16))) : $c(1)) ($c(1) : $s(0)) )
## hash index
0
## caching type 
VECTOR
## precomputed results
80
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 1
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 1
26 0
27 1
28 0
29 1
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 1
43 0
44 0
45 1
46 0
47 1
48 0
49 1
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 1
63 0
64 1
65 1
66 0
67 1
68 0
69 1
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
1
## name
robot-at(x105, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(1) : $c(1)) (or($s(1) and($a(2) $s(1)) and($a(3) $s(1))) : $c(0)) (or(and($a(1) $s(21)) and($a(0) $s(17))) : $c(1)) ($c(1) : $s(1)) )
## hash index
1
## caching type 
VECTOR
## precomputed results
40
0 0
1 0
2 0
3 0
4 0
5 1
6 1
7 1
8 1
9 1
10 0
11 0
12 0
13 0
14 1
15 1
16 1
17 1
18 1
19 1
20 0
21 0
22 0
23 1
24 0
25 1
26 1
27 1
28 1
29 1
30 0
31 0
32 0
33 1
34 1
35 1
36 1
37 1
38 1
39 1
## kleene caching type
VECTOR
## kleene caching vec size
135
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
2
## name
robot-at(x14, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(2)) and($a(0) $s(2)) and($a(3) $s(2))) : $c(0)) (or(and($a(2) $s(22)) and($a(0) $s(18)) and($a(3) $s(4))) : $c(1)) ($c(1) : $s(2)) )
## hash index
2
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 1
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 1
45 0
46 0
47 0
48 0
49 0
50 1
51 0
52 1
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 1
62 0
63 0
64 1
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 1
91 0
92 1
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 1
102 1
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 1
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 1
123 0
124 1
125 0
126 0
127 0
128 0
129 0
130 1
131 0
132 1
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 1
142 1
143 0
144 1
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 1
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
3
## name
robot-at(x14, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(2) $s(3)) and($a(0) $s(3)) and($a(3) $s(3))) : $c(0)) (or(and($a(1) $s(23)) and($a(0) $s(19)) and($a(3) $s(5))) : $c(1)) ($c(1) : $s(3)) )
## hash index
3
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 1
45 0
46 0
47 0
48 0
49 0
50 1
51 0
52 0
53 1
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 1
62 0
63 0
64 1
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 0
89 0
90 1
91 0
92 0
93 1
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 1
102 0
103 1
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 0
113 1
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 1
124 1
125 0
126 0
127 0
128 0
129 0
130 1
131 0
132 0
133 1
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 1
142 0
143 1
144 1
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 0
153 1
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
4
## name
robot-at(x21, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(4)) and($a(0) $s(4)) and($a(3) $s(4))) : $c(0)) (or(and($a(2) $s(24)) and($a(0) $s(2)) and($a(3) $s(6))) : $c(1)) ($c(1) : $s(4)) )
## hash index
4
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 1
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 1
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 1
93 0
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 1
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 1
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 1
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 1
133 0
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 1
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 1
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
5
## name
robot-at(x21, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(2) $s(5)) and($a(0) $s(5)) and($a(3) $s(5))) : $c(0)) (or(and($a(1) $s(25)) and($a(0) $s(3)) and($a(3) $s(7))) : $c(1)) ($c(1) : $s(5)) )
## hash index
5
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 1
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 0
103 1
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 0
113 1
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 0
123 1
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 0
133 1
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 0
143 1
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 0
153 1
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
6
## name
robot-at(x30, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(6)) and($a(0) $s(6)) and($a(3) $s(6))) : $c(0)) (or(and($a(2) $s(26)) and($a(0) $s(4)) and($a(3) $s(8))) : $c(1)) ($c(1) : $s(6)) )
## hash index
6
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 1
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 1
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 1
93 0
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 1
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 1
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 1
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 1
133 0
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 1
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 1
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
7
## name
robot-at(x30, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(2) $s(7)) and($a(0) $s(7)) and($a(3) $s(7))) : $c(0)) (or(and($a(1) $s(27)) and($a(0) $s(5)) and($a(3) $s(9))) : $c(1)) ($c(1) : $s(7)) )
## hash index
7
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 1
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 0
103 1
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 0
113 1
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 0
123 1
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 0
133 1
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 0
143 1
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 0
153 1
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
8
## name
robot-at(x41, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(8)) and($a(0) $s(8)) and($a(3) $s(8))) : $c(0)) (or(and($a(2) $s(28)) and($a(0) $s(6)) and($a(3) $s(10))) : $c(1)) ($c(1) : $s(8)) )
## hash index
8
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 1
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 1
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 1
93 0
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 1
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 1
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 1
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 1
133 0
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 1
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 1
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
9
## name
robot-at(x41, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(2) $s(9)) and($a(0) $s(9)) and($a(3) $s(9))) : $c(0)) (or(and($a(1) $s(29)) and($a(0) $s(7)) and($a(3) $s(11))) : $c(1)) ($c(1) : $s(9)) )
## hash index
9
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 1
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 0
103 1
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 0
113 1
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 0
123 1
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 0
133 1
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 0
143 1
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 0
153 1
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
10
## name
robot-at(x54, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(10)) and($a(0) $s(10)) and($a(3) $s(10))) : $c(0)) (or(and($a(2) $s(30)) and($a(0) $s(8)) and($a(3) $s(14))) : $c(1)) ($c(1) : $s(10)) )
## hash index
10
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 1
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 1
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 1
93 0
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 1
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 1
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 1
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 1
133 0
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 1
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 1
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
11
## name
robot-at(x54, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(2) $s(11)) and($a(0) $s(11)) and($a(3) $s(11))) : $c(0)) (or(and($a(1) $s(31)) and($a(0) $s(9)) and($a(3) $s(15))) : $c(1)) ($c(1) : $s(11)) )
## hash index
11
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 1
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 0
103 1
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 0
113 1
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 0
123 1
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 0
133 1
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 0
143 1
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 0
153 1
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
12
## name
robot-at(x6, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(12)) and($a(0) $s(12))) : $c(0)) (or(and($a(2) $s(32)) and($a(3) $s(18))) : $c(1)) ($c(1) : $s(12)) )
## hash index
12
## caching type 
VECTOR
## precomputed results
80
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 1
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 1
32 1
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 1
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 1
51 1
52 1
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 1
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 1
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
13
## name
robot-at(x6, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(2) $s(13)) and($a(0) $s(13))) : $c(0)) (or(and($a(1) $s(33)) and($a(3) $s(19))) : $c(1)) ($c(1) : $s(13)) )
## hash index
13
## caching type 
VECTOR
## precomputed results
80
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 1
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 1
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 1
44 0
45 0
46 0
47 0
48 0
49 0
50 1
51 1
52 0
53 1
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 1
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 1
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
14
## name
robot-at(x69, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(14)) and($a(0) $s(14)) and($a(3) $s(14))) : $c(0)) (or(and($a(2) $s(34)) and($a(0) $s(10)) and($a(3) $s(16))) : $c(1)) ($c(1) : $s(14)) )
## hash index
14
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 1
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 1
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 1
93 0
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 1
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 1
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 1
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 1
133 0
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 1
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 1
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
15
## name
robot-at(x69, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(2) $s(15)) and($a(0) $s(15)) and($a(3) $s(15))) : $c(0)) (or(and($a(1) $s(35)) and($a(0) $s(11)) and($a(3) $s(17))) : $c(1)) ($c(1) : $s(15)) )
## hash index
15
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 1
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 0
103 1
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 0
113 1
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 0
123 1
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 0
133 1
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 0
143 1
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 0
153 1
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
16
## name
robot-at(x86, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(16)) and($a(0) $s(16)) and($a(3) $s(16))) : $c(0)) (or(and($a(2) $s(36)) and($a(0) $s(14)) and($a(3) $s(0))) : $c(1)) ($c(1) : $s(16)) )
## hash index
16
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 0
26 1
27 0
28 0
29 1
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 1
41 0
42 1
43 0
44 0
45 1
46 0
47 1
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 1
63 0
64 0
65 1
66 0
67 1
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 1
87 1
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 1
103 0
104 1
105 0
106 1
107 1
108 0
109 1
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 1
121 0
122 1
123 0
124 0
125 1
126 0
127 1
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 1
143 0
144 0
145 1
146 0
147 1
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
17
## name
robot-at(x86, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(2) $s(17)) and($a(0) $s(17)) and($a(3) $s(17))) : $c(0)) (or(and($a(1) $s(37)) and($a(0) $s(15)) and($a(3) $s(1))) : $c(1)) ($c(1) : $s(17)) )
## hash index
17
## caching type 
VECTOR
## precomputed results
80
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 1
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 1
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
18
## name
robot-at(x9, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(18)) and($a(0) $s(18)) and($a(3) $s(18))) : $c(0)) (or(and($a(2) $s(38)) and($a(0) $s(12)) and($a(3) $s(2))) : $c(1)) ($c(1) : $s(18)) )
## hash index
18
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 0
26 0
27 0
28 0
29 0
30 0
31 1
32 0
33 0
34 1
35 0
36 0
37 0
38 0
39 0
40 1
41 0
42 1
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 1
51 0
52 1
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 1
92 1
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 1
103 0
104 1
105 0
106 0
107 0
108 0
109 0
110 0
111 1
112 1
113 0
114 1
115 0
116 0
117 0
118 0
119 0
120 1
121 0
122 1
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 1
131 0
132 1
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 1
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 1
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
19
## name
robot-at(x9, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(2) $s(19)) and($a(0) $s(19)) and($a(3) $s(19))) : $c(0)) (or(and($a(1) $s(39)) and($a(0) $s(13)) and($a(3) $s(3))) : $c(1)) ($c(1) : $s(19)) )
## hash index
19
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 0
26 0
27 0
28 0
29 0
30 0
31 1
32 0
33 0
34 1
35 0
36 0
37 0
38 0
39 0
40 1
41 0
42 0
43 1
44 0
45 0
46 0
47 0
48 0
49 0
50 1
51 0
52 0
53 1
54 0
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 1
92 0
93 1
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 1
104 1
105 0
106 0
107 0
108 0
109 0
110 0
111 1
112 0
113 1
114 1
115 0
116 0
117 0
118 0
119 0
120 1
121 0
122 0
123 1
124 0
125 0
126 0
127 0
128 0
129 0
130 1
131 0
132 0
133 1
134 0
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 0
143 1
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 0
153 1
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
robot-at(x105, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(20)) and($a(2) $s(20)) and($a(3) $s(20))) : $c(0)) (or(and($a(1) $s(0)) and($a(2) $s(21)) and($a(0) $s(36))) : Bernoulli($c(0.0725652991483609))) ($c(1) : $s(20)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(20)) and($a(2) $s(20)) and($a(3) $s(20))) : $c(0)) (or(and($a(1) $s(0)) and($a(2) $s(21)) and($a(0) $s(36))) : $c(0)) ($c(1) : $s(20)) )
## hash index
20
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
160
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 2 0 0.927434700851639 1 0.0725652991483609
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 1 1 1 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 1 1 1 1
25 1 1 1 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 1 1 1 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 2 0 0.927434700851639 1 0.0725652991483609
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 2 0 0.927434700851639 1 0.0725652991483609
48 0 2 0 0.927434700851639 1 0.0725652991483609
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 1 1 1 1
65 1 1 1 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 1 1 1 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 2 0 0.927434700851639 1 0.0725652991483609
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 2 0 0.927434700851639 1 0.0725652991483609
89 0 2 0 0.927434700851639 1 0.0725652991483609
90 0 1 0 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 2 0 0.927434700851639 1 0.0725652991483609
105 1 1 1 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 2 0 0.927434700851639 1 0.0725652991483609
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 0 1 0 1
122 0 2 0 0.927434700851639 1 0.0725652991483609
123 0 1 0 1
124 0 2 0 0.927434700851639 1 0.0725652991483609
125 0 1 0 1
126 0 1 0 1
127 0 2 0 0.927434700851639 1 0.0725652991483609
128 0 2 0 0.927434700851639 1 0.0725652991483609
129 0 2 0 0.927434700851639 1 0.0725652991483609
130 0 1 0 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 2 0 0.927434700851639 1 0.0725652991483609
145 1 1 1 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 2 0 0.927434700851639 1 0.0725652991483609
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
1
## name
robot-at(x105, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(21)) and($a(2) $s(21)) and($a(3) $s(21))) : $c(0)) (or(and($a(1) $s(20)) and($a(2) $s(1)) and($a(0) $s(37))) : Bernoulli($c(0.0883064633623386))) ($c(1) : $s(21)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(21)) and($a(2) $s(21)) and($a(3) $s(21))) : $c(0)) (or(and($a(1) $s(20)) and($a(2) $s(1)) and($a(0) $s(37))) : $c(0)) ($c(1) : $s(21)) )
## hash index
21
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
80
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 2 0 0.911693536637661 1 0.0883064633623386
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 1 1 1 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 1 1 1 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 1 1 1 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 1 1 1 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 2 0 0.911693536637661 1 0.0883064633623386
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 2 0 0.911693536637661 1 0.0883064633623386
54 0 2 0 0.911693536637661 1 0.0883064633623386
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 2 0 0.911693536637661 1 0.0883064633623386
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 2 0 0.911693536637661 1 0.0883064633623386
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
2
## name
robot-at(x14, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(22)) and($a(2) $s(22)) and($a(0) $s(22)) and($a(3) $s(22))) : $c(0)) (or(and($a(1) $s(2)) and($a(2) $s(23)) and($a(0) $s(38)) and($a(3) $s(24))) : Bernoulli($c(0.787523456280016))) ($c(1) : $s(22)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(22)) and($a(2) $s(22)) and($a(0) $s(22)) and($a(3) $s(22))) : $c(0)) (or(and($a(1) $s(2)) and($a(2) $s(23)) and($a(0) $s(38)) and($a(3) $s(24))) : $c(1)) ($c(1) : $s(22)) )
## hash index
22
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.212476543719984 1 0.787523456280016
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 1 1 1 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 1 1 1 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 1 2 0 0.212476543719984 1 0.787523456280016
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 1 2 0 0.212476543719984 1 0.787523456280016
53 1 2 0 0.212476543719984 1 0.787523456280016
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 1 2 0 0.212476543719984 1 0.787523456280016
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 1 2 0 0.212476543719984 1 0.787523456280016
92 0 1 0 1
93 1 2 0 0.212476543719984 1 0.787523456280016
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 1 2 0 0.212476543719984 1 0.787523456280016
122 1 2 0 0.212476543719984 1 0.787523456280016
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 1 2 0 0.212476543719984 1 0.787523456280016
132 1 2 0 0.212476543719984 1 0.787523456280016
133 1 2 0 0.212476543719984 1 0.787523456280016
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 1 2 0 0.212476543719984 1 0.787523456280016
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 1 0 1
172 0 1 0 1
173 1 2 0 0.212476543719984 1 0.787523456280016
174 1 2 0 0.212476543719984 1 0.787523456280016
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 1 1 1 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 1 1 1 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 1 0 1
202 1 2 0 0.212476543719984 1 0.787523456280016
203 0 1 0 1
204 1 2 0 0.212476543719984 1 0.787523456280016
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 1 0 1
212 1 2 0 0.212476543719984 1 0.787523456280016
213 1 2 0 0.212476543719984 1 0.787523456280016
214 1 2 0 0.212476543719984 1 0.787523456280016
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 1 2 0 0.212476543719984 1 0.787523456280016
242 0 1 0 1
243 0 1 0 1
244 1 2 0 0.212476543719984 1 0.787523456280016
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 1 2 0 0.212476543719984 1 0.787523456280016
252 0 1 0 1
253 1 2 0 0.212476543719984 1 0.787523456280016
254 1 2 0 0.212476543719984 1 0.787523456280016
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 0 1 0 1
281 1 2 0 0.212476543719984 1 0.787523456280016
282 1 2 0 0.212476543719984 1 0.787523456280016
283 0 1 0 1
284 1 2 0 0.212476543719984 1 0.787523456280016
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 0 1 0 1
291 1 2 0 0.212476543719984 1 0.787523456280016
292 1 2 0 0.212476543719984 1 0.787523456280016
293 1 2 0 0.212476543719984 1 0.787523456280016
294 1 2 0 0.212476543719984 1 0.787523456280016
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
3
## name
robot-at(x14, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(23)) and($a(2) $s(23)) and($a(0) $s(23)) and($a(3) $s(23))) : $c(0)) (or(and($a(1) $s(22)) and($a(2) $s(3)) and($a(0) $s(39)) and($a(3) $s(25))) : Bernoulli($c(0.783199392621302))) ($c(1) : $s(23)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(23)) and($a(2) $s(23)) and($a(0) $s(23)) and($a(3) $s(23))) : $c(0)) (or(and($a(1) $s(22)) and($a(2) $s(3)) and($a(0) $s(39)) and($a(3) $s(25))) : $c(1)) ($c(1) : $s(23)) )
## hash index
23
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 1 2 0 0.216800607378698 1 0.783199392621302
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 1 2 0 0.216800607378698 1 0.783199392621302
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 1 2 0 0.216800607378698 1 0.783199392621302
33 1 2 0 0.216800607378698 1 0.783199392621302
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 1 2 0 0.216800607378698 1 0.783199392621302
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 1 2 0 0.216800607378698 1 0.783199392621302
92 1 2 0 0.216800607378698 1 0.783199392621302
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 1 2 0 0.216800607378698 1 0.783199392621302
102 0 1 0 1
103 1 2 0 0.216800607378698 1 0.783199392621302
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 1 2 0 0.216800607378698 1 0.783199392621302
112 1 2 0 0.216800607378698 1 0.783199392621302
113 1 2 0 0.216800607378698 1 0.783199392621302
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 1 2 0 0.216800607378698 1 0.783199392621302
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 1 0 1
172 1 2 0 0.216800607378698 1 0.783199392621302
173 0 1 0 1
174 1 2 0 0.216800607378698 1 0.783199392621302
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 1 0 1
182 0 1 0 1
183 1 2 0 0.216800607378698 1 0.783199392621302
184 1 2 0 0.216800607378698 1 0.783199392621302
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 1 0 1
192 1 2 0 0.216800607378698 1 0.783199392621302
193 1 2 0 0.216800607378698 1 0.783199392621302
194 1 2 0 0.216800607378698 1 0.783199392621302
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 1 2 0 0.216800607378698 1 0.783199392621302
242 0 1 0 1
243 0 1 0 1
244 1 2 0 0.216800607378698 1 0.783199392621302
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 1 2 0 0.216800607378698 1 0.783199392621302
252 1 2 0 0.216800607378698 1 0.783199392621302
253 0 1 0 1
254 1 2 0 0.216800607378698 1 0.783199392621302
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 1 2 0 0.216800607378698 1 0.783199392621302
262 0 1 0 1
263 1 2 0 0.216800607378698 1 0.783199392621302
264 1 2 0 0.216800607378698 1 0.783199392621302
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 1 2 0 0.216800607378698 1 0.783199392621302
272 1 2 0 0.216800607378698 1 0.783199392621302
273 1 2 0 0.216800607378698 1 0.783199392621302
274 1 2 0 0.216800607378698 1 0.783199392621302
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
4
## name
robot-at(x21, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(24)) and($a(2) $s(24)) and($a(0) $s(24)) and($a(3) $s(24))) : $c(0)) (or(and($a(1) $s(4)) and($a(2) $s(25)) and($a(0) $s(22)) and($a(3) $s(26))) : Bernoulli($c(0.663371353927586))) ($c(1) : $s(24)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(24)) and($a(2) $s(24)) and($a(0) $s(24)) and($a(3) $s(24))) : $c(0)) (or(and($a(1) $s(4)) and($a(2) $s(25)) and($a(0) $s(22)) and($a(3) $s(26))) : $c(1)) ($c(1) : $s(24)) )
## hash index
24
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.336628646072414 1 0.663371353927586
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 1 2 0 0.336628646072414 1 0.663371353927586
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 1 2 0 0.336628646072414 1 0.663371353927586
34 1 2 0 0.336628646072414 1 0.663371353927586
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 1 2 0 0.336628646072414 1 0.663371353927586
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 1 2 0 0.336628646072414 1 0.663371353927586
93 1 2 0 0.336628646072414 1 0.663371353927586
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 1 2 0 0.336628646072414 1 0.663371353927586
103 0 1 0 1
104 1 2 0 0.336628646072414 1 0.663371353927586
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 1 2 0 0.336628646072414 1 0.663371353927586
113 1 2 0 0.336628646072414 1 0.663371353927586
114 1 2 0 0.336628646072414 1 0.663371353927586
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 1 2 0 0.336628646072414 1 0.663371353927586
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 1 2 0 0.336628646072414 1 0.663371353927586
172 0 1 0 1
173 1 2 0 0.336628646072414 1 0.663371353927586
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 1 2 0 0.336628646072414 1 0.663371353927586
182 0 1 0 1
183 0 1 0 1
184 1 2 0 0.336628646072414 1 0.663371353927586
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 1 2 0 0.336628646072414 1 0.663371353927586
192 0 1 0 1
193 1 2 0 0.336628646072414 1 0.663371353927586
194 1 2 0 0.336628646072414 1 0.663371353927586
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 1 2 0 0.336628646072414 1 0.663371353927586
242 1 2 0 0.336628646072414 1 0.663371353927586
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 1 2 0 0.336628646072414 1 0.663371353927586
252 1 2 0 0.336628646072414 1 0.663371353927586
253 1 2 0 0.336628646072414 1 0.663371353927586
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 1 2 0 0.336628646072414 1 0.663371353927586
262 1 2 0 0.336628646072414 1 0.663371353927586
263 0 1 0 1
264 1 2 0 0.336628646072414 1 0.663371353927586
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 1 2 0 0.336628646072414 1 0.663371353927586
272 1 2 0 0.336628646072414 1 0.663371353927586
273 1 2 0 0.336628646072414 1 0.663371353927586
274 1 2 0 0.336628646072414 1 0.663371353927586
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
5
## name
robot-at(x21, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(25)) and($a(2) $s(25)) and($a(0) $s(25)) and($a(3) $s(25))) : $c(0)) (or(and($a(1) $s(24)) and($a(2) $s(5)) and($a(0) $s(23)) and($a(3) $s(27))) : Bernoulli($c(0.653802597481344))) ($c(1) : $s(25)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(25)) and($a(2) $s(25)) and($a(0) $s(25)) and($a(3) $s(25))) : $c(0)) (or(and($a(1) $s(24)) and($a(2) $s(5)) and($a(0) $s(23)) and($a(3) $s(27))) : $c(1)) ($c(1) : $s(25)) )
## hash index
25
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 1 2 0 0.346197402518656 1 0.653802597481344
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 1 2 0 0.346197402518656 1 0.653802597481344
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 1 2 0 0.346197402518656 1 0.653802597481344
33 0 1 0 1
34 1 2 0 0.346197402518656 1 0.653802597481344
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 1 2 0 0.346197402518656 1 0.653802597481344
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 1 2 0 0.346197402518656 1 0.653802597481344
53 1 2 0 0.346197402518656 1 0.653802597481344
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 1 2 0 0.346197402518656 1 0.653802597481344
64 1 2 0 0.346197402518656 1 0.653802597481344
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 1 2 0 0.346197402518656 1 0.653802597481344
73 1 2 0 0.346197402518656 1 0.653802597481344
74 1 2 0 0.346197402518656 1 0.653802597481344
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 1 2 0 0.346197402518656 1 0.653802597481344
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 1 2 0 0.346197402518656 1 0.653802597481344
172 1 2 0 0.346197402518656 1 0.653802597481344
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 1 2 0 0.346197402518656 1 0.653802597481344
182 0 1 0 1
183 0 1 0 1
184 1 2 0 0.346197402518656 1 0.653802597481344
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 1 2 0 0.346197402518656 1 0.653802597481344
192 1 2 0 0.346197402518656 1 0.653802597481344
193 0 1 0 1
194 1 2 0 0.346197402518656 1 0.653802597481344
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 1 2 0 0.346197402518656 1 0.653802597481344
202 0 1 0 1
203 1 2 0 0.346197402518656 1 0.653802597481344
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 1 2 0 0.346197402518656 1 0.653802597481344
212 1 2 0 0.346197402518656 1 0.653802597481344
213 1 2 0 0.346197402518656 1 0.653802597481344
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 1 2 0 0.346197402518656 1 0.653802597481344
222 0 1 0 1
223 1 2 0 0.346197402518656 1 0.653802597481344
224 1 2 0 0.346197402518656 1 0.653802597481344
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 1 2 0 0.346197402518656 1 0.653802597481344
232 1 2 0 0.346197402518656 1 0.653802597481344
233 1 2 0 0.346197402518656 1 0.653802597481344
234 1 2 0 0.346197402518656 1 0.653802597481344
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
6
## name
robot-at(x30, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(26)) and($a(2) $s(26)) and($a(0) $s(26)) and($a(3) $s(26))) : $c(0)) (or(and($a(1) $s(6)) and($a(2) $s(27)) and($a(0) $s(24)) and($a(3) $s(28))) : Bernoulli($c(0.570370025725828))) ($c(1) : $s(26)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(26)) and($a(2) $s(26)) and($a(0) $s(26)) and($a(3) $s(26))) : $c(0)) (or(and($a(1) $s(6)) and($a(2) $s(27)) and($a(0) $s(24)) and($a(3) $s(28))) : $c(1)) ($c(1) : $s(26)) )
## hash index
26
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.429629974274172 1 0.570370025725828
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 1 2 0 0.429629974274172 1 0.570370025725828
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 1 2 0 0.429629974274172 1 0.570370025725828
34 1 2 0 0.429629974274172 1 0.570370025725828
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 1 2 0 0.429629974274172 1 0.570370025725828
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 1 2 0 0.429629974274172 1 0.570370025725828
93 1 2 0 0.429629974274172 1 0.570370025725828
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 1 2 0 0.429629974274172 1 0.570370025725828
103 0 1 0 1
104 1 2 0 0.429629974274172 1 0.570370025725828
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 1 2 0 0.429629974274172 1 0.570370025725828
113 1 2 0 0.429629974274172 1 0.570370025725828
114 1 2 0 0.429629974274172 1 0.570370025725828
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 1 2 0 0.429629974274172 1 0.570370025725828
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 1 2 0 0.429629974274172 1 0.570370025725828
172 0 1 0 1
173 1 2 0 0.429629974274172 1 0.570370025725828
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 1 2 0 0.429629974274172 1 0.570370025725828
182 0 1 0 1
183 0 1 0 1
184 1 2 0 0.429629974274172 1 0.570370025725828
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 1 2 0 0.429629974274172 1 0.570370025725828
192 0 1 0 1
193 1 2 0 0.429629974274172 1 0.570370025725828
194 1 2 0 0.429629974274172 1 0.570370025725828
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 1 2 0 0.429629974274172 1 0.570370025725828
242 1 2 0 0.429629974274172 1 0.570370025725828
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 1 2 0 0.429629974274172 1 0.570370025725828
252 1 2 0 0.429629974274172 1 0.570370025725828
253 1 2 0 0.429629974274172 1 0.570370025725828
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 1 2 0 0.429629974274172 1 0.570370025725828
262 1 2 0 0.429629974274172 1 0.570370025725828
263 0 1 0 1
264 1 2 0 0.429629974274172 1 0.570370025725828
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 1 2 0 0.429629974274172 1 0.570370025725828
272 1 2 0 0.429629974274172 1 0.570370025725828
273 1 2 0 0.429629974274172 1 0.570370025725828
274 1 2 0 0.429629974274172 1 0.570370025725828
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
7
## name
robot-at(x30, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(27)) and($a(2) $s(27)) and($a(0) $s(27)) and($a(3) $s(27))) : $c(0)) (or(and($a(1) $s(26)) and($a(2) $s(7)) and($a(0) $s(25)) and($a(3) $s(29))) : Bernoulli($c(0.567014418335425))) ($c(1) : $s(27)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(27)) and($a(2) $s(27)) and($a(0) $s(27)) and($a(3) $s(27))) : $c(0)) (or(and($a(1) $s(26)) and($a(2) $s(7)) and($a(0) $s(25)) and($a(3) $s(29))) : $c(1)) ($c(1) : $s(27)) )
## hash index
27
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 1 2 0 0.432985581664575 1 0.567014418335425
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 1 2 0 0.432985581664575 1 0.567014418335425
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 1 2 0 0.432985581664575 1 0.567014418335425
33 0 1 0 1
34 1 2 0 0.432985581664575 1 0.567014418335425
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 1 2 0 0.432985581664575 1 0.567014418335425
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 1 2 0 0.432985581664575 1 0.567014418335425
53 1 2 0 0.432985581664575 1 0.567014418335425
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 1 2 0 0.432985581664575 1 0.567014418335425
64 1 2 0 0.432985581664575 1 0.567014418335425
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 1 2 0 0.432985581664575 1 0.567014418335425
73 1 2 0 0.432985581664575 1 0.567014418335425
74 1 2 0 0.432985581664575 1 0.567014418335425
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 1 2 0 0.432985581664575 1 0.567014418335425
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 1 2 0 0.432985581664575 1 0.567014418335425
172 1 2 0 0.432985581664575 1 0.567014418335425
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 1 2 0 0.432985581664575 1 0.567014418335425
182 0 1 0 1
183 0 1 0 1
184 1 2 0 0.432985581664575 1 0.567014418335425
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 1 2 0 0.432985581664575 1 0.567014418335425
192 1 2 0 0.432985581664575 1 0.567014418335425
193 0 1 0 1
194 1 2 0 0.432985581664575 1 0.567014418335425
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 1 2 0 0.432985581664575 1 0.567014418335425
202 0 1 0 1
203 1 2 0 0.432985581664575 1 0.567014418335425
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 1 2 0 0.432985581664575 1 0.567014418335425
212 1 2 0 0.432985581664575 1 0.567014418335425
213 1 2 0 0.432985581664575 1 0.567014418335425
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 1 2 0 0.432985581664575 1 0.567014418335425
222 0 1 0 1
223 1 2 0 0.432985581664575 1 0.567014418335425
224 1 2 0 0.432985581664575 1 0.567014418335425
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 1 2 0 0.432985581664575 1 0.567014418335425
232 1 2 0 0.432985581664575 1 0.567014418335425
233 1 2 0 0.432985581664575 1 0.567014418335425
234 1 2 0 0.432985581664575 1 0.567014418335425
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
8
## name
robot-at(x41, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(28)) and($a(2) $s(28)) and($a(0) $s(28)) and($a(3) $s(28))) : $c(0)) (or(and($a(1) $s(8)) and($a(2) $s(29)) and($a(0) $s(26)) and($a(3) $s(30))) : Bernoulli($c(0.449810804799199))) ($c(1) : $s(28)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(28)) and($a(2) $s(28)) and($a(0) $s(28)) and($a(3) $s(28))) : $c(0)) (or(and($a(1) $s(8)) and($a(2) $s(29)) and($a(0) $s(26)) and($a(3) $s(30))) : $c(0)) ($c(1) : $s(28)) )
## hash index
28
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 2 0 0.550189195200801 1 0.449810804799199
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 2 0 0.550189195200801 1 0.449810804799199
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 2 0 0.550189195200801 1 0.449810804799199
34 0 2 0 0.550189195200801 1 0.449810804799199
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 2 0 0.550189195200801 1 0.449810804799199
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 2 0 0.550189195200801 1 0.449810804799199
93 0 2 0 0.550189195200801 1 0.449810804799199
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 2 0 0.550189195200801 1 0.449810804799199
103 0 1 0 1
104 0 2 0 0.550189195200801 1 0.449810804799199
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 2 0 0.550189195200801 1 0.449810804799199
113 0 2 0 0.550189195200801 1 0.449810804799199
114 0 2 0 0.550189195200801 1 0.449810804799199
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.550189195200801 1 0.449810804799199
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.550189195200801 1 0.449810804799199
172 0 1 0 1
173 0 2 0 0.550189195200801 1 0.449810804799199
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.550189195200801 1 0.449810804799199
182 0 1 0 1
183 0 1 0 1
184 0 2 0 0.550189195200801 1 0.449810804799199
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 2 0 0.550189195200801 1 0.449810804799199
192 0 1 0 1
193 0 2 0 0.550189195200801 1 0.449810804799199
194 0 2 0 0.550189195200801 1 0.449810804799199
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 0 2 0 0.550189195200801 1 0.449810804799199
242 0 2 0 0.550189195200801 1 0.449810804799199
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 0 2 0 0.550189195200801 1 0.449810804799199
252 0 2 0 0.550189195200801 1 0.449810804799199
253 0 2 0 0.550189195200801 1 0.449810804799199
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 2 0 0.550189195200801 1 0.449810804799199
262 0 2 0 0.550189195200801 1 0.449810804799199
263 0 1 0 1
264 0 2 0 0.550189195200801 1 0.449810804799199
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 2 0 0.550189195200801 1 0.449810804799199
272 0 2 0 0.550189195200801 1 0.449810804799199
273 0 2 0 0.550189195200801 1 0.449810804799199
274 0 2 0 0.550189195200801 1 0.449810804799199
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
9
## name
robot-at(x41, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(29)) and($a(2) $s(29)) and($a(0) $s(29)) and($a(3) $s(29))) : $c(0)) (or(and($a(1) $s(28)) and($a(2) $s(9)) and($a(0) $s(27)) and($a(3) $s(31))) : Bernoulli($c(0.484613048378378))) ($c(1) : $s(29)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(29)) and($a(2) $s(29)) and($a(0) $s(29)) and($a(3) $s(29))) : $c(0)) (or(and($a(1) $s(28)) and($a(2) $s(9)) and($a(0) $s(27)) and($a(3) $s(31))) : $c(0)) ($c(1) : $s(29)) )
## hash index
29
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 2 0 0.515386951621622 1 0.484613048378378
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 2 0 0.515386951621622 1 0.484613048378378
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 2 0 0.515386951621622 1 0.484613048378378
33 0 1 0 1
34 0 2 0 0.515386951621622 1 0.484613048378378
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 2 0 0.515386951621622 1 0.484613048378378
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 2 0 0.515386951621622 1 0.484613048378378
53 0 2 0 0.515386951621622 1 0.484613048378378
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 2 0 0.515386951621622 1 0.484613048378378
64 0 2 0 0.515386951621622 1 0.484613048378378
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 2 0 0.515386951621622 1 0.484613048378378
73 0 2 0 0.515386951621622 1 0.484613048378378
74 0 2 0 0.515386951621622 1 0.484613048378378
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.515386951621622 1 0.484613048378378
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.515386951621622 1 0.484613048378378
172 0 2 0 0.515386951621622 1 0.484613048378378
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.515386951621622 1 0.484613048378378
182 0 1 0 1
183 0 1 0 1
184 0 2 0 0.515386951621622 1 0.484613048378378
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 2 0 0.515386951621622 1 0.484613048378378
192 0 2 0 0.515386951621622 1 0.484613048378378
193 0 1 0 1
194 0 2 0 0.515386951621622 1 0.484613048378378
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 2 0 0.515386951621622 1 0.484613048378378
202 0 1 0 1
203 0 2 0 0.515386951621622 1 0.484613048378378
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 2 0 0.515386951621622 1 0.484613048378378
212 0 2 0 0.515386951621622 1 0.484613048378378
213 0 2 0 0.515386951621622 1 0.484613048378378
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 0 2 0 0.515386951621622 1 0.484613048378378
222 0 1 0 1
223 0 2 0 0.515386951621622 1 0.484613048378378
224 0 2 0 0.515386951621622 1 0.484613048378378
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 2 0 0.515386951621622 1 0.484613048378378
232 0 2 0 0.515386951621622 1 0.484613048378378
233 0 2 0 0.515386951621622 1 0.484613048378378
234 0 2 0 0.515386951621622 1 0.484613048378378
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
10
## name
robot-at(x54, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(30)) and($a(2) $s(30)) and($a(0) $s(30)) and($a(3) $s(30))) : $c(0)) (or(and($a(1) $s(10)) and($a(2) $s(31)) and($a(0) $s(28)) and($a(3) $s(34))) : Bernoulli($c(0.340390310726232))) ($c(1) : $s(30)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(30)) and($a(2) $s(30)) and($a(0) $s(30)) and($a(3) $s(30))) : $c(0)) (or(and($a(1) $s(10)) and($a(2) $s(31)) and($a(0) $s(28)) and($a(3) $s(34))) : $c(0)) ($c(1) : $s(30)) )
## hash index
30
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 2 0 0.659609689273768 1 0.340390310726232
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 2 0 0.659609689273768 1 0.340390310726232
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 2 0 0.659609689273768 1 0.340390310726232
34 0 2 0 0.659609689273768 1 0.340390310726232
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 2 0 0.659609689273768 1 0.340390310726232
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 2 0 0.659609689273768 1 0.340390310726232
93 0 2 0 0.659609689273768 1 0.340390310726232
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 2 0 0.659609689273768 1 0.340390310726232
103 0 1 0 1
104 0 2 0 0.659609689273768 1 0.340390310726232
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 2 0 0.659609689273768 1 0.340390310726232
113 0 2 0 0.659609689273768 1 0.340390310726232
114 0 2 0 0.659609689273768 1 0.340390310726232
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.659609689273768 1 0.340390310726232
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.659609689273768 1 0.340390310726232
172 0 1 0 1
173 0 2 0 0.659609689273768 1 0.340390310726232
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.659609689273768 1 0.340390310726232
182 0 1 0 1
183 0 1 0 1
184 0 2 0 0.659609689273768 1 0.340390310726232
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 2 0 0.659609689273768 1 0.340390310726232
192 0 1 0 1
193 0 2 0 0.659609689273768 1 0.340390310726232
194 0 2 0 0.659609689273768 1 0.340390310726232
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 0 2 0 0.659609689273768 1 0.340390310726232
242 0 2 0 0.659609689273768 1 0.340390310726232
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 0 2 0 0.659609689273768 1 0.340390310726232
252 0 2 0 0.659609689273768 1 0.340390310726232
253 0 2 0 0.659609689273768 1 0.340390310726232
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 2 0 0.659609689273768 1 0.340390310726232
262 0 2 0 0.659609689273768 1 0.340390310726232
263 0 1 0 1
264 0 2 0 0.659609689273768 1 0.340390310726232
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 2 0 0.659609689273768 1 0.340390310726232
272 0 2 0 0.659609689273768 1 0.340390310726232
273 0 2 0 0.659609689273768 1 0.340390310726232
274 0 2 0 0.659609689273768 1 0.340390310726232
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
11
## name
robot-at(x54, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(31)) and($a(2) $s(31)) and($a(0) $s(31)) and($a(3) $s(31))) : $c(0)) (or(and($a(1) $s(30)) and($a(2) $s(11)) and($a(0) $s(29)) and($a(3) $s(35))) : Bernoulli($c(0.357104894808597))) ($c(1) : $s(31)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(31)) and($a(2) $s(31)) and($a(0) $s(31)) and($a(3) $s(31))) : $c(0)) (or(and($a(1) $s(30)) and($a(2) $s(11)) and($a(0) $s(29)) and($a(3) $s(35))) : $c(0)) ($c(1) : $s(31)) )
## hash index
31
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 2 0 0.642895105191403 1 0.357104894808597
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 2 0 0.642895105191403 1 0.357104894808597
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 2 0 0.642895105191403 1 0.357104894808597
33 0 1 0 1
34 0 2 0 0.642895105191403 1 0.357104894808597
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 2 0 0.642895105191403 1 0.357104894808597
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 2 0 0.642895105191403 1 0.357104894808597
53 0 2 0 0.642895105191403 1 0.357104894808597
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 2 0 0.642895105191403 1 0.357104894808597
64 0 2 0 0.642895105191403 1 0.357104894808597
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 2 0 0.642895105191403 1 0.357104894808597
73 0 2 0 0.642895105191403 1 0.357104894808597
74 0 2 0 0.642895105191403 1 0.357104894808597
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.642895105191403 1 0.357104894808597
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.642895105191403 1 0.357104894808597
172 0 2 0 0.642895105191403 1 0.357104894808597
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.642895105191403 1 0.357104894808597
182 0 1 0 1
183 0 1 0 1
184 0 2 0 0.642895105191403 1 0.357104894808597
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 2 0 0.642895105191403 1 0.357104894808597
192 0 2 0 0.642895105191403 1 0.357104894808597
193 0 1 0 1
194 0 2 0 0.642895105191403 1 0.357104894808597
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 2 0 0.642895105191403 1 0.357104894808597
202 0 1 0 1
203 0 2 0 0.642895105191403 1 0.357104894808597
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 2 0 0.642895105191403 1 0.357104894808597
212 0 2 0 0.642895105191403 1 0.357104894808597
213 0 2 0 0.642895105191403 1 0.357104894808597
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 0 2 0 0.642895105191403 1 0.357104894808597
222 0 1 0 1
223 0 2 0 0.642895105191403 1 0.357104894808597
224 0 2 0 0.642895105191403 1 0.357104894808597
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 2 0 0.642895105191403 1 0.357104894808597
232 0 2 0 0.642895105191403 1 0.357104894808597
233 0 2 0 0.642895105191403 1 0.357104894808597
234 0 2 0 0.642895105191403 1 0.357104894808597
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
12
## name
robot-at(x6, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(32)) and($a(2) $s(32)) and($a(0) $s(32))) : $c(0)) (or(and($a(1) $s(12)) and($a(2) $s(33)) and($a(3) $s(38))) : Bernoulli($c(0.967276386916637))) ($c(1) : $s(32)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(32)) and($a(2) $s(32)) and($a(0) $s(32))) : $c(0)) (or(and($a(1) $s(12)) and($a(2) $s(33)) and($a(3) $s(38))) : $c(1)) ($c(1) : $s(32)) )
## hash index
32
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
160
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.0327236130833626 1 0.967276386916637
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 1 1 1 1
21 1 1 1 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 1 1 1 1
31 1 1 1 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 1 2 0 0.0327236130833626 1 0.967276386916637
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 1 2 0 0.0327236130833626 1 0.967276386916637
53 1 2 0 0.0327236130833626 1 0.967276386916637
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 1 1 1 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 1 1 1 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 1 2 0 0.0327236130833626 1 0.967276386916637
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 1 2 0 0.0327236130833626 1 0.967276386916637
92 0 1 0 1
93 1 2 0 0.0327236130833626 1 0.967276386916637
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 1 2 0 0.0327236130833626 1 0.967276386916637
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 1 2 0 0.0327236130833626 1 0.967276386916637
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 1 2 0 0.0327236130833626 1 0.967276386916637
122 1 2 0 0.0327236130833626 1 0.967276386916637
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 1 2 0 0.0327236130833626 1 0.967276386916637
132 1 2 0 0.0327236130833626 1 0.967276386916637
133 1 2 0 0.0327236130833626 1 0.967276386916637
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 1 2 0 0.0327236130833626 1 0.967276386916637
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 1 2 0 0.0327236130833626 1 0.967276386916637
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
13
## name
robot-at(x6, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(33)) and($a(2) $s(33)) and($a(0) $s(33))) : $c(0)) (or(and($a(1) $s(32)) and($a(2) $s(13)) and($a(3) $s(39))) : Bernoulli($c(0.967912256717682))) ($c(1) : $s(33)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(33)) and($a(2) $s(33)) and($a(0) $s(33))) : $c(0)) (or(and($a(1) $s(32)) and($a(2) $s(13)) and($a(3) $s(39))) : $c(1)) ($c(1) : $s(33)) )
## hash index
33
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
160
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 1 2 0 0.0320877432823181 1 0.967912256717682
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 1 2 0 0.0320877432823181 1 0.967912256717682
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 1 2 0 0.0320877432823181 1 0.967912256717682
33 1 2 0 0.0320877432823181 1 0.967912256717682
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 1 1 1 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 1 1 1 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 1 1 1 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 1 1 1 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 1 2 0 0.0320877432823181 1 0.967912256717682
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 1 2 0 0.0320877432823181 1 0.967912256717682
92 1 2 0 0.0320877432823181 1 0.967912256717682
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 1 2 0 0.0320877432823181 1 0.967912256717682
102 0 1 0 1
103 1 2 0 0.0320877432823181 1 0.967912256717682
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 1 2 0 0.0320877432823181 1 0.967912256717682
112 1 2 0 0.0320877432823181 1 0.967912256717682
113 1 2 0 0.0320877432823181 1 0.967912256717682
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 1 2 0 0.0320877432823181 1 0.967912256717682
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 1 2 0 0.0320877432823181 1 0.967912256717682
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 1 2 0 0.0320877432823181 1 0.967912256717682
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 1 2 0 0.0320877432823181 1 0.967912256717682
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
14
## name
robot-at(x69, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(34)) and($a(2) $s(34)) and($a(0) $s(34)) and($a(3) $s(34))) : $c(0)) (or(and($a(1) $s(14)) and($a(2) $s(35)) and($a(0) $s(30)) and($a(3) $s(36))) : Bernoulli($c(0.253441973899802))) ($c(1) : $s(34)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(34)) and($a(2) $s(34)) and($a(0) $s(34)) and($a(3) $s(34))) : $c(0)) (or(and($a(1) $s(14)) and($a(2) $s(35)) and($a(0) $s(30)) and($a(3) $s(36))) : $c(0)) ($c(1) : $s(34)) )
## hash index
34
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 2 0 0.746558026100198 1 0.253441973899802
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 2 0 0.746558026100198 1 0.253441973899802
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 2 0 0.746558026100198 1 0.253441973899802
34 0 2 0 0.746558026100198 1 0.253441973899802
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 2 0 0.746558026100198 1 0.253441973899802
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 2 0 0.746558026100198 1 0.253441973899802
93 0 2 0 0.746558026100198 1 0.253441973899802
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 2 0 0.746558026100198 1 0.253441973899802
103 0 1 0 1
104 0 2 0 0.746558026100198 1 0.253441973899802
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 2 0 0.746558026100198 1 0.253441973899802
113 0 2 0 0.746558026100198 1 0.253441973899802
114 0 2 0 0.746558026100198 1 0.253441973899802
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.746558026100198 1 0.253441973899802
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.746558026100198 1 0.253441973899802
172 0 1 0 1
173 0 2 0 0.746558026100198 1 0.253441973899802
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.746558026100198 1 0.253441973899802
182 0 1 0 1
183 0 1 0 1
184 0 2 0 0.746558026100198 1 0.253441973899802
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 2 0 0.746558026100198 1 0.253441973899802
192 0 1 0 1
193 0 2 0 0.746558026100198 1 0.253441973899802
194 0 2 0 0.746558026100198 1 0.253441973899802
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 0 2 0 0.746558026100198 1 0.253441973899802
242 0 2 0 0.746558026100198 1 0.253441973899802
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 0 2 0 0.746558026100198 1 0.253441973899802
252 0 2 0 0.746558026100198 1 0.253441973899802
253 0 2 0 0.746558026100198 1 0.253441973899802
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 2 0 0.746558026100198 1 0.253441973899802
262 0 2 0 0.746558026100198 1 0.253441973899802
263 0 1 0 1
264 0 2 0 0.746558026100198 1 0.253441973899802
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 2 0 0.746558026100198 1 0.253441973899802
272 0 2 0 0.746558026100198 1 0.253441973899802
273 0 2 0 0.746558026100198 1 0.253441973899802
274 0 2 0 0.746558026100198 1 0.253441973899802
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
15
## name
robot-at(x69, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(35)) and($a(2) $s(35)) and($a(0) $s(35)) and($a(3) $s(35))) : $c(0)) (or(and($a(1) $s(34)) and($a(2) $s(15)) and($a(0) $s(31)) and($a(3) $s(37))) : Bernoulli($c(0.286233918353294))) ($c(1) : $s(35)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(35)) and($a(2) $s(35)) and($a(0) $s(35)) and($a(3) $s(35))) : $c(0)) (or(and($a(1) $s(34)) and($a(2) $s(15)) and($a(0) $s(31)) and($a(3) $s(37))) : $c(0)) ($c(1) : $s(35)) )
## hash index
35
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 2 0 0.713766081646706 1 0.286233918353294
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 2 0 0.713766081646706 1 0.286233918353294
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 2 0 0.713766081646706 1 0.286233918353294
33 0 1 0 1
34 0 2 0 0.713766081646706 1 0.286233918353294
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 2 0 0.713766081646706 1 0.286233918353294
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 2 0 0.713766081646706 1 0.286233918353294
53 0 2 0 0.713766081646706 1 0.286233918353294
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 2 0 0.713766081646706 1 0.286233918353294
64 0 2 0 0.713766081646706 1 0.286233918353294
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 2 0 0.713766081646706 1 0.286233918353294
73 0 2 0 0.713766081646706 1 0.286233918353294
74 0 2 0 0.713766081646706 1 0.286233918353294
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.713766081646706 1 0.286233918353294
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.713766081646706 1 0.286233918353294
172 0 2 0 0.713766081646706 1 0.286233918353294
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.713766081646706 1 0.286233918353294
182 0 1 0 1
183 0 1 0 1
184 0 2 0 0.713766081646706 1 0.286233918353294
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 2 0 0.713766081646706 1 0.286233918353294
192 0 2 0 0.713766081646706 1 0.286233918353294
193 0 1 0 1
194 0 2 0 0.713766081646706 1 0.286233918353294
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 2 0 0.713766081646706 1 0.286233918353294
202 0 1 0 1
203 0 2 0 0.713766081646706 1 0.286233918353294
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 2 0 0.713766081646706 1 0.286233918353294
212 0 2 0 0.713766081646706 1 0.286233918353294
213 0 2 0 0.713766081646706 1 0.286233918353294
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 0 2 0 0.713766081646706 1 0.286233918353294
222 0 1 0 1
223 0 2 0 0.713766081646706 1 0.286233918353294
224 0 2 0 0.713766081646706 1 0.286233918353294
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 2 0 0.713766081646706 1 0.286233918353294
232 0 2 0 0.713766081646706 1 0.286233918353294
233 0 2 0 0.713766081646706 1 0.286233918353294
234 0 2 0 0.713766081646706 1 0.286233918353294
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
16
## name
robot-at(x86, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(36)) and($a(2) $s(36)) and($a(0) $s(36)) and($a(3) $s(36))) : $c(0)) (or(and($a(1) $s(16)) and($a(2) $s(37)) and($a(0) $s(34)) and($a(3) $s(20))) : Bernoulli($c(0.168407681915495))) ($c(1) : $s(36)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(36)) and($a(2) $s(36)) and($a(0) $s(36)) and($a(3) $s(36))) : $c(0)) (or(and($a(1) $s(16)) and($a(2) $s(37)) and($a(0) $s(34)) and($a(3) $s(20))) : $c(0)) ($c(1) : $s(36)) )
## hash index
36
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 2 0 0.831592318084505 1 0.168407681915495
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 2 0 0.831592318084505 1 0.168407681915495
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 2 0 0.831592318084505 1 0.168407681915495
32 0 1 0 1
33 0 2 0 0.831592318084505 1 0.168407681915495
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 2 0 0.831592318084505 1 0.168407681915495
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 2 0 0.831592318084505 1 0.168407681915495
54 0 2 0 0.831592318084505 1 0.168407681915495
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 2 0 0.831592318084505 1 0.168407681915495
62 0 1 0 1
63 0 1 0 1
64 0 2 0 0.831592318084505 1 0.168407681915495
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 2 0 0.831592318084505 1 0.168407681915495
72 0 1 0 1
73 0 2 0 0.831592318084505 1 0.168407681915495
74 0 2 0 0.831592318084505 1 0.168407681915495
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 0 2 0 0.831592318084505 1 0.168407681915495
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 1 0 1
172 0 2 0 0.831592318084505 1 0.168407681915495
173 0 2 0 0.831592318084505 1 0.168407681915495
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.831592318084505 1 0.168407681915495
182 0 2 0 0.831592318084505 1 0.168407681915495
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 2 0 0.831592318084505 1 0.168407681915495
192 0 2 0 0.831592318084505 1 0.168407681915495
193 0 2 0 0.831592318084505 1 0.168407681915495
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 1 0 1
202 0 2 0 0.831592318084505 1 0.168407681915495
203 0 1 0 1
204 0 2 0 0.831592318084505 1 0.168407681915495
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 1 0 1
212 0 2 0 0.831592318084505 1 0.168407681915495
213 0 2 0 0.831592318084505 1 0.168407681915495
214 0 2 0 0.831592318084505 1 0.168407681915495
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 0 2 0 0.831592318084505 1 0.168407681915495
222 0 2 0 0.831592318084505 1 0.168407681915495
223 0 1 0 1
224 0 2 0 0.831592318084505 1 0.168407681915495
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 2 0 0.831592318084505 1 0.168407681915495
232 0 2 0 0.831592318084505 1 0.168407681915495
233 0 2 0 0.831592318084505 1 0.168407681915495
234 0 2 0 0.831592318084505 1 0.168407681915495
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
17
## name
robot-at(x86, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(37)) and($a(2) $s(37)) and($a(0) $s(37)) and($a(3) $s(37))) : $c(0)) (or(and($a(1) $s(36)) and($a(2) $s(17)) and($a(0) $s(35)) and($a(3) $s(21))) : Bernoulli($c(0.142976129013631))) ($c(1) : $s(37)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(37)) and($a(2) $s(37)) and($a(0) $s(37)) and($a(3) $s(37))) : $c(0)) (or(and($a(1) $s(36)) and($a(2) $s(17)) and($a(0) $s(35)) and($a(3) $s(21))) : $c(0)) ($c(1) : $s(37)) )
## hash index
37
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 2 0 0.857023870986369 1 0.142976129013631
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 2 0 0.857023870986369 1 0.142976129013631
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 2 0 0.857023870986369 1 0.142976129013631
32 0 2 0 0.857023870986369 1 0.142976129013631
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 2 0 0.857023870986369 1 0.142976129013631
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 2 0 0.857023870986369 1 0.142976129013631
53 0 1 0 1
54 0 2 0 0.857023870986369 1 0.142976129013631
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 2 0 0.857023870986369 1 0.142976129013631
62 0 1 0 1
63 0 1 0 1
64 0 2 0 0.857023870986369 1 0.142976129013631
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 2 0 0.857023870986369 1 0.142976129013631
72 0 2 0 0.857023870986369 1 0.142976129013631
73 0 1 0 1
74 0 2 0 0.857023870986369 1 0.142976129013631
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 1 0 1
83 0 2 0 0.857023870986369 1 0.142976129013631
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 2 0 0.857023870986369 1 0.142976129013631
93 0 2 0 0.857023870986369 1 0.142976129013631
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 2 0 0.857023870986369 1 0.142976129013631
102 0 1 0 1
103 0 2 0 0.857023870986369 1 0.142976129013631
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 2 0 0.857023870986369 1 0.142976129013631
112 0 2 0 0.857023870986369 1 0.142976129013631
113 0 2 0 0.857023870986369 1 0.142976129013631
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 0 1 0 1
122 0 1 0 1
123 0 2 0 0.857023870986369 1 0.142976129013631
124 0 2 0 0.857023870986369 1 0.142976129013631
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 0 1 0 1
132 0 2 0 0.857023870986369 1 0.142976129013631
133 0 2 0 0.857023870986369 1 0.142976129013631
134 0 2 0 0.857023870986369 1 0.142976129013631
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 0 2 0 0.857023870986369 1 0.142976129013631
142 0 1 0 1
143 0 2 0 0.857023870986369 1 0.142976129013631
144 0 2 0 0.857023870986369 1 0.142976129013631
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 2 0 0.857023870986369 1 0.142976129013631
152 0 2 0 0.857023870986369 1 0.142976129013631
153 0 2 0 0.857023870986369 1 0.142976129013631
154 0 2 0 0.857023870986369 1 0.142976129013631
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 1 1 1 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 1 1 1 1
171 0 1 0 1
172 0 1 0 1
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 1 1 1 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 1 1 1 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
18
## name
robot-at(x9, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(38)) and($a(2) $s(38)) and($a(0) $s(38)) and($a(3) $s(38))) : $c(0)) (or(and($a(1) $s(18)) and($a(2) $s(39)) and($a(0) $s(32)) and($a(3) $s(22))) : Bernoulli($c(0.876784443337884))) ($c(1) : $s(38)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(38)) and($a(2) $s(38)) and($a(0) $s(38)) and($a(3) $s(38))) : $c(0)) (or(and($a(1) $s(18)) and($a(2) $s(39)) and($a(0) $s(32)) and($a(3) $s(22))) : $c(1)) ($c(1) : $s(38)) )
## hash index
38
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.123215556662116 1 0.876784443337884
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 1 2 0 0.123215556662116 1 0.876784443337884
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 1 2 0 0.123215556662116 1 0.876784443337884
32 0 1 0 1
33 1 2 0 0.123215556662116 1 0.876784443337884
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 1 2 0 0.123215556662116 1 0.876784443337884
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 1 2 0 0.123215556662116 1 0.876784443337884
54 1 2 0 0.123215556662116 1 0.876784443337884
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 1 2 0 0.123215556662116 1 0.876784443337884
62 0 1 0 1
63 0 1 0 1
64 1 2 0 0.123215556662116 1 0.876784443337884
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 1 2 0 0.123215556662116 1 0.876784443337884
72 0 1 0 1
73 1 2 0 0.123215556662116 1 0.876784443337884
74 1 2 0 0.123215556662116 1 0.876784443337884
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 1 2 0 0.123215556662116 1 0.876784443337884
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 1 0 1
172 1 2 0 0.123215556662116 1 0.876784443337884
173 1 2 0 0.123215556662116 1 0.876784443337884
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 1 2 0 0.123215556662116 1 0.876784443337884
182 1 2 0 0.123215556662116 1 0.876784443337884
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 1 2 0 0.123215556662116 1 0.876784443337884
192 1 2 0 0.123215556662116 1 0.876784443337884
193 1 2 0 0.123215556662116 1 0.876784443337884
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 1 0 1
202 1 2 0 0.123215556662116 1 0.876784443337884
203 0 1 0 1
204 1 2 0 0.123215556662116 1 0.876784443337884
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 1 0 1
212 1 2 0 0.123215556662116 1 0.876784443337884
213 1 2 0 0.123215556662116 1 0.876784443337884
214 1 2 0 0.123215556662116 1 0.876784443337884
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 1 2 0 0.123215556662116 1 0.876784443337884
222 1 2 0 0.123215556662116 1 0.876784443337884
223 0 1 0 1
224 1 2 0 0.123215556662116 1 0.876784443337884
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 1 2 0 0.123215556662116 1 0.876784443337884
232 1 2 0 0.123215556662116 1 0.876784443337884
233 1 2 0 0.123215556662116 1 0.876784443337884
234 1 2 0 0.123215556662116 1 0.876784443337884
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
19
## name
robot-at(x9, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(39)) and($a(2) $s(39)) and($a(0) $s(39)) and($a(3) $s(39))) : $c(0)) (or(and($a(1) $s(38)) and($a(2) $s(19)) and($a(0) $s(33)) and($a(3) $s(23))) : Bernoulli($c(0.845154488873151))) ($c(1) : $s(39)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(39)) and($a(2) $s(39)) and($a(0) $s(39)) and($a(3) $s(39))) : $c(0)) (or(and($a(1) $s(38)) and($a(2) $s(19)) and($a(0) $s(33)) and($a(3) $s(23))) : $c(1)) ($c(1) : $s(39)) )
## hash index
39
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 1 2 0 0.154845511126849 1 0.845154488873151
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 1 2 0 0.154845511126849 1 0.845154488873151
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 1 2 0 0.154845511126849 1 0.845154488873151
32 1 2 0 0.154845511126849 1 0.845154488873151
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 1 2 0 0.154845511126849 1 0.845154488873151
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 1 2 0 0.154845511126849 1 0.845154488873151
53 0 1 0 1
54 1 2 0 0.154845511126849 1 0.845154488873151
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 1 2 0 0.154845511126849 1 0.845154488873151
62 0 1 0 1
63 0 1 0 1
64 1 2 0 0.154845511126849 1 0.845154488873151
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 1 2 0 0.154845511126849 1 0.845154488873151
72 1 2 0 0.154845511126849 1 0.845154488873151
73 0 1 0 1
74 1 2 0 0.154845511126849 1 0.845154488873151
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 1 0 1
83 1 2 0 0.154845511126849 1 0.845154488873151
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 1 2 0 0.154845511126849 1 0.845154488873151
93 1 2 0 0.154845511126849 1 0.845154488873151
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 1 2 0 0.154845511126849 1 0.845154488873151
102 0 1 0 1
103 1 2 0 0.154845511126849 1 0.845154488873151
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 1 2 0 0.154845511126849 1 0.845154488873151
112 1 2 0 0.154845511126849 1 0.845154488873151
113 1 2 0 0.154845511126849 1 0.845154488873151
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 0 1 0 1
122 0 1 0 1
123 1 2 0 0.154845511126849 1 0.845154488873151
124 1 2 0 0.154845511126849 1 0.845154488873151
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 0 1 0 1
132 1 2 0 0.154845511126849 1 0.845154488873151
133 1 2 0 0.154845511126849 1 0.845154488873151
134 1 2 0 0.154845511126849 1 0.845154488873151
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 1 2 0 0.154845511126849 1 0.845154488873151
142 0 1 0 1
143 1 2 0 0.154845511126849 1 0.845154488873151
144 1 2 0 0.154845511126849 1 0.845154488873151
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 1 2 0 0.154845511126849 1 0.845154488873151
152 1 2 0 0.154845511126849 1 0.845154488873151
153 1 2 0 0.154845511126849 1 0.845154488873151
154 1 2 0 0.154845511126849 1 0.845154488873151
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 1 1 1 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 1 1 1 1
171 0 1 0 1
172 0 1 0 1
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 1 1 1 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 1 1 1 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####REWARD#####
## formula
-($c(0) ~($s(1)))
## min
-1
## max
0
## independent from actions
1
## hash index
40
## caching type
VECTOR
## precomputed results
2
0 -1
1 0
## kleene caching type
VECTOR
## kleene caching vec size
3
## action hash keys
0 0
1 0
2 0
3 0
4 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 1 0 0 
## relevant preconditions
0


## index
4
## state
1 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## state fluent hash keys (first line is the number of keys)
3
0 5
16 5
20 5
## kleene state fluent hash keys (first line is the number of keys)
3
0 5
16 5
20 5

## index
1
## state hash key (for each value in the domain)
0 2
## state fluent hash keys (first line is the number of keys)
41
0 10
1 5
2 5
3 5
4 5
5 5
6 5
7 5
8 5
9 5
10 5
11 5
12 5
13 5
14 5
15 5
16 10
17 5
18 5
19 5
20 10
21 5
22 5
23 5
24 5
25 5
26 5
27 5
28 5
29 5
30 5
31 5
32 5
33 5
34 5
35 5
36 5
37 5
38 5
39 5
40 1
## kleene state fluent hash keys (first line is the number of keys)
41
0 15
1 5
2 5
3 5
4 5
5 5
6 5
7 5
8 5
9 5
10 5
11 5
12 5
13 5
14 5
15 5
16 15
17 5
18 5
19 5
20 15
21 5
22 5
23 5
24 5
25 5
26 5
27 5
28 5
29 5
30 5
31 5
32 5
33 5
34 5
35 5
36 5
37 5
38 5
39 5
40 1

## index
2
## state hash key (for each value in the domain)
0 4
## state fluent hash keys (first line is the number of keys)
4
2 10
4 10
18 10
22 10
## kleene state fluent hash keys (first line is the number of keys)
4
2 15
4 15
18 15
22 15

## index
3
## state hash key (for each value in the domain)
0 8
## state fluent hash keys (first line is the number of keys)
4
3 10
5 10
19 10
23 10
## kleene state fluent hash keys (first line is the number of keys)
4
3 15
5 15
19 15
23 15

## index
4
## state hash key (for each value in the domain)
0 16
## state fluent hash keys (first line is the number of keys)
4
2 20
4 20
6 10
24 10
## kleene state fluent hash keys (first line is the number of keys)
4
2 45
4 45
6 15
24 15

## index
5
## state hash key (for each value in the domain)
0 32
## state fluent hash keys (first line is the number of keys)
4
3 20
5 20
7 10
25 10
## kleene state fluent hash keys (first line is the number of keys)
4
3 45
5 45
7 15
25 15

## index
6
## state hash key (for each value in the domain)
0 64
## state fluent hash keys (first line is the number of keys)
4
4 40
6 20
8 10
26 10
## kleene state fluent hash keys (first line is the number of keys)
4
4 135
6 45
8 15
26 15

## index
7
## state hash key (for each value in the domain)
0 128
## state fluent hash keys (first line is the number of keys)
4
5 40
7 20
9 10
27 10
## kleene state fluent hash keys (first line is the number of keys)
4
5 135
7 45
9 15
27 15

## index
8
## state hash key (for each value in the domain)
0 256
## state fluent hash keys (first line is the number of keys)
4
6 40
8 20
10 10
28 10
## kleene state fluent hash keys (first line is the number of keys)
4
6 135
8 45
10 15
28 15

## index
9
## state hash key (for each value in the domain)
0 512
## state fluent hash keys (first line is the number of keys)
4
7 40
9 20
11 10
29 10
## kleene state fluent hash keys (first line is the number of keys)
4
7 135
9 45
11 15
29 15

## index
10
## state hash key (for each value in the domain)
0 1024
## state fluent hash keys (first line is the number of keys)
4
8 40
10 20
14 10
30 10
## kleene state fluent hash keys (first line is the number of keys)
4
8 135
10 45
14 15
30 15

## index
11
## state hash key (for each value in the domain)
0 2048
## state fluent hash keys (first line is the number of keys)
4
9 40
11 20
15 10
31 10
## kleene state fluent hash keys (first line is the number of keys)
4
9 135
11 45
15 15
31 15

## index
12
## state hash key (for each value in the domain)
0 4096
## state fluent hash keys (first line is the number of keys)
3
12 10
18 20
32 10
## kleene state fluent hash keys (first line is the number of keys)
3
12 15
18 45
32 15

## index
13
## state hash key (for each value in the domain)
0 8192
## state fluent hash keys (first line is the number of keys)
3
13 10
19 20
33 10
## kleene state fluent hash keys (first line is the number of keys)
3
13 15
19 45
33 15

## index
14
## state hash key (for each value in the domain)
0 16384
## state fluent hash keys (first line is the number of keys)
4
10 40
14 20
16 20
34 10
## kleene state fluent hash keys (first line is the number of keys)
4
10 135
14 45
16 45
34 15

## index
15
## state hash key (for each value in the domain)
0 32768
## state fluent hash keys (first line is the number of keys)
4
11 40
15 20
17 10
35 10
## kleene state fluent hash keys (first line is the number of keys)
4
11 135
15 45
17 15
35 15

## index
16
## state hash key (for each value in the domain)
0 65536
## state fluent hash keys (first line is the number of keys)
4
0 20
14 40
16 40
36 10
## kleene state fluent hash keys (first line is the number of keys)
4
0 45
14 135
16 135
36 15

## index
17
## state hash key (for each value in the domain)
0 131072
## state fluent hash keys (first line is the number of keys)
4
1 10
15 40
17 20
37 10
## kleene state fluent hash keys (first line is the number of keys)
4
1 15
15 135
17 45
37 15

## index
18
## state hash key (for each value in the domain)
0 262144
## state fluent hash keys (first line is the number of keys)
4
2 40
12 20
18 40
38 10
## kleene state fluent hash keys (first line is the number of keys)
4
2 135
12 45
18 135
38 15

## index
19
## state hash key (for each value in the domain)
0 524288
## state fluent hash keys (first line is the number of keys)
4
3 40
13 20
19 40
39 10
## kleene state fluent hash keys (first line is the number of keys)
4
3 135
13 45
19 135
39 15


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1048576
## state fluent hash keys (first line is the number of keys)
4
0 40
20 20
21 10
36 20
## kleene state fluent hash keys (first line is the number of keys)
4
0 135
20 45
21 15
36 45

## index
1
## state hash key (for each value in the domain)
0 2097152
## state fluent hash keys (first line is the number of keys)
4
1 20
20 40
21 20
37 20
## kleene state fluent hash keys (first line is the number of keys)
4
1 45
20 135
21 45
37 45

## index
2
## state hash key (for each value in the domain)
0 4194304
## state fluent hash keys (first line is the number of keys)
5
2 80
22 20
23 20
24 20
38 20
## kleene state fluent hash keys (first line is the number of keys)
5
2 405
22 45
23 45
24 45
38 45

## index
3
## state hash key (for each value in the domain)
0 8388608
## state fluent hash keys (first line is the number of keys)
5
3 80
22 40
23 40
25 20
39 20
## kleene state fluent hash keys (first line is the number of keys)
5
3 405
22 135
23 135
25 45
39 45

## index
4
## state hash key (for each value in the domain)
0 16777216
## state fluent hash keys (first line is the number of keys)
5
4 80
22 80
24 40
25 40
26 20
## kleene state fluent hash keys (first line is the number of keys)
5
4 405
22 405
24 135
25 135
26 45

## index
5
## state hash key (for each value in the domain)
0 33554432
## state fluent hash keys (first line is the number of keys)
5
5 80
23 80
24 80
25 80
27 20
## kleene state fluent hash keys (first line is the number of keys)
5
5 405
23 405
24 405
25 405
27 45

## index
6
## state hash key (for each value in the domain)
0 67108864
## state fluent hash keys (first line is the number of keys)
5
6 80
24 160
26 40
27 40
28 20
## kleene state fluent hash keys (first line is the number of keys)
5
6 405
24 1215
26 135
27 135
28 45

## index
7
## state hash key (for each value in the domain)
0 134217728
## state fluent hash keys (first line is the number of keys)
5
7 80
25 160
26 80
27 80
29 20
## kleene state fluent hash keys (first line is the number of keys)
5
7 405
25 1215
26 405
27 405
29 45

## index
8
## state hash key (for each value in the domain)
0 268435456
## state fluent hash keys (first line is the number of keys)
5
8 80
26 160
28 40
29 40
30 20
## kleene state fluent hash keys (first line is the number of keys)
5
8 405
26 1215
28 135
29 135
30 45

## index
9
## state hash key (for each value in the domain)
0 536870912
## state fluent hash keys (first line is the number of keys)
5
9 80
27 160
28 80
29 80
31 20
## kleene state fluent hash keys (first line is the number of keys)
5
9 405
27 1215
28 405
29 405
31 45

## index
10
## state hash key (for each value in the domain)
0 1073741824
## state fluent hash keys (first line is the number of keys)
5
10 80
28 160
30 40
31 40
34 20
## kleene state fluent hash keys (first line is the number of keys)
5
10 405
28 1215
30 135
31 135
34 45

## index
11
## state hash key (for each value in the domain)
0 2147483648
## state fluent hash keys (first line is the number of keys)
5
11 80
29 160
30 80
31 80
35 20
## kleene state fluent hash keys (first line is the number of keys)
5
11 405
29 1215
30 405
31 405
35 45

## index
12
## state hash key (for each value in the domain)
0 4294967296
## state fluent hash keys (first line is the number of keys)
4
12 40
32 20
33 20
38 40
## kleene state fluent hash keys (first line is the number of keys)
4
12 135
32 45
33 45
38 135

## index
13
## state hash key (for each value in the domain)
0 8589934592
## state fluent hash keys (first line is the number of keys)
4
13 40
32 40
33 40
39 40
## kleene state fluent hash keys (first line is the number of keys)
4
13 135
32 135
33 135
39 135

## index
14
## state hash key (for each value in the domain)
0 17179869184
## state fluent hash keys (first line is the number of keys)
5
14 80
30 160
34 40
35 40
36 40
## kleene state fluent hash keys (first line is the number of keys)
5
14 405
30 1215
34 135
35 135
36 135

## index
15
## state hash key (for each value in the domain)
0 34359738368
## state fluent hash keys (first line is the number of keys)
5
15 80
31 160
34 80
35 80
37 40
## kleene state fluent hash keys (first line is the number of keys)
5
15 405
31 1215
34 405
35 405
37 135

## index
16
## state hash key (for each value in the domain)
0 68719476736
## state fluent hash keys (first line is the number of keys)
5
16 80
20 80
34 160
36 80
37 80
## kleene state fluent hash keys (first line is the number of keys)
5
16 405
20 405
34 1215
36 405
37 405

## index
17
## state hash key (for each value in the domain)
0 137438953472
## state fluent hash keys (first line is the number of keys)
5
17 40
21 40
35 160
36 160
37 160
## kleene state fluent hash keys (first line is the number of keys)
5
17 135
21 135
35 1215
36 1215
37 1215

## index
18
## state hash key (for each value in the domain)
0 274877906944
## state fluent hash keys (first line is the number of keys)
5
18 80
22 160
32 80
38 80
39 80
## kleene state fluent hash keys (first line is the number of keys)
5
18 405
22 1215
32 405
38 405
39 405

## index
19
## state hash key (for each value in the domain)
0 549755813888
## state fluent hash keys (first line is the number of keys)
5
19 80
23 160
33 80
38 160
39 160
## kleene state fluent hash keys (first line is the number of keys)
5
19 405
23 1215
33 405
38 1215
39 1215



#####TRAINING SET#####
14
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
