#####TASK#####
## name
navigation_inst_mdp__8
## horizon
40
## discount factor
1
## number of action fluents
4
## number of det state fluents
40
## number of prob state fluents
20
## number of preconds
0
## number of actions
5
## number of hashing functions
61
## initial state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
0
## method to calculate the final reward
NOOP
## 1 if reward formula allows reward lock detection and a reward lock was found during task analysis
1
## 1 if an unreasonable action was detected
1
## 1 if an unreasonable action was detected in the determinization
1
## number of states that were encountered during task analysis
3282
## number of unique states that were encountered during task analysis
8
## number of states with only one applicable reasonable action that were encountered during task analysis
3037
## number of unique states with only one applicable reasonable action that were encountered during task analysis
1


#####ACTION FLUENTS#####
## index
0
## name
move-east
## number of values
2
## values
0 false
1 true

## index
1
## name
move-north
## number of values
2
## values
0 false
1 true

## index
2
## name
move-south
## number of values
2
## values
0 false
1 true

## index
3
## name
move-west
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
robot-at(x105, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(0)) and($a(0) $s(0)) and($a(3) $s(0))) : $c(0)) (or(and($a(2) $s(40)) and($a(0) $s(36)) and($a(3) $s(2))) : $c(1)) ($c(1) : $s(0)) )
## hash index
0
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 1
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 1
16 0
17 1
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 1
45 1
46 0
47 1
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 1
56 0
57 1
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 1
86 0
87 1
88 0
89 0
90 0
91 1
92 1
93 0
94 0
95 1
96 0
97 1
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 1
123 0
124 1
125 1
126 0
127 1
128 0
129 0
130 0
131 1
132 1
133 0
134 1
135 1
136 0
137 1
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
1
## name
robot-at(x105, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(1)) and($a(0) $s(1)) and($a(3) $s(1))) : $c(0)) (or(and($a(1) $s(40)) and($a(0) $s(37)) and($a(3) $s(3))) : $c(1)) ($c(1) : $s(1)) )
## hash index
1
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 1
9 0
10 0
11 1
12 0
13 0
14 0
15 1
16 0
17 0
18 1
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 1
45 1
46 0
47 0
48 1
49 0
50 0
51 1
52 0
53 0
54 1
55 1
56 0
57 0
58 1
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 1
86 0
87 0
88 1
89 0
90 0
91 1
92 0
93 1
94 0
95 1
96 0
97 0
98 1
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 1
124 1
125 1
126 0
127 0
128 1
129 0
130 0
131 1
132 0
133 1
134 1
135 1
136 0
137 0
138 1
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
2
## name
robot-at(x126, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(2)) and($a(0) $s(2)) and($a(3) $s(2))) : $c(0)) (or(and($a(2) $s(41)) and($a(0) $s(0)) and($a(3) $s(6))) : $c(1)) ($c(1) : $s(2)) )
## hash index
2
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 1
13 0
14 0
15 1
16 0
17 1
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 1
30 1
31 0
32 1
33 0
34 0
35 1
36 0
37 1
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 1
88 0
89 1
90 1
91 0
92 1
93 0
94 0
95 1
96 0
97 1
98 0
99 0
100 0
101 1
102 1
103 0
104 0
105 0
106 1
107 1
108 0
109 1
110 1
111 0
112 1
113 0
114 0
115 1
116 0
117 1
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
3
## name
robot-at(x126, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(3)) and($a(0) $s(3)) and($a(3) $s(3))) : $c(0)) (or(and($a(1) $s(41)) and($a(0) $s(1)) and($a(3) $s(7))) : $c(1)) ($c(1) : $s(3)) )
## hash index
3
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 0
13 1
14 0
15 1
16 0
17 0
18 1
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 1
30 1
31 0
32 0
33 1
34 0
35 1
36 0
37 0
38 1
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 1
89 1
90 1
91 0
92 0
93 1
94 0
95 1
96 0
97 0
98 1
99 0
100 0
101 1
102 0
103 1
104 0
105 0
106 1
107 0
108 1
109 1
110 1
111 0
112 0
113 1
114 0
115 1
116 0
117 0
118 1
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
4
## name
robot-at(x14, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(4)) and($a(0) $s(4)) and($a(3) $s(4))) : $c(0)) (or(and($a(2) $s(42)) and($a(0) $s(38)) and($a(3) $s(12))) : $c(1)) ($c(1) : $s(4)) )
## hash index
4
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 1
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 1
16 0
17 1
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 1
45 1
46 0
47 1
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 1
56 0
57 1
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 1
86 0
87 1
88 0
89 0
90 0
91 1
92 1
93 0
94 0
95 1
96 0
97 1
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 1
123 0
124 1
125 1
126 0
127 1
128 0
129 0
130 0
131 1
132 1
133 0
134 1
135 1
136 0
137 1
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
5
## name
robot-at(x14, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(5)) and($a(0) $s(5)) and($a(3) $s(5))) : $c(0)) (or(and($a(1) $s(42)) and($a(0) $s(39)) and($a(3) $s(13))) : $c(1)) ($c(1) : $s(5)) )
## hash index
5
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 1
9 0
10 0
11 1
12 0
13 0
14 0
15 1
16 0
17 0
18 1
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 1
45 1
46 0
47 0
48 1
49 0
50 0
51 1
52 0
53 0
54 1
55 1
56 0
57 0
58 1
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 1
86 0
87 0
88 1
89 0
90 0
91 1
92 0
93 1
94 0
95 1
96 0
97 0
98 1
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 1
124 1
125 1
126 0
127 0
128 1
129 0
130 0
131 1
132 0
133 1
134 1
135 1
136 0
137 0
138 1
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
6
## name
robot-at(x149, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(6)) and($a(0) $s(6)) and($a(3) $s(6))) : $c(0)) (or(and($a(2) $s(43)) and($a(0) $s(2)) and($a(3) $s(8))) : $c(1)) ($c(1) : $s(6)) )
## hash index
6
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 1
13 0
14 0
15 1
16 0
17 1
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 1
30 1
31 0
32 1
33 0
34 0
35 1
36 0
37 1
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 1
88 0
89 1
90 1
91 0
92 1
93 0
94 0
95 1
96 0
97 1
98 0
99 0
100 0
101 1
102 1
103 0
104 0
105 0
106 1
107 1
108 0
109 1
110 1
111 0
112 1
113 0
114 0
115 1
116 0
117 1
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
7
## name
robot-at(x149, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(7)) and($a(0) $s(7)) and($a(3) $s(7))) : $c(0)) (or(and($a(1) $s(43)) and($a(0) $s(3)) and($a(3) $s(9))) : $c(1)) ($c(1) : $s(7)) )
## hash index
7
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 0
13 1
14 0
15 1
16 0
17 0
18 1
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 1
30 1
31 0
32 0
33 1
34 0
35 1
36 0
37 0
38 1
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 1
89 1
90 1
91 0
92 0
93 1
94 0
95 1
96 0
97 0
98 1
99 0
100 0
101 1
102 0
103 1
104 0
105 0
106 1
107 0
108 1
109 1
110 1
111 0
112 0
113 1
114 0
115 1
116 0
117 0
118 1
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
8
## name
robot-at(x174, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(8)) and($a(0) $s(8)) and($a(3) $s(8))) : $c(0)) (or(and($a(2) $s(44)) and($a(0) $s(6)) and($a(3) $s(10))) : $c(1)) ($c(1) : $s(8)) )
## hash index
8
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 1
13 0
14 0
15 1
16 0
17 1
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 1
30 1
31 0
32 1
33 0
34 0
35 1
36 0
37 1
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 1
88 0
89 1
90 1
91 0
92 1
93 0
94 0
95 1
96 0
97 1
98 0
99 0
100 0
101 1
102 1
103 0
104 0
105 0
106 1
107 1
108 0
109 1
110 1
111 0
112 1
113 0
114 0
115 1
116 0
117 1
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
9
## name
robot-at(x174, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(9)) and($a(0) $s(9)) and($a(3) $s(9))) : $c(0)) (or(and($a(1) $s(44)) and($a(0) $s(7)) and($a(3) $s(11))) : $c(1)) ($c(1) : $s(9)) )
## hash index
9
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 0
13 1
14 0
15 1
16 0
17 0
18 1
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 1
30 1
31 0
32 0
33 1
34 0
35 1
36 0
37 0
38 1
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 1
89 1
90 1
91 0
92 0
93 1
94 0
95 1
96 0
97 0
98 1
99 0
100 0
101 1
102 0
103 1
104 0
105 0
106 1
107 0
108 1
109 1
110 1
111 0
112 0
113 1
114 0
115 1
116 0
117 0
118 1
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
10
## name
robot-at(x201, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(10)) and($a(0) $s(10)) and($a(3) $s(10))) : $c(0)) (or(and($a(2) $s(45)) and($a(0) $s(8)) and($a(3) $s(14))) : $c(1)) ($c(1) : $s(10)) )
## hash index
10
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 1
13 0
14 0
15 1
16 0
17 1
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 1
30 1
31 0
32 1
33 0
34 0
35 1
36 0
37 1
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 1
88 0
89 1
90 1
91 0
92 1
93 0
94 0
95 1
96 0
97 1
98 0
99 0
100 0
101 1
102 1
103 0
104 0
105 0
106 1
107 1
108 0
109 1
110 1
111 0
112 1
113 0
114 0
115 1
116 0
117 1
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
11
## name
robot-at(x201, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(11)) and($a(0) $s(11)) and($a(3) $s(11))) : $c(0)) (or(and($a(1) $s(45)) and($a(0) $s(9)) and($a(3) $s(15))) : $c(1)) ($c(1) : $s(11)) )
## hash index
11
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 0
13 1
14 0
15 1
16 0
17 0
18 1
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 1
30 1
31 0
32 0
33 1
34 0
35 1
36 0
37 0
38 1
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 1
89 1
90 1
91 0
92 0
93 1
94 0
95 1
96 0
97 0
98 1
99 0
100 0
101 1
102 0
103 1
104 0
105 0
106 1
107 0
108 1
109 1
110 1
111 0
112 0
113 1
114 0
115 1
116 0
117 0
118 1
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
12
## name
robot-at(x21, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(12)) and($a(0) $s(12)) and($a(3) $s(12))) : $c(0)) (or(and($a(2) $s(46)) and($a(0) $s(4)) and($a(3) $s(20))) : $c(1)) ($c(1) : $s(12)) )
## hash index
12
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 1
13 0
14 0
15 1
16 0
17 1
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 1
30 1
31 0
32 1
33 0
34 0
35 1
36 0
37 1
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 1
88 0
89 1
90 1
91 0
92 1
93 0
94 0
95 1
96 0
97 1
98 0
99 0
100 0
101 1
102 1
103 0
104 0
105 0
106 1
107 1
108 0
109 1
110 1
111 0
112 1
113 0
114 0
115 1
116 0
117 1
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
13
## name
robot-at(x21, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(13)) and($a(0) $s(13)) and($a(3) $s(13))) : $c(0)) (or(and($a(1) $s(46)) and($a(0) $s(5)) and($a(3) $s(21))) : $c(1)) ($c(1) : $s(13)) )
## hash index
13
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 0
13 1
14 0
15 1
16 0
17 0
18 1
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 1
30 1
31 0
32 0
33 1
34 0
35 1
36 0
37 0
38 1
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 1
89 1
90 1
91 0
92 0
93 1
94 0
95 1
96 0
97 0
98 1
99 0
100 0
101 1
102 0
103 1
104 0
105 0
106 1
107 0
108 1
109 1
110 1
111 0
112 0
113 1
114 0
115 1
116 0
117 0
118 1
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
14
## name
robot-at(x230, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(14)) and($a(0) $s(14)) and($a(3) $s(14))) : $c(0)) (or(and($a(2) $s(47)) and($a(0) $s(10)) and($a(3) $s(16))) : $c(1)) ($c(1) : $s(14)) )
## hash index
14
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 1
13 0
14 0
15 1
16 0
17 1
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 1
30 1
31 0
32 1
33 0
34 0
35 1
36 0
37 1
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 1
88 0
89 1
90 1
91 0
92 1
93 0
94 0
95 1
96 0
97 1
98 0
99 0
100 0
101 1
102 1
103 0
104 0
105 0
106 1
107 1
108 0
109 1
110 1
111 0
112 1
113 0
114 0
115 1
116 0
117 1
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
15
## name
robot-at(x230, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(15)) and($a(0) $s(15)) and($a(3) $s(15))) : $c(0)) (or(and($a(1) $s(47)) and($a(0) $s(11)) and($a(3) $s(17))) : $c(1)) ($c(1) : $s(15)) )
## hash index
15
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 0
13 1
14 0
15 1
16 0
17 0
18 1
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 1
30 1
31 0
32 0
33 1
34 0
35 1
36 0
37 0
38 1
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 1
89 1
90 1
91 0
92 0
93 1
94 0
95 1
96 0
97 0
98 1
99 0
100 0
101 1
102 0
103 1
104 0
105 0
106 1
107 0
108 1
109 1
110 1
111 0
112 0
113 1
114 0
115 1
116 0
117 0
118 1
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
16
## name
robot-at(x261, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(16)) and($a(0) $s(16)) and($a(3) $s(16))) : $c(0)) (or(and($a(2) $s(48)) and($a(0) $s(14)) and($a(3) $s(18))) : $c(1)) ($c(1) : $s(16)) )
## hash index
16
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 1
13 0
14 0
15 1
16 0
17 1
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 1
30 1
31 0
32 1
33 0
34 0
35 1
36 0
37 1
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 1
88 0
89 1
90 1
91 0
92 1
93 0
94 0
95 1
96 0
97 1
98 0
99 0
100 0
101 1
102 1
103 0
104 0
105 0
106 1
107 1
108 0
109 1
110 1
111 0
112 1
113 0
114 0
115 1
116 0
117 1
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
17
## name
robot-at(x261, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(17)) and($a(0) $s(17)) and($a(3) $s(17))) : $c(0)) (or(and($a(1) $s(48)) and($a(0) $s(15)) and($a(3) $s(19))) : $c(1)) ($c(1) : $s(17)) )
## hash index
17
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 0
13 1
14 0
15 1
16 0
17 0
18 1
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 1
30 1
31 0
32 0
33 1
34 0
35 1
36 0
37 0
38 1
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 1
89 1
90 1
91 0
92 0
93 1
94 0
95 1
96 0
97 0
98 1
99 0
100 0
101 1
102 0
103 1
104 0
105 0
106 1
107 0
108 1
109 1
110 1
111 0
112 0
113 1
114 0
115 1
116 0
117 0
118 1
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
18
## name
robot-at(x294, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(18)) and($a(0) $s(18)) and($a(3) $s(18))) : $c(0)) (or(and($a(2) $s(49)) and($a(0) $s(16)) and($a(3) $s(22))) : $c(1)) ($c(1) : $s(18)) )
## hash index
18
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 1
13 0
14 0
15 1
16 0
17 1
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 1
30 1
31 0
32 1
33 0
34 0
35 1
36 0
37 1
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 1
88 0
89 1
90 1
91 0
92 1
93 0
94 0
95 1
96 0
97 1
98 0
99 0
100 0
101 1
102 1
103 0
104 0
105 0
106 1
107 1
108 0
109 1
110 1
111 0
112 1
113 0
114 0
115 1
116 0
117 1
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
19
## name
robot-at(x294, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(19)) and($a(0) $s(19)) and($a(3) $s(19))) : $c(0)) (or(and($a(1) $s(49)) and($a(0) $s(17)) and($a(3) $s(23))) : $c(1)) ($c(1) : $s(19)) )
## hash index
19
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 0
13 1
14 0
15 1
16 0
17 0
18 1
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 1
30 1
31 0
32 0
33 1
34 0
35 1
36 0
37 0
38 1
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 1
89 1
90 1
91 0
92 0
93 1
94 0
95 1
96 0
97 0
98 1
99 0
100 0
101 1
102 0
103 1
104 0
105 0
106 1
107 0
108 1
109 1
110 1
111 0
112 0
113 1
114 0
115 1
116 0
117 0
118 1
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
20
## name
robot-at(x30, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(20)) and($a(0) $s(20)) and($a(3) $s(20))) : $c(0)) (or(and($a(2) $s(50)) and($a(0) $s(12)) and($a(3) $s(28))) : $c(1)) ($c(1) : $s(20)) )
## hash index
20
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 1
13 0
14 0
15 1
16 0
17 1
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 1
47 0
48 0
49 1
50 1
51 0
52 1
53 0
54 0
55 1
56 0
57 1
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 1
88 0
89 1
90 1
91 0
92 1
93 0
94 0
95 1
96 0
97 1
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 1
123 0
124 0
125 0
126 1
127 1
128 0
129 1
130 1
131 0
132 1
133 0
134 0
135 1
136 0
137 1
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
21
## name
robot-at(x30, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(21)) and($a(0) $s(21)) and($a(3) $s(21))) : $c(0)) (or(and($a(1) $s(50)) and($a(0) $s(13)) and($a(3) $s(29))) : $c(1)) ($c(1) : $s(21)) )
## hash index
21
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 0
13 1
14 0
15 1
16 0
17 0
18 1
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 1
47 0
48 0
49 1
50 1
51 0
52 0
53 1
54 0
55 1
56 0
57 0
58 1
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 1
89 1
90 1
91 0
92 0
93 1
94 0
95 1
96 0
97 0
98 1
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 0
123 1
124 0
125 0
126 1
127 0
128 1
129 1
130 1
131 0
132 0
133 1
134 0
135 1
136 0
137 0
138 1
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
22
## name
robot-at(x329, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(22)) and($a(0) $s(22)) and($a(3) $s(22))) : $c(0)) (or(and($a(2) $s(51)) and($a(0) $s(18)) and($a(3) $s(24))) : $c(1)) ($c(1) : $s(22)) )
## hash index
22
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 1
13 0
14 0
15 1
16 0
17 1
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 1
30 1
31 0
32 1
33 0
34 0
35 1
36 0
37 1
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 1
88 0
89 1
90 1
91 0
92 1
93 0
94 0
95 1
96 0
97 1
98 0
99 0
100 0
101 1
102 1
103 0
104 0
105 0
106 1
107 1
108 0
109 1
110 1
111 0
112 1
113 0
114 0
115 1
116 0
117 1
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
23
## name
robot-at(x329, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(23)) and($a(0) $s(23)) and($a(3) $s(23))) : $c(0)) (or(and($a(1) $s(51)) and($a(0) $s(19)) and($a(3) $s(25))) : $c(1)) ($c(1) : $s(23)) )
## hash index
23
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 0
13 1
14 0
15 1
16 0
17 0
18 1
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 1
30 1
31 0
32 0
33 1
34 0
35 1
36 0
37 0
38 1
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 1
89 1
90 1
91 0
92 0
93 1
94 0
95 1
96 0
97 0
98 1
99 0
100 0
101 1
102 0
103 1
104 0
105 0
106 1
107 0
108 1
109 1
110 1
111 0
112 0
113 1
114 0
115 1
116 0
117 0
118 1
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
24
## name
robot-at(x366, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(24)) and($a(0) $s(24)) and($a(3) $s(24))) : $c(0)) (or(and($a(2) $s(52)) and($a(0) $s(22)) and($a(3) $s(26))) : $c(1)) ($c(1) : $s(24)) )
## hash index
24
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 1
13 0
14 0
15 1
16 0
17 1
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 1
30 1
31 0
32 1
33 0
34 0
35 1
36 0
37 1
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 1
88 0
89 1
90 1
91 0
92 1
93 0
94 0
95 1
96 0
97 1
98 0
99 0
100 0
101 1
102 1
103 0
104 0
105 0
106 1
107 1
108 0
109 1
110 1
111 0
112 1
113 0
114 0
115 1
116 0
117 1
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
25
## name
robot-at(x366, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(25)) and($a(0) $s(25)) and($a(3) $s(25))) : $c(0)) (or(and($a(1) $s(52)) and($a(0) $s(23)) and($a(3) $s(27))) : $c(1)) ($c(1) : $s(25)) )
## hash index
25
## caching type 
VECTOR
## precomputed results
80
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 0
13 1
14 0
15 1
16 0
17 0
18 1
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 1
44 0
45 0
46 0
47 0
48 1
49 1
50 1
51 0
52 0
53 1
54 0
55 1
56 0
57 0
58 1
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
26
## name
robot-at(x405, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(26)) and($a(3) $s(26))) : $c(0)) (or(and($a(2) $s(53)) and($a(0) $s(24))) : $c(1)) ($c(1) : $s(26)) )
## hash index
26
## caching type 
VECTOR
## precomputed results
80
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 0
12 1
13 0
14 1
15 1
16 0
17 1
18 0
19 1
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 1
43 0
44 0
45 0
46 0
47 1
48 0
49 1
50 1
51 0
52 1
53 0
54 1
55 1
56 0
57 1
58 0
59 1
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
27
## name
robot-at(x405, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(27) : $c(1)) (or($s(27) and($a(2) $s(27)) and($a(3) $s(27))) : $c(0)) (or(and($a(1) $s(53)) and($a(0) $s(25))) : $c(1)) ($c(1) : $s(27)) )
## hash index
27
## caching type 
VECTOR
## precomputed results
40
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 1
11 1
12 1
13 1
14 1
15 1
16 1
17 1
18 1
19 1
20 0
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 1
29 1
30 1
31 1
32 1
33 1
34 1
35 1
36 1
37 1
38 1
39 1
## kleene caching type
VECTOR
## kleene caching vec size
135
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
28
## name
robot-at(x41, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(28)) and($a(0) $s(28)) and($a(3) $s(28))) : $c(0)) (or(and($a(2) $s(54)) and($a(0) $s(20)) and($a(3) $s(30))) : $c(1)) ($c(1) : $s(28)) )
## hash index
28
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 1
23 0
24 0
25 1
26 0
27 1
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 1
47 0
48 0
49 1
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 1
63 0
64 0
65 1
66 0
67 1
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 1
88 0
89 1
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 1
103 0
104 0
105 1
106 0
107 1
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 1
123 0
124 0
125 0
126 1
127 1
128 0
129 1
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 1
143 0
144 0
145 1
146 0
147 1
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
29
## name
robot-at(x41, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(29)) and($a(0) $s(29)) and($a(3) $s(29))) : $c(0)) (or(and($a(1) $s(54)) and($a(0) $s(21)) and($a(3) $s(31))) : $c(1)) ($c(1) : $s(29)) )
## hash index
29
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 1
24 0
25 1
26 0
27 0
28 1
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 1
47 0
48 0
49 1
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 1
64 0
65 1
66 0
67 0
68 1
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 1
89 1
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 0
103 1
104 0
105 1
106 0
107 0
108 1
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 0
123 1
124 0
125 0
126 1
127 0
128 1
129 1
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 0
143 1
144 0
145 1
146 0
147 0
148 1
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
30
## name
robot-at(x54, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(30)) and($a(0) $s(30)) and($a(3) $s(30))) : $c(0)) (or(and($a(2) $s(55)) and($a(0) $s(28)) and($a(3) $s(34))) : $c(1)) ($c(1) : $s(30)) )
## hash index
30
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 1
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 1
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 1
93 0
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 1
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 1
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 1
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 1
133 0
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 1
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 1
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
31
## name
robot-at(x54, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(31)) and($a(0) $s(31)) and($a(3) $s(31))) : $c(0)) (or(and($a(1) $s(55)) and($a(0) $s(29)) and($a(3) $s(35))) : $c(1)) ($c(1) : $s(31)) )
## hash index
31
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 1
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 0
103 1
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 0
113 1
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 0
123 1
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 0
133 1
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 0
143 1
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 0
153 1
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
32
## name
robot-at(x6, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(32)) and($a(0) $s(32))) : $c(0)) (or(and($a(2) $s(56)) and($a(3) $s(38))) : $c(1)) ($c(1) : $s(32)) )
## hash index
32
## caching type 
VECTOR
## precomputed results
80
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 1
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 1
32 1
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 1
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 1
51 1
52 1
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 1
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 1
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
33
## name
robot-at(x6, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(33)) and($a(0) $s(33))) : $c(0)) (or(and($a(1) $s(56)) and($a(3) $s(39))) : $c(1)) ($c(1) : $s(33)) )
## hash index
33
## caching type 
VECTOR
## precomputed results
80
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 1
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 1
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 1
44 0
45 0
46 0
47 0
48 0
49 0
50 1
51 1
52 0
53 1
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 1
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 1
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
34
## name
robot-at(x69, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(34)) and($a(0) $s(34)) and($a(3) $s(34))) : $c(0)) (or(and($a(2) $s(57)) and($a(0) $s(30)) and($a(3) $s(36))) : $c(1)) ($c(1) : $s(34)) )
## hash index
34
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 1
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 1
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 1
93 0
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 1
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 1
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 1
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 1
133 0
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 1
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 1
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
35
## name
robot-at(x69, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(35)) and($a(0) $s(35)) and($a(3) $s(35))) : $c(0)) (or(and($a(1) $s(57)) and($a(0) $s(31)) and($a(3) $s(37))) : $c(1)) ($c(1) : $s(35)) )
## hash index
35
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 1
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 0
103 1
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 0
113 1
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 0
123 1
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 0
133 1
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 0
143 1
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 0
153 1
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
36
## name
robot-at(x86, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(36)) and($a(0) $s(36)) and($a(3) $s(36))) : $c(0)) (or(and($a(2) $s(58)) and($a(0) $s(34)) and($a(3) $s(0))) : $c(1)) ($c(1) : $s(36)) )
## hash index
36
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 0
26 1
27 0
28 0
29 1
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 1
41 0
42 1
43 0
44 0
45 1
46 0
47 1
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 1
63 0
64 0
65 1
66 0
67 1
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 1
87 1
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 1
103 0
104 1
105 0
106 1
107 1
108 0
109 1
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 1
121 0
122 1
123 0
124 0
125 1
126 0
127 1
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 1
143 0
144 0
145 1
146 0
147 1
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
37
## name
robot-at(x86, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(37)) and($a(0) $s(37)) and($a(3) $s(37))) : $c(0)) (or(and($a(1) $s(58)) and($a(0) $s(35)) and($a(3) $s(1))) : $c(1)) ($c(1) : $s(37)) )
## hash index
37
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 0
26 1
27 0
28 0
29 1
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 1
41 0
42 0
43 1
44 0
45 1
46 0
47 0
48 1
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 1
64 0
65 1
66 0
67 0
68 1
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 1
87 0
88 1
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 1
104 1
105 0
106 1
107 0
108 1
109 1
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 1
121 0
122 0
123 1
124 0
125 1
126 0
127 0
128 1
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 0
143 1
144 0
145 1
146 0
147 0
148 1
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
38
## name
robot-at(x9, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(38)) and($a(0) $s(38)) and($a(3) $s(38))) : $c(0)) (or(and($a(2) $s(59)) and($a(0) $s(32)) and($a(3) $s(4))) : $c(1)) ($c(1) : $s(38)) )
## hash index
38
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 0
26 1
27 0
28 0
29 1
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 1
41 0
42 1
43 0
44 0
45 1
46 0
47 1
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 1
63 0
64 0
65 1
66 0
67 1
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 1
87 1
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 1
103 0
104 1
105 0
106 1
107 1
108 0
109 1
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 1
121 0
122 1
123 0
124 0
125 1
126 0
127 1
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 1
143 0
144 0
145 1
146 0
147 1
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
39
## name
robot-at(x9, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(39)) and($a(0) $s(39)) and($a(3) $s(39))) : $c(0)) (or(and($a(1) $s(59)) and($a(0) $s(33)) and($a(3) $s(5))) : $c(1)) ($c(1) : $s(39)) )
## hash index
39
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 0
26 1
27 0
28 0
29 1
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 1
41 0
42 0
43 1
44 0
45 1
46 0
47 0
48 1
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 1
64 0
65 1
66 0
67 0
68 1
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 1
87 0
88 1
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 1
104 1
105 0
106 1
107 0
108 1
109 1
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 1
121 0
122 0
123 1
124 0
125 1
126 0
127 0
128 1
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 0
143 1
144 0
145 1
146 0
147 0
148 1
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
robot-at(x105, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(40)) and($a(2) $s(40)) and($a(0) $s(40)) and($a(3) $s(40))) : $c(0)) (or(and($a(1) $s(0)) and($a(2) $s(1)) and($a(0) $s(58)) and($a(3) $s(41))) : Bernoulli($c(0.529362157869496))) ($c(1) : $s(40)) )
## determinized formula
switch( (or($s(27) and($a(1) $s(40)) and($a(2) $s(40)) and($a(0) $s(40)) and($a(3) $s(40))) : $c(0)) (or(and($a(1) $s(0)) and($a(2) $s(1)) and($a(0) $s(58)) and($a(3) $s(41))) : $c(1)) ($c(1) : $s(40)) )
## hash index
40
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 1 2 0 0.470637842130504 1 0.529362157869496
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 1 2 0 0.470637842130504 1 0.529362157869496
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 1 2 0 0.470637842130504 1 0.529362157869496
18 1 2 0 0.470637842130504 1 0.529362157869496
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 1 1 1 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 1 1 1 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 1 2 0 0.470637842130504 1 0.529362157869496
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 1 2 0 0.470637842130504 1 0.529362157869496
87 0 1 0 1
88 1 2 0 0.470637842130504 1 0.529362157869496
89 0 1 0 1
90 0 1 0 1
91 1 2 0 0.470637842130504 1 0.529362157869496
92 1 2 0 0.470637842130504 1 0.529362157869496
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 1 2 0 0.470637842130504 1 0.529362157869496
97 1 2 0 0.470637842130504 1 0.529362157869496
98 1 2 0 0.470637842130504 1 0.529362157869496
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 1 1 1 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 1 1 1 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 1 2 0 0.470637842130504 1 0.529362157869496
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 1 2 0 0.470637842130504 1 0.529362157869496
169 1 2 0 0.470637842130504 1 0.529362157869496
170 0 1 0 1
171 0 1 0 1
172 1 2 0 0.470637842130504 1 0.529362157869496
173 0 1 0 1
174 1 2 0 0.470637842130504 1 0.529362157869496
175 0 1 0 1
176 0 1 0 1
177 1 2 0 0.470637842130504 1 0.529362157869496
178 1 2 0 0.470637842130504 1 0.529362157869496
179 1 2 0 0.470637842130504 1 0.529362157869496
180 0 1 0 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 1 1 1 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 1 1 1 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 1 2 0 0.470637842130504 1 0.529362157869496
242 0 1 0 1
243 0 1 0 1
244 1 2 0 0.470637842130504 1 0.529362157869496
245 0 1 0 1
246 1 2 0 0.470637842130504 1 0.529362157869496
247 0 1 0 1
248 1 2 0 0.470637842130504 1 0.529362157869496
249 1 2 0 0.470637842130504 1 0.529362157869496
250 0 1 0 1
251 1 2 0 0.470637842130504 1 0.529362157869496
252 1 2 0 0.470637842130504 1 0.529362157869496
253 0 1 0 1
254 1 2 0 0.470637842130504 1 0.529362157869496
255 0 1 0 1
256 1 2 0 0.470637842130504 1 0.529362157869496
257 1 2 0 0.470637842130504 1 0.529362157869496
258 1 2 0 0.470637842130504 1 0.529362157869496
259 1 2 0 0.470637842130504 1 0.529362157869496
260 0 1 0 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 1 1 1 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 1 1 1 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 0 1 0 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 0 1 0 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
1
## name
robot-at(x126, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(41)) and($a(2) $s(41)) and($a(0) $s(41)) and($a(3) $s(41))) : $c(0)) (or(and($a(1) $s(2)) and($a(2) $s(3)) and($a(0) $s(40)) and($a(3) $s(43))) : Bernoulli($c(0.477572323558362))) ($c(1) : $s(41)) )
## determinized formula
switch( (or($s(27) and($a(1) $s(41)) and($a(2) $s(41)) and($a(0) $s(41)) and($a(3) $s(41))) : $c(0)) (or(and($a(1) $s(2)) and($a(2) $s(3)) and($a(0) $s(40)) and($a(3) $s(43))) : $c(0)) ($c(1) : $s(41)) )
## hash index
41
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 2 0 0.522427676441638 1 0.477572323558362
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 2 0 0.522427676441638 1 0.477572323558362
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 2 0 0.522427676441638 1 0.477572323558362
18 0 2 0 0.522427676441638 1 0.477572323558362
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 2 0 0.522427676441638 1 0.477572323558362
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 2 0 0.522427676441638 1 0.477572323558362
49 0 2 0 0.522427676441638 1 0.477572323558362
50 0 1 0 1
51 0 1 0 1
52 0 2 0 0.522427676441638 1 0.477572323558362
53 0 1 0 1
54 0 2 0 0.522427676441638 1 0.477572323558362
55 0 1 0 1
56 0 1 0 1
57 0 2 0 0.522427676441638 1 0.477572323558362
58 0 2 0 0.522427676441638 1 0.477572323558362
59 0 2 0 0.522427676441638 1 0.477572323558362
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 1 1 1 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 1 1 1 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 1 1 1 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 1 1 1 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.522427676441638 1 0.477572323558362
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 2 0 0.522427676441638 1 0.477572323558362
167 0 1 0 1
168 0 2 0 0.522427676441638 1 0.477572323558362
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.522427676441638 1 0.477572323558362
172 0 2 0 0.522427676441638 1 0.477572323558362
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 2 0 0.522427676441638 1 0.477572323558362
177 0 2 0 0.522427676441638 1 0.477572323558362
178 0 2 0 0.522427676441638 1 0.477572323558362
179 0 1 0 1
180 0 1 0 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 2 0 0.522427676441638 1 0.477572323558362
202 0 1 0 1
203 0 1 0 1
204 0 2 0 0.522427676441638 1 0.477572323558362
205 0 1 0 1
206 0 2 0 0.522427676441638 1 0.477572323558362
207 0 1 0 1
208 0 2 0 0.522427676441638 1 0.477572323558362
209 0 2 0 0.522427676441638 1 0.477572323558362
210 0 1 0 1
211 0 2 0 0.522427676441638 1 0.477572323558362
212 0 2 0 0.522427676441638 1 0.477572323558362
213 0 1 0 1
214 0 2 0 0.522427676441638 1 0.477572323558362
215 0 1 0 1
216 0 2 0 0.522427676441638 1 0.477572323558362
217 0 2 0 0.522427676441638 1 0.477572323558362
218 0 2 0 0.522427676441638 1 0.477572323558362
219 0 2 0 0.522427676441638 1 0.477572323558362
220 0 1 0 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 1 1 1 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 1 1 1 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 1 1 1 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 1 1 1 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 0 1 0 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 0 1 0 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
2
## name
robot-at(x14, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(42)) and($a(2) $s(42)) and($a(0) $s(42)) and($a(3) $s(42))) : $c(0)) (or(and($a(1) $s(4)) and($a(2) $s(5)) and($a(0) $s(59)) and($a(3) $s(46))) : Bernoulli($c(0.874014911290846))) ($c(1) : $s(42)) )
## determinized formula
switch( (or($s(27) and($a(1) $s(42)) and($a(2) $s(42)) and($a(0) $s(42)) and($a(3) $s(42))) : $c(0)) (or(and($a(1) $s(4)) and($a(2) $s(5)) and($a(0) $s(59)) and($a(3) $s(46))) : $c(1)) ($c(1) : $s(42)) )
## hash index
42
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 1 2 0 0.125985088709154 1 0.874014911290846
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 1 2 0 0.125985088709154 1 0.874014911290846
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 1 2 0 0.125985088709154 1 0.874014911290846
18 1 2 0 0.125985088709154 1 0.874014911290846
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 1 1 1 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 1 1 1 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 1 2 0 0.125985088709154 1 0.874014911290846
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 1 2 0 0.125985088709154 1 0.874014911290846
87 0 1 0 1
88 1 2 0 0.125985088709154 1 0.874014911290846
89 0 1 0 1
90 0 1 0 1
91 1 2 0 0.125985088709154 1 0.874014911290846
92 1 2 0 0.125985088709154 1 0.874014911290846
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 1 2 0 0.125985088709154 1 0.874014911290846
97 1 2 0 0.125985088709154 1 0.874014911290846
98 1 2 0 0.125985088709154 1 0.874014911290846
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 1 1 1 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 1 1 1 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 1 2 0 0.125985088709154 1 0.874014911290846
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 1 2 0 0.125985088709154 1 0.874014911290846
169 1 2 0 0.125985088709154 1 0.874014911290846
170 0 1 0 1
171 0 1 0 1
172 1 2 0 0.125985088709154 1 0.874014911290846
173 0 1 0 1
174 1 2 0 0.125985088709154 1 0.874014911290846
175 0 1 0 1
176 0 1 0 1
177 1 2 0 0.125985088709154 1 0.874014911290846
178 1 2 0 0.125985088709154 1 0.874014911290846
179 1 2 0 0.125985088709154 1 0.874014911290846
180 0 1 0 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 1 1 1 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 1 1 1 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 1 2 0 0.125985088709154 1 0.874014911290846
242 0 1 0 1
243 0 1 0 1
244 1 2 0 0.125985088709154 1 0.874014911290846
245 0 1 0 1
246 1 2 0 0.125985088709154 1 0.874014911290846
247 0 1 0 1
248 1 2 0 0.125985088709154 1 0.874014911290846
249 1 2 0 0.125985088709154 1 0.874014911290846
250 0 1 0 1
251 1 2 0 0.125985088709154 1 0.874014911290846
252 1 2 0 0.125985088709154 1 0.874014911290846
253 0 1 0 1
254 1 2 0 0.125985088709154 1 0.874014911290846
255 0 1 0 1
256 1 2 0 0.125985088709154 1 0.874014911290846
257 1 2 0 0.125985088709154 1 0.874014911290846
258 1 2 0 0.125985088709154 1 0.874014911290846
259 1 2 0 0.125985088709154 1 0.874014911290846
260 0 1 0 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 1 1 1 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 1 1 1 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 0 1 0 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 0 1 0 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
3
## name
robot-at(x149, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(43)) and($a(2) $s(43)) and($a(0) $s(43)) and($a(3) $s(43))) : $c(0)) (or(and($a(1) $s(6)) and($a(2) $s(7)) and($a(0) $s(41)) and($a(3) $s(44))) : Bernoulli($c(0.448704042030793))) ($c(1) : $s(43)) )
## determinized formula
switch( (or($s(27) and($a(1) $s(43)) and($a(2) $s(43)) and($a(0) $s(43)) and($a(3) $s(43))) : $c(0)) (or(and($a(1) $s(6)) and($a(2) $s(7)) and($a(0) $s(41)) and($a(3) $s(44))) : $c(0)) ($c(1) : $s(43)) )
## hash index
43
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 2 0 0.551295957969207 1 0.448704042030793
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 2 0 0.551295957969207 1 0.448704042030793
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 2 0 0.551295957969207 1 0.448704042030793
18 0 2 0 0.551295957969207 1 0.448704042030793
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 2 0 0.551295957969207 1 0.448704042030793
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 2 0 0.551295957969207 1 0.448704042030793
49 0 2 0 0.551295957969207 1 0.448704042030793
50 0 1 0 1
51 0 1 0 1
52 0 2 0 0.551295957969207 1 0.448704042030793
53 0 1 0 1
54 0 2 0 0.551295957969207 1 0.448704042030793
55 0 1 0 1
56 0 1 0 1
57 0 2 0 0.551295957969207 1 0.448704042030793
58 0 2 0 0.551295957969207 1 0.448704042030793
59 0 2 0 0.551295957969207 1 0.448704042030793
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 1 1 1 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 1 1 1 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 1 1 1 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 1 1 1 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.551295957969207 1 0.448704042030793
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 2 0 0.551295957969207 1 0.448704042030793
167 0 1 0 1
168 0 2 0 0.551295957969207 1 0.448704042030793
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.551295957969207 1 0.448704042030793
172 0 2 0 0.551295957969207 1 0.448704042030793
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 2 0 0.551295957969207 1 0.448704042030793
177 0 2 0 0.551295957969207 1 0.448704042030793
178 0 2 0 0.551295957969207 1 0.448704042030793
179 0 1 0 1
180 0 1 0 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 2 0 0.551295957969207 1 0.448704042030793
202 0 1 0 1
203 0 1 0 1
204 0 2 0 0.551295957969207 1 0.448704042030793
205 0 1 0 1
206 0 2 0 0.551295957969207 1 0.448704042030793
207 0 1 0 1
208 0 2 0 0.551295957969207 1 0.448704042030793
209 0 2 0 0.551295957969207 1 0.448704042030793
210 0 1 0 1
211 0 2 0 0.551295957969207 1 0.448704042030793
212 0 2 0 0.551295957969207 1 0.448704042030793
213 0 1 0 1
214 0 2 0 0.551295957969207 1 0.448704042030793
215 0 1 0 1
216 0 2 0 0.551295957969207 1 0.448704042030793
217 0 2 0 0.551295957969207 1 0.448704042030793
218 0 2 0 0.551295957969207 1 0.448704042030793
219 0 2 0 0.551295957969207 1 0.448704042030793
220 0 1 0 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 1 1 1 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 1 1 1 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 1 1 1 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 1 1 1 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 0 1 0 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 0 1 0 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
4
## name
robot-at(x174, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(44)) and($a(2) $s(44)) and($a(0) $s(44)) and($a(3) $s(44))) : $c(0)) (or(and($a(1) $s(8)) and($a(2) $s(9)) and($a(0) $s(43)) and($a(3) $s(45))) : Bernoulli($c(0.407939155831149))) ($c(1) : $s(44)) )
## determinized formula
switch( (or($s(27) and($a(1) $s(44)) and($a(2) $s(44)) and($a(0) $s(44)) and($a(3) $s(44))) : $c(0)) (or(and($a(1) $s(8)) and($a(2) $s(9)) and($a(0) $s(43)) and($a(3) $s(45))) : $c(0)) ($c(1) : $s(44)) )
## hash index
44
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 2 0 0.592060844168851 1 0.407939155831149
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 2 0 0.592060844168851 1 0.407939155831149
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 2 0 0.592060844168851 1 0.407939155831149
18 0 2 0 0.592060844168851 1 0.407939155831149
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 2 0 0.592060844168851 1 0.407939155831149
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 2 0 0.592060844168851 1 0.407939155831149
49 0 2 0 0.592060844168851 1 0.407939155831149
50 0 1 0 1
51 0 1 0 1
52 0 2 0 0.592060844168851 1 0.407939155831149
53 0 1 0 1
54 0 2 0 0.592060844168851 1 0.407939155831149
55 0 1 0 1
56 0 1 0 1
57 0 2 0 0.592060844168851 1 0.407939155831149
58 0 2 0 0.592060844168851 1 0.407939155831149
59 0 2 0 0.592060844168851 1 0.407939155831149
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 1 1 1 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 1 1 1 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 1 1 1 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 1 1 1 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.592060844168851 1 0.407939155831149
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 2 0 0.592060844168851 1 0.407939155831149
167 0 1 0 1
168 0 2 0 0.592060844168851 1 0.407939155831149
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.592060844168851 1 0.407939155831149
172 0 2 0 0.592060844168851 1 0.407939155831149
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 2 0 0.592060844168851 1 0.407939155831149
177 0 2 0 0.592060844168851 1 0.407939155831149
178 0 2 0 0.592060844168851 1 0.407939155831149
179 0 1 0 1
180 0 1 0 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 2 0 0.592060844168851 1 0.407939155831149
202 0 1 0 1
203 0 1 0 1
204 0 2 0 0.592060844168851 1 0.407939155831149
205 0 1 0 1
206 0 2 0 0.592060844168851 1 0.407939155831149
207 0 1 0 1
208 0 2 0 0.592060844168851 1 0.407939155831149
209 0 2 0 0.592060844168851 1 0.407939155831149
210 0 1 0 1
211 0 2 0 0.592060844168851 1 0.407939155831149
212 0 2 0 0.592060844168851 1 0.407939155831149
213 0 1 0 1
214 0 2 0 0.592060844168851 1 0.407939155831149
215 0 1 0 1
216 0 2 0 0.592060844168851 1 0.407939155831149
217 0 2 0 0.592060844168851 1 0.407939155831149
218 0 2 0 0.592060844168851 1 0.407939155831149
219 0 2 0 0.592060844168851 1 0.407939155831149
220 0 1 0 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 1 1 1 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 1 1 1 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 1 1 1 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 1 1 1 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 0 1 0 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 0 1 0 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
5
## name
robot-at(x201, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(45)) and($a(2) $s(45)) and($a(0) $s(45)) and($a(3) $s(45))) : $c(0)) (or(and($a(1) $s(10)) and($a(2) $s(11)) and($a(0) $s(44)) and($a(3) $s(47))) : Bernoulli($c(0.369444596679195))) ($c(1) : $s(45)) )
## determinized formula
switch( (or($s(27) and($a(1) $s(45)) and($a(2) $s(45)) and($a(0) $s(45)) and($a(3) $s(45))) : $c(0)) (or(and($a(1) $s(10)) and($a(2) $s(11)) and($a(0) $s(44)) and($a(3) $s(47))) : $c(0)) ($c(1) : $s(45)) )
## hash index
45
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 2 0 0.630555403320805 1 0.369444596679195
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 2 0 0.630555403320805 1 0.369444596679195
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 2 0 0.630555403320805 1 0.369444596679195
18 0 2 0 0.630555403320805 1 0.369444596679195
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 2 0 0.630555403320805 1 0.369444596679195
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 2 0 0.630555403320805 1 0.369444596679195
49 0 2 0 0.630555403320805 1 0.369444596679195
50 0 1 0 1
51 0 1 0 1
52 0 2 0 0.630555403320805 1 0.369444596679195
53 0 1 0 1
54 0 2 0 0.630555403320805 1 0.369444596679195
55 0 1 0 1
56 0 1 0 1
57 0 2 0 0.630555403320805 1 0.369444596679195
58 0 2 0 0.630555403320805 1 0.369444596679195
59 0 2 0 0.630555403320805 1 0.369444596679195
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 1 1 1 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 1 1 1 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 1 1 1 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 1 1 1 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.630555403320805 1 0.369444596679195
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 2 0 0.630555403320805 1 0.369444596679195
167 0 1 0 1
168 0 2 0 0.630555403320805 1 0.369444596679195
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.630555403320805 1 0.369444596679195
172 0 2 0 0.630555403320805 1 0.369444596679195
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 2 0 0.630555403320805 1 0.369444596679195
177 0 2 0 0.630555403320805 1 0.369444596679195
178 0 2 0 0.630555403320805 1 0.369444596679195
179 0 1 0 1
180 0 1 0 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 2 0 0.630555403320805 1 0.369444596679195
202 0 1 0 1
203 0 1 0 1
204 0 2 0 0.630555403320805 1 0.369444596679195
205 0 1 0 1
206 0 2 0 0.630555403320805 1 0.369444596679195
207 0 1 0 1
208 0 2 0 0.630555403320805 1 0.369444596679195
209 0 2 0 0.630555403320805 1 0.369444596679195
210 0 1 0 1
211 0 2 0 0.630555403320805 1 0.369444596679195
212 0 2 0 0.630555403320805 1 0.369444596679195
213 0 1 0 1
214 0 2 0 0.630555403320805 1 0.369444596679195
215 0 1 0 1
216 0 2 0 0.630555403320805 1 0.369444596679195
217 0 2 0 0.630555403320805 1 0.369444596679195
218 0 2 0 0.630555403320805 1 0.369444596679195
219 0 2 0 0.630555403320805 1 0.369444596679195
220 0 1 0 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 1 1 1 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 1 1 1 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 1 1 1 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 1 1 1 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 0 1 0 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 0 1 0 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
6
## name
robot-at(x21, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(46)) and($a(2) $s(46)) and($a(0) $s(46)) and($a(3) $s(46))) : $c(0)) (or(and($a(1) $s(12)) and($a(2) $s(13)) and($a(0) $s(42)) and($a(3) $s(50))) : Bernoulli($c(0.813817389603508))) ($c(1) : $s(46)) )
## determinized formula
switch( (or($s(27) and($a(1) $s(46)) and($a(2) $s(46)) and($a(0) $s(46)) and($a(3) $s(46))) : $c(0)) (or(and($a(1) $s(12)) and($a(2) $s(13)) and($a(0) $s(42)) and($a(3) $s(50))) : $c(1)) ($c(1) : $s(46)) )
## hash index
46
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 1 2 0 0.186182610396492 1 0.813817389603508
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 1 2 0 0.186182610396492 1 0.813817389603508
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 1 2 0 0.186182610396492 1 0.813817389603508
18 1 2 0 0.186182610396492 1 0.813817389603508
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 1 2 0 0.186182610396492 1 0.813817389603508
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 1 2 0 0.186182610396492 1 0.813817389603508
49 1 2 0 0.186182610396492 1 0.813817389603508
50 0 1 0 1
51 0 1 0 1
52 1 2 0 0.186182610396492 1 0.813817389603508
53 0 1 0 1
54 1 2 0 0.186182610396492 1 0.813817389603508
55 0 1 0 1
56 0 1 0 1
57 1 2 0 0.186182610396492 1 0.813817389603508
58 1 2 0 0.186182610396492 1 0.813817389603508
59 1 2 0 0.186182610396492 1 0.813817389603508
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 1 1 1 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 1 1 1 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 1 1 1 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 1 1 1 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 1 2 0 0.186182610396492 1 0.813817389603508
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 1 2 0 0.186182610396492 1 0.813817389603508
167 0 1 0 1
168 1 2 0 0.186182610396492 1 0.813817389603508
169 0 1 0 1
170 0 1 0 1
171 1 2 0 0.186182610396492 1 0.813817389603508
172 1 2 0 0.186182610396492 1 0.813817389603508
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 1 2 0 0.186182610396492 1 0.813817389603508
177 1 2 0 0.186182610396492 1 0.813817389603508
178 1 2 0 0.186182610396492 1 0.813817389603508
179 0 1 0 1
180 0 1 0 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 1 2 0 0.186182610396492 1 0.813817389603508
202 0 1 0 1
203 0 1 0 1
204 1 2 0 0.186182610396492 1 0.813817389603508
205 0 1 0 1
206 1 2 0 0.186182610396492 1 0.813817389603508
207 0 1 0 1
208 1 2 0 0.186182610396492 1 0.813817389603508
209 1 2 0 0.186182610396492 1 0.813817389603508
210 0 1 0 1
211 1 2 0 0.186182610396492 1 0.813817389603508
212 1 2 0 0.186182610396492 1 0.813817389603508
213 0 1 0 1
214 1 2 0 0.186182610396492 1 0.813817389603508
215 0 1 0 1
216 1 2 0 0.186182610396492 1 0.813817389603508
217 1 2 0 0.186182610396492 1 0.813817389603508
218 1 2 0 0.186182610396492 1 0.813817389603508
219 1 2 0 0.186182610396492 1 0.813817389603508
220 0 1 0 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 1 1 1 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 1 1 1 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 1 1 1 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 1 1 1 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 0 1 0 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 0 1 0 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
7
## name
robot-at(x230, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(47)) and($a(2) $s(47)) and($a(0) $s(47)) and($a(3) $s(47))) : $c(0)) (or(and($a(1) $s(14)) and($a(2) $s(15)) and($a(0) $s(45)) and($a(3) $s(48))) : Bernoulli($c(0.31979205351519))) ($c(1) : $s(47)) )
## determinized formula
switch( (or($s(27) and($a(1) $s(47)) and($a(2) $s(47)) and($a(0) $s(47)) and($a(3) $s(47))) : $c(0)) (or(and($a(1) $s(14)) and($a(2) $s(15)) and($a(0) $s(45)) and($a(3) $s(48))) : $c(0)) ($c(1) : $s(47)) )
## hash index
47
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 2 0 0.68020794648481 1 0.31979205351519
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 2 0 0.68020794648481 1 0.31979205351519
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 2 0 0.68020794648481 1 0.31979205351519
18 0 2 0 0.68020794648481 1 0.31979205351519
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 2 0 0.68020794648481 1 0.31979205351519
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 2 0 0.68020794648481 1 0.31979205351519
49 0 2 0 0.68020794648481 1 0.31979205351519
50 0 1 0 1
51 0 1 0 1
52 0 2 0 0.68020794648481 1 0.31979205351519
53 0 1 0 1
54 0 2 0 0.68020794648481 1 0.31979205351519
55 0 1 0 1
56 0 1 0 1
57 0 2 0 0.68020794648481 1 0.31979205351519
58 0 2 0 0.68020794648481 1 0.31979205351519
59 0 2 0 0.68020794648481 1 0.31979205351519
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 1 1 1 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 1 1 1 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 1 1 1 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 1 1 1 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.68020794648481 1 0.31979205351519
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 2 0 0.68020794648481 1 0.31979205351519
167 0 1 0 1
168 0 2 0 0.68020794648481 1 0.31979205351519
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.68020794648481 1 0.31979205351519
172 0 2 0 0.68020794648481 1 0.31979205351519
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 2 0 0.68020794648481 1 0.31979205351519
177 0 2 0 0.68020794648481 1 0.31979205351519
178 0 2 0 0.68020794648481 1 0.31979205351519
179 0 1 0 1
180 0 1 0 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 2 0 0.68020794648481 1 0.31979205351519
202 0 1 0 1
203 0 1 0 1
204 0 2 0 0.68020794648481 1 0.31979205351519
205 0 1 0 1
206 0 2 0 0.68020794648481 1 0.31979205351519
207 0 1 0 1
208 0 2 0 0.68020794648481 1 0.31979205351519
209 0 2 0 0.68020794648481 1 0.31979205351519
210 0 1 0 1
211 0 2 0 0.68020794648481 1 0.31979205351519
212 0 2 0 0.68020794648481 1 0.31979205351519
213 0 1 0 1
214 0 2 0 0.68020794648481 1 0.31979205351519
215 0 1 0 1
216 0 2 0 0.68020794648481 1 0.31979205351519
217 0 2 0 0.68020794648481 1 0.31979205351519
218 0 2 0 0.68020794648481 1 0.31979205351519
219 0 2 0 0.68020794648481 1 0.31979205351519
220 0 1 0 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 1 1 1 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 1 1 1 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 1 1 1 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 1 1 1 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 0 1 0 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 0 1 0 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
8
## name
robot-at(x261, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(48)) and($a(2) $s(48)) and($a(0) $s(48)) and($a(3) $s(48))) : $c(0)) (or(and($a(1) $s(16)) and($a(2) $s(17)) and($a(0) $s(47)) and($a(3) $s(49))) : Bernoulli($c(0.234891649041521))) ($c(1) : $s(48)) )
## determinized formula
switch( (or($s(27) and($a(1) $s(48)) and($a(2) $s(48)) and($a(0) $s(48)) and($a(3) $s(48))) : $c(0)) (or(and($a(1) $s(16)) and($a(2) $s(17)) and($a(0) $s(47)) and($a(3) $s(49))) : $c(0)) ($c(1) : $s(48)) )
## hash index
48
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 2 0 0.765108350958479 1 0.234891649041521
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 2 0 0.765108350958479 1 0.234891649041521
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 2 0 0.765108350958479 1 0.234891649041521
18 0 2 0 0.765108350958479 1 0.234891649041521
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 2 0 0.765108350958479 1 0.234891649041521
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 2 0 0.765108350958479 1 0.234891649041521
49 0 2 0 0.765108350958479 1 0.234891649041521
50 0 1 0 1
51 0 1 0 1
52 0 2 0 0.765108350958479 1 0.234891649041521
53 0 1 0 1
54 0 2 0 0.765108350958479 1 0.234891649041521
55 0 1 0 1
56 0 1 0 1
57 0 2 0 0.765108350958479 1 0.234891649041521
58 0 2 0 0.765108350958479 1 0.234891649041521
59 0 2 0 0.765108350958479 1 0.234891649041521
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 1 1 1 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 1 1 1 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 1 1 1 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 1 1 1 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.765108350958479 1 0.234891649041521
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 2 0 0.765108350958479 1 0.234891649041521
167 0 1 0 1
168 0 2 0 0.765108350958479 1 0.234891649041521
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.765108350958479 1 0.234891649041521
172 0 2 0 0.765108350958479 1 0.234891649041521
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 2 0 0.765108350958479 1 0.234891649041521
177 0 2 0 0.765108350958479 1 0.234891649041521
178 0 2 0 0.765108350958479 1 0.234891649041521
179 0 1 0 1
180 0 1 0 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 2 0 0.765108350958479 1 0.234891649041521
202 0 1 0 1
203 0 1 0 1
204 0 2 0 0.765108350958479 1 0.234891649041521
205 0 1 0 1
206 0 2 0 0.765108350958479 1 0.234891649041521
207 0 1 0 1
208 0 2 0 0.765108350958479 1 0.234891649041521
209 0 2 0 0.765108350958479 1 0.234891649041521
210 0 1 0 1
211 0 2 0 0.765108350958479 1 0.234891649041521
212 0 2 0 0.765108350958479 1 0.234891649041521
213 0 1 0 1
214 0 2 0 0.765108350958479 1 0.234891649041521
215 0 1 0 1
216 0 2 0 0.765108350958479 1 0.234891649041521
217 0 2 0 0.765108350958479 1 0.234891649041521
218 0 2 0 0.765108350958479 1 0.234891649041521
219 0 2 0 0.765108350958479 1 0.234891649041521
220 0 1 0 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 1 1 1 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 1 1 1 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 1 1 1 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 1 1 1 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 0 1 0 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 0 1 0 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
9
## name
robot-at(x294, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(49)) and($a(2) $s(49)) and($a(0) $s(49)) and($a(3) $s(49))) : $c(0)) (or(and($a(1) $s(18)) and($a(2) $s(19)) and($a(0) $s(48)) and($a(3) $s(51))) : Bernoulli($c(0.227541108542171))) ($c(1) : $s(49)) )
## determinized formula
switch( (or($s(27) and($a(1) $s(49)) and($a(2) $s(49)) and($a(0) $s(49)) and($a(3) $s(49))) : $c(0)) (or(and($a(1) $s(18)) and($a(2) $s(19)) and($a(0) $s(48)) and($a(3) $s(51))) : $c(0)) ($c(1) : $s(49)) )
## hash index
49
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 2 0 0.772458891457829 1 0.227541108542171
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 2 0 0.772458891457829 1 0.227541108542171
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 2 0 0.772458891457829 1 0.227541108542171
18 0 2 0 0.772458891457829 1 0.227541108542171
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 2 0 0.772458891457829 1 0.227541108542171
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 2 0 0.772458891457829 1 0.227541108542171
49 0 2 0 0.772458891457829 1 0.227541108542171
50 0 1 0 1
51 0 1 0 1
52 0 2 0 0.772458891457829 1 0.227541108542171
53 0 1 0 1
54 0 2 0 0.772458891457829 1 0.227541108542171
55 0 1 0 1
56 0 1 0 1
57 0 2 0 0.772458891457829 1 0.227541108542171
58 0 2 0 0.772458891457829 1 0.227541108542171
59 0 2 0 0.772458891457829 1 0.227541108542171
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 1 1 1 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 1 1 1 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 1 1 1 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 1 1 1 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.772458891457829 1 0.227541108542171
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 2 0 0.772458891457829 1 0.227541108542171
167 0 1 0 1
168 0 2 0 0.772458891457829 1 0.227541108542171
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.772458891457829 1 0.227541108542171
172 0 2 0 0.772458891457829 1 0.227541108542171
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 2 0 0.772458891457829 1 0.227541108542171
177 0 2 0 0.772458891457829 1 0.227541108542171
178 0 2 0 0.772458891457829 1 0.227541108542171
179 0 1 0 1
180 0 1 0 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 2 0 0.772458891457829 1 0.227541108542171
202 0 1 0 1
203 0 1 0 1
204 0 2 0 0.772458891457829 1 0.227541108542171
205 0 1 0 1
206 0 2 0 0.772458891457829 1 0.227541108542171
207 0 1 0 1
208 0 2 0 0.772458891457829 1 0.227541108542171
209 0 2 0 0.772458891457829 1 0.227541108542171
210 0 1 0 1
211 0 2 0 0.772458891457829 1 0.227541108542171
212 0 2 0 0.772458891457829 1 0.227541108542171
213 0 1 0 1
214 0 2 0 0.772458891457829 1 0.227541108542171
215 0 1 0 1
216 0 2 0 0.772458891457829 1 0.227541108542171
217 0 2 0 0.772458891457829 1 0.227541108542171
218 0 2 0 0.772458891457829 1 0.227541108542171
219 0 2 0 0.772458891457829 1 0.227541108542171
220 0 1 0 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 1 1 1 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 1 1 1 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 1 1 1 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 1 1 1 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 0 1 0 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 0 1 0 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
10
## name
robot-at(x30, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(50)) and($a(2) $s(50)) and($a(0) $s(50)) and($a(3) $s(50))) : $c(0)) (or(and($a(1) $s(20)) and($a(2) $s(21)) and($a(0) $s(46)) and($a(3) $s(54))) : Bernoulli($c(0.765231303968712))) ($c(1) : $s(50)) )
## determinized formula
switch( (or($s(27) and($a(1) $s(50)) and($a(2) $s(50)) and($a(0) $s(50)) and($a(3) $s(50))) : $c(0)) (or(and($a(1) $s(20)) and($a(2) $s(21)) and($a(0) $s(46)) and($a(3) $s(54))) : $c(1)) ($c(1) : $s(50)) )
## hash index
50
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 1 2 0 0.234768696031288 1 0.765231303968712
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 1 2 0 0.234768696031288 1 0.765231303968712
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 1 2 0 0.234768696031288 1 0.765231303968712
18 1 2 0 0.234768696031288 1 0.765231303968712
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 1 2 0 0.234768696031288 1 0.765231303968712
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 1 2 0 0.234768696031288 1 0.765231303968712
49 1 2 0 0.234768696031288 1 0.765231303968712
50 0 1 0 1
51 0 1 0 1
52 1 2 0 0.234768696031288 1 0.765231303968712
53 0 1 0 1
54 1 2 0 0.234768696031288 1 0.765231303968712
55 0 1 0 1
56 0 1 0 1
57 1 2 0 0.234768696031288 1 0.765231303968712
58 1 2 0 0.234768696031288 1 0.765231303968712
59 1 2 0 0.234768696031288 1 0.765231303968712
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 1 1 1 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 1 1 1 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 1 1 1 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 1 1 1 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 1 2 0 0.234768696031288 1 0.765231303968712
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 1 2 0 0.234768696031288 1 0.765231303968712
167 0 1 0 1
168 1 2 0 0.234768696031288 1 0.765231303968712
169 0 1 0 1
170 0 1 0 1
171 1 2 0 0.234768696031288 1 0.765231303968712
172 1 2 0 0.234768696031288 1 0.765231303968712
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 1 2 0 0.234768696031288 1 0.765231303968712
177 1 2 0 0.234768696031288 1 0.765231303968712
178 1 2 0 0.234768696031288 1 0.765231303968712
179 0 1 0 1
180 0 1 0 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 1 2 0 0.234768696031288 1 0.765231303968712
202 0 1 0 1
203 0 1 0 1
204 1 2 0 0.234768696031288 1 0.765231303968712
205 0 1 0 1
206 1 2 0 0.234768696031288 1 0.765231303968712
207 0 1 0 1
208 1 2 0 0.234768696031288 1 0.765231303968712
209 1 2 0 0.234768696031288 1 0.765231303968712
210 0 1 0 1
211 1 2 0 0.234768696031288 1 0.765231303968712
212 1 2 0 0.234768696031288 1 0.765231303968712
213 0 1 0 1
214 1 2 0 0.234768696031288 1 0.765231303968712
215 0 1 0 1
216 1 2 0 0.234768696031288 1 0.765231303968712
217 1 2 0 0.234768696031288 1 0.765231303968712
218 1 2 0 0.234768696031288 1 0.765231303968712
219 1 2 0 0.234768696031288 1 0.765231303968712
220 0 1 0 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 1 1 1 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 1 1 1 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 1 1 1 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 1 1 1 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 0 1 0 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 0 1 0 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
11
## name
robot-at(x329, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(51)) and($a(2) $s(51)) and($a(0) $s(51)) and($a(3) $s(51))) : $c(0)) (or(and($a(1) $s(22)) and($a(2) $s(23)) and($a(0) $s(49)) and($a(3) $s(52))) : Bernoulli($c(0.181369565807185))) ($c(1) : $s(51)) )
## determinized formula
switch( (or($s(27) and($a(1) $s(51)) and($a(2) $s(51)) and($a(0) $s(51)) and($a(3) $s(51))) : $c(0)) (or(and($a(1) $s(22)) and($a(2) $s(23)) and($a(0) $s(49)) and($a(3) $s(52))) : $c(0)) ($c(1) : $s(51)) )
## hash index
51
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 2 0 0.818630434192815 1 0.181369565807185
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 2 0 0.818630434192815 1 0.181369565807185
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 2 0 0.818630434192815 1 0.181369565807185
18 0 2 0 0.818630434192815 1 0.181369565807185
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 2 0 0.818630434192815 1 0.181369565807185
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 2 0 0.818630434192815 1 0.181369565807185
49 0 2 0 0.818630434192815 1 0.181369565807185
50 0 1 0 1
51 0 1 0 1
52 0 2 0 0.818630434192815 1 0.181369565807185
53 0 1 0 1
54 0 2 0 0.818630434192815 1 0.181369565807185
55 0 1 0 1
56 0 1 0 1
57 0 2 0 0.818630434192815 1 0.181369565807185
58 0 2 0 0.818630434192815 1 0.181369565807185
59 0 2 0 0.818630434192815 1 0.181369565807185
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 1 1 1 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 1 1 1 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 1 1 1 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 1 1 1 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.818630434192815 1 0.181369565807185
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 2 0 0.818630434192815 1 0.181369565807185
167 0 1 0 1
168 0 2 0 0.818630434192815 1 0.181369565807185
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.818630434192815 1 0.181369565807185
172 0 2 0 0.818630434192815 1 0.181369565807185
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 2 0 0.818630434192815 1 0.181369565807185
177 0 2 0 0.818630434192815 1 0.181369565807185
178 0 2 0 0.818630434192815 1 0.181369565807185
179 0 1 0 1
180 0 1 0 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 2 0 0.818630434192815 1 0.181369565807185
202 0 1 0 1
203 0 1 0 1
204 0 2 0 0.818630434192815 1 0.181369565807185
205 0 1 0 1
206 0 2 0 0.818630434192815 1 0.181369565807185
207 0 1 0 1
208 0 2 0 0.818630434192815 1 0.181369565807185
209 0 2 0 0.818630434192815 1 0.181369565807185
210 0 1 0 1
211 0 2 0 0.818630434192815 1 0.181369565807185
212 0 2 0 0.818630434192815 1 0.181369565807185
213 0 1 0 1
214 0 2 0 0.818630434192815 1 0.181369565807185
215 0 1 0 1
216 0 2 0 0.818630434192815 1 0.181369565807185
217 0 2 0 0.818630434192815 1 0.181369565807185
218 0 2 0 0.818630434192815 1 0.181369565807185
219 0 2 0 0.818630434192815 1 0.181369565807185
220 0 1 0 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 1 1 1 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 1 1 1 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 1 1 1 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 1 1 1 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 0 1 0 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 0 1 0 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
12
## name
robot-at(x366, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(52)) and($a(2) $s(52)) and($a(0) $s(52)) and($a(3) $s(52))) : $c(0)) (or(and($a(1) $s(24)) and($a(2) $s(25)) and($a(0) $s(51)) and($a(3) $s(53))) : Bernoulli($c(0.12892973878862))) ($c(1) : $s(52)) )
## determinized formula
switch( (or($s(27) and($a(1) $s(52)) and($a(2) $s(52)) and($a(0) $s(52)) and($a(3) $s(52))) : $c(0)) (or(and($a(1) $s(24)) and($a(2) $s(25)) and($a(0) $s(51)) and($a(3) $s(53))) : $c(0)) ($c(1) : $s(52)) )
## hash index
52
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 2 0 0.87107026121138 1 0.12892973878862
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 2 0 0.87107026121138 1 0.12892973878862
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 2 0 0.87107026121138 1 0.12892973878862
18 0 2 0 0.87107026121138 1 0.12892973878862
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 2 0 0.87107026121138 1 0.12892973878862
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 2 0 0.87107026121138 1 0.12892973878862
49 0 2 0 0.87107026121138 1 0.12892973878862
50 0 1 0 1
51 0 1 0 1
52 0 2 0 0.87107026121138 1 0.12892973878862
53 0 1 0 1
54 0 2 0 0.87107026121138 1 0.12892973878862
55 0 1 0 1
56 0 1 0 1
57 0 2 0 0.87107026121138 1 0.12892973878862
58 0 2 0 0.87107026121138 1 0.12892973878862
59 0 2 0 0.87107026121138 1 0.12892973878862
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 1 1 1 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 1 1 1 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 1 1 1 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 1 1 1 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.87107026121138 1 0.12892973878862
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 2 0 0.87107026121138 1 0.12892973878862
167 0 1 0 1
168 0 2 0 0.87107026121138 1 0.12892973878862
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.87107026121138 1 0.12892973878862
172 0 2 0 0.87107026121138 1 0.12892973878862
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 2 0 0.87107026121138 1 0.12892973878862
177 0 2 0 0.87107026121138 1 0.12892973878862
178 0 2 0 0.87107026121138 1 0.12892973878862
179 0 1 0 1
180 0 1 0 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 2 0 0.87107026121138 1 0.12892973878862
202 0 1 0 1
203 0 1 0 1
204 0 2 0 0.87107026121138 1 0.12892973878862
205 0 1 0 1
206 0 2 0 0.87107026121138 1 0.12892973878862
207 0 1 0 1
208 0 2 0 0.87107026121138 1 0.12892973878862
209 0 2 0 0.87107026121138 1 0.12892973878862
210 0 1 0 1
211 0 2 0 0.87107026121138 1 0.12892973878862
212 0 2 0 0.87107026121138 1 0.12892973878862
213 0 1 0 1
214 0 2 0 0.87107026121138 1 0.12892973878862
215 0 1 0 1
216 0 2 0 0.87107026121138 1 0.12892973878862
217 0 2 0 0.87107026121138 1 0.12892973878862
218 0 2 0 0.87107026121138 1 0.12892973878862
219 0 2 0 0.87107026121138 1 0.12892973878862
220 0 1 0 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 1 1 1 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 1 1 1 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 1 1 1 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 1 1 1 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 0 1 0 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 0 1 0 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
13
## name
robot-at(x405, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(53)) and($a(2) $s(53)) and($a(3) $s(53))) : $c(0)) (or(and($a(1) $s(26)) and($a(2) $s(27)) and($a(0) $s(52))) : Bernoulli($c(0.05536517020511))) ($c(1) : $s(53)) )
## determinized formula
switch( (or($s(27) and($a(1) $s(53)) and($a(2) $s(53)) and($a(3) $s(53))) : $c(0)) (or(and($a(1) $s(26)) and($a(2) $s(27)) and($a(0) $s(52))) : $c(0)) ($c(1) : $s(53)) )
## hash index
53
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
80
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 2 0 0.94463482979489 1 0.05536517020511
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 2 0 0.94463482979489 1 0.05536517020511
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 2 0 0.94463482979489 1 0.05536517020511
29 0 2 0 0.94463482979489 1 0.05536517020511
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 1 1 1 1
45 1 1 1 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 1 1 1 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 2 0 0.94463482979489 1 0.05536517020511
65 1 1 1 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 2 0 0.94463482979489 1 0.05536517020511
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
14
## name
robot-at(x41, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(54)) and($a(2) $s(54)) and($a(0) $s(54)) and($a(3) $s(54))) : $c(0)) (or(and($a(1) $s(28)) and($a(2) $s(29)) and($a(0) $s(50)) and($a(3) $s(55))) : Bernoulli($c(0.742453025555924))) ($c(1) : $s(54)) )
## determinized formula
switch( (or($s(27) and($a(1) $s(54)) and($a(2) $s(54)) and($a(0) $s(54)) and($a(3) $s(54))) : $c(0)) (or(and($a(1) $s(28)) and($a(2) $s(29)) and($a(0) $s(50)) and($a(3) $s(55))) : $c(1)) ($c(1) : $s(54)) )
## hash index
54
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.257546974444076 1 0.742453025555924
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 1 2 0 0.257546974444076 1 0.742453025555924
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 1 2 0 0.257546974444076 1 0.742453025555924
33 1 2 0 0.257546974444076 1 0.742453025555924
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 1 2 0 0.257546974444076 1 0.742453025555924
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 1 2 0 0.257546974444076 1 0.742453025555924
54 1 2 0 0.257546974444076 1 0.742453025555924
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 1 2 0 0.257546974444076 1 0.742453025555924
63 0 1 0 1
64 1 2 0 0.257546974444076 1 0.742453025555924
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 1 2 0 0.257546974444076 1 0.742453025555924
73 1 2 0 0.257546974444076 1 0.742453025555924
74 1 2 0 0.257546974444076 1 0.742453025555924
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 1 2 0 0.257546974444076 1 0.742453025555924
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 1 2 0 0.257546974444076 1 0.742453025555924
172 0 1 0 1
173 1 2 0 0.257546974444076 1 0.742453025555924
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 1 2 0 0.257546974444076 1 0.742453025555924
182 1 2 0 0.257546974444076 1 0.742453025555924
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 1 2 0 0.257546974444076 1 0.742453025555924
192 1 2 0 0.257546974444076 1 0.742453025555924
193 1 2 0 0.257546974444076 1 0.742453025555924
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 1 2 0 0.257546974444076 1 0.742453025555924
202 0 1 0 1
203 0 1 0 1
204 1 2 0 0.257546974444076 1 0.742453025555924
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 1 2 0 0.257546974444076 1 0.742453025555924
212 0 1 0 1
213 1 2 0 0.257546974444076 1 0.742453025555924
214 1 2 0 0.257546974444076 1 0.742453025555924
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 1 2 0 0.257546974444076 1 0.742453025555924
222 1 2 0 0.257546974444076 1 0.742453025555924
223 0 1 0 1
224 1 2 0 0.257546974444076 1 0.742453025555924
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 1 2 0 0.257546974444076 1 0.742453025555924
232 1 2 0 0.257546974444076 1 0.742453025555924
233 1 2 0 0.257546974444076 1 0.742453025555924
234 1 2 0 0.257546974444076 1 0.742453025555924
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
15
## name
robot-at(x54, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(55)) and($a(2) $s(55)) and($a(0) $s(55)) and($a(3) $s(55))) : $c(0)) (or(and($a(1) $s(30)) and($a(2) $s(31)) and($a(0) $s(54)) and($a(3) $s(57))) : Bernoulli($c(0.699826093978788))) ($c(1) : $s(55)) )
## determinized formula
switch( (or($s(27) and($a(1) $s(55)) and($a(2) $s(55)) and($a(0) $s(55)) and($a(3) $s(55))) : $c(0)) (or(and($a(1) $s(30)) and($a(2) $s(31)) and($a(0) $s(54)) and($a(3) $s(57))) : $c(1)) ($c(1) : $s(55)) )
## hash index
55
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.300173906021212 1 0.699826093978788
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 1 2 0 0.300173906021212 1 0.699826093978788
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 1 2 0 0.300173906021212 1 0.699826093978788
33 1 2 0 0.300173906021212 1 0.699826093978788
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 1 2 0 0.300173906021212 1 0.699826093978788
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 1 2 0 0.300173906021212 1 0.699826093978788
54 1 2 0 0.300173906021212 1 0.699826093978788
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 1 2 0 0.300173906021212 1 0.699826093978788
63 0 1 0 1
64 1 2 0 0.300173906021212 1 0.699826093978788
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 1 2 0 0.300173906021212 1 0.699826093978788
73 1 2 0 0.300173906021212 1 0.699826093978788
74 1 2 0 0.300173906021212 1 0.699826093978788
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 1 2 0 0.300173906021212 1 0.699826093978788
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 1 2 0 0.300173906021212 1 0.699826093978788
172 0 1 0 1
173 1 2 0 0.300173906021212 1 0.699826093978788
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 1 2 0 0.300173906021212 1 0.699826093978788
182 1 2 0 0.300173906021212 1 0.699826093978788
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 1 2 0 0.300173906021212 1 0.699826093978788
192 1 2 0 0.300173906021212 1 0.699826093978788
193 1 2 0 0.300173906021212 1 0.699826093978788
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 1 2 0 0.300173906021212 1 0.699826093978788
202 0 1 0 1
203 0 1 0 1
204 1 2 0 0.300173906021212 1 0.699826093978788
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 1 2 0 0.300173906021212 1 0.699826093978788
212 0 1 0 1
213 1 2 0 0.300173906021212 1 0.699826093978788
214 1 2 0 0.300173906021212 1 0.699826093978788
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 1 2 0 0.300173906021212 1 0.699826093978788
222 1 2 0 0.300173906021212 1 0.699826093978788
223 0 1 0 1
224 1 2 0 0.300173906021212 1 0.699826093978788
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 1 2 0 0.300173906021212 1 0.699826093978788
232 1 2 0 0.300173906021212 1 0.699826093978788
233 1 2 0 0.300173906021212 1 0.699826093978788
234 1 2 0 0.300173906021212 1 0.699826093978788
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
16
## name
robot-at(x6, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(56)) and($a(2) $s(56)) and($a(0) $s(56))) : $c(0)) (or(and($a(1) $s(32)) and($a(2) $s(33)) and($a(3) $s(59))) : Bernoulli($c(0.979876174591482))) ($c(1) : $s(56)) )
## determinized formula
switch( (or($s(27) and($a(1) $s(56)) and($a(2) $s(56)) and($a(0) $s(56))) : $c(0)) (or(and($a(1) $s(32)) and($a(2) $s(33)) and($a(3) $s(59))) : $c(1)) ($c(1) : $s(56)) )
## hash index
56
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
160
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.0201238254085183 1 0.979876174591482
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 1 2 0 0.0201238254085183 1 0.979876174591482
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 1 2 0 0.0201238254085183 1 0.979876174591482
33 1 2 0 0.0201238254085183 1 0.979876174591482
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 1 1 1 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 1 1 1 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 1 1 1 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 1 1 1 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 1 2 0 0.0201238254085183 1 0.979876174591482
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 1 2 0 0.0201238254085183 1 0.979876174591482
92 0 1 0 1
93 1 2 0 0.0201238254085183 1 0.979876174591482
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 1 2 0 0.0201238254085183 1 0.979876174591482
102 1 2 0 0.0201238254085183 1 0.979876174591482
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 1 2 0 0.0201238254085183 1 0.979876174591482
112 1 2 0 0.0201238254085183 1 0.979876174591482
113 1 2 0 0.0201238254085183 1 0.979876174591482
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 1 2 0 0.0201238254085183 1 0.979876174591482
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 1 2 0 0.0201238254085183 1 0.979876174591482
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 1 2 0 0.0201238254085183 1 0.979876174591482
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 1 2 0 0.0201238254085183 1 0.979876174591482
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
17
## name
robot-at(x69, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(57)) and($a(2) $s(57)) and($a(0) $s(57)) and($a(3) $s(57))) : $c(0)) (or(and($a(1) $s(34)) and($a(2) $s(35)) and($a(0) $s(55)) and($a(3) $s(58))) : Bernoulli($c(0.629675863702831))) ($c(1) : $s(57)) )
## determinized formula
switch( (or($s(27) and($a(1) $s(57)) and($a(2) $s(57)) and($a(0) $s(57)) and($a(3) $s(57))) : $c(0)) (or(and($a(1) $s(34)) and($a(2) $s(35)) and($a(0) $s(55)) and($a(3) $s(58))) : $c(1)) ($c(1) : $s(57)) )
## hash index
57
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.370324136297169 1 0.629675863702831
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 1 2 0 0.370324136297169 1 0.629675863702831
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 1 2 0 0.370324136297169 1 0.629675863702831
33 1 2 0 0.370324136297169 1 0.629675863702831
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 1 2 0 0.370324136297169 1 0.629675863702831
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 1 2 0 0.370324136297169 1 0.629675863702831
54 1 2 0 0.370324136297169 1 0.629675863702831
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 1 2 0 0.370324136297169 1 0.629675863702831
63 0 1 0 1
64 1 2 0 0.370324136297169 1 0.629675863702831
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 1 2 0 0.370324136297169 1 0.629675863702831
73 1 2 0 0.370324136297169 1 0.629675863702831
74 1 2 0 0.370324136297169 1 0.629675863702831
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 1 2 0 0.370324136297169 1 0.629675863702831
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 1 2 0 0.370324136297169 1 0.629675863702831
172 0 1 0 1
173 1 2 0 0.370324136297169 1 0.629675863702831
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 1 2 0 0.370324136297169 1 0.629675863702831
182 1 2 0 0.370324136297169 1 0.629675863702831
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 1 2 0 0.370324136297169 1 0.629675863702831
192 1 2 0 0.370324136297169 1 0.629675863702831
193 1 2 0 0.370324136297169 1 0.629675863702831
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 1 2 0 0.370324136297169 1 0.629675863702831
202 0 1 0 1
203 0 1 0 1
204 1 2 0 0.370324136297169 1 0.629675863702831
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 1 2 0 0.370324136297169 1 0.629675863702831
212 0 1 0 1
213 1 2 0 0.370324136297169 1 0.629675863702831
214 1 2 0 0.370324136297169 1 0.629675863702831
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 1 2 0 0.370324136297169 1 0.629675863702831
222 1 2 0 0.370324136297169 1 0.629675863702831
223 0 1 0 1
224 1 2 0 0.370324136297169 1 0.629675863702831
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 1 2 0 0.370324136297169 1 0.629675863702831
232 1 2 0 0.370324136297169 1 0.629675863702831
233 1 2 0 0.370324136297169 1 0.629675863702831
234 1 2 0 0.370324136297169 1 0.629675863702831
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
18
## name
robot-at(x86, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(58)) and($a(2) $s(58)) and($a(0) $s(58)) and($a(3) $s(58))) : $c(0)) (or(and($a(1) $s(36)) and($a(2) $s(37)) and($a(0) $s(57)) and($a(3) $s(40))) : Bernoulli($c(0.599831176186471))) ($c(1) : $s(58)) )
## determinized formula
switch( (or($s(27) and($a(1) $s(58)) and($a(2) $s(58)) and($a(0) $s(58)) and($a(3) $s(58))) : $c(0)) (or(and($a(1) $s(36)) and($a(2) $s(37)) and($a(0) $s(57)) and($a(3) $s(40))) : $c(1)) ($c(1) : $s(58)) )
## hash index
58
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.400168823813529 1 0.599831176186471
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 1 2 0 0.400168823813529 1 0.599831176186471
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 1 2 0 0.400168823813529 1 0.599831176186471
33 1 2 0 0.400168823813529 1 0.599831176186471
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 1 2 0 0.400168823813529 1 0.599831176186471
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 1 2 0 0.400168823813529 1 0.599831176186471
52 0 1 0 1
53 1 2 0 0.400168823813529 1 0.599831176186471
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 1 2 0 0.400168823813529 1 0.599831176186471
62 1 2 0 0.400168823813529 1 0.599831176186471
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 1 2 0 0.400168823813529 1 0.599831176186471
72 1 2 0 0.400168823813529 1 0.599831176186471
73 1 2 0 0.400168823813529 1 0.599831176186471
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 1 2 0 0.400168823813529 1 0.599831176186471
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 1 0 1
93 1 2 0 0.400168823813529 1 0.599831176186471
94 1 2 0 0.400168823813529 1 0.599831176186471
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 1 2 0 0.400168823813529 1 0.599831176186471
103 0 1 0 1
104 1 2 0 0.400168823813529 1 0.599831176186471
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 1 2 0 0.400168823813529 1 0.599831176186471
113 1 2 0 0.400168823813529 1 0.599831176186471
114 1 2 0 0.400168823813529 1 0.599831176186471
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 1 2 0 0.400168823813529 1 0.599831176186471
122 0 1 0 1
123 0 1 0 1
124 1 2 0 0.400168823813529 1 0.599831176186471
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 1 2 0 0.400168823813529 1 0.599831176186471
132 0 1 0 1
133 1 2 0 0.400168823813529 1 0.599831176186471
134 1 2 0 0.400168823813529 1 0.599831176186471
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 1 2 0 0.400168823813529 1 0.599831176186471
142 1 2 0 0.400168823813529 1 0.599831176186471
143 0 1 0 1
144 1 2 0 0.400168823813529 1 0.599831176186471
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 1 2 0 0.400168823813529 1 0.599831176186471
152 1 2 0 0.400168823813529 1 0.599831176186471
153 1 2 0 0.400168823813529 1 0.599831176186471
154 1 2 0 0.400168823813529 1 0.599831176186471
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 1 1 1 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 1 1 1 1
171 0 1 0 1
172 0 1 0 1
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 1 1 1 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 1 1 1 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
19
## name
robot-at(x9, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(59)) and($a(2) $s(59)) and($a(0) $s(59)) and($a(3) $s(59))) : $c(0)) (or(and($a(1) $s(38)) and($a(2) $s(39)) and($a(0) $s(56)) and($a(3) $s(42))) : Bernoulli($c(0.910410859180908))) ($c(1) : $s(59)) )
## determinized formula
switch( (or($s(27) and($a(1) $s(59)) and($a(2) $s(59)) and($a(0) $s(59)) and($a(3) $s(59))) : $c(0)) (or(and($a(1) $s(38)) and($a(2) $s(39)) and($a(0) $s(56)) and($a(3) $s(42))) : $c(1)) ($c(1) : $s(59)) )
## hash index
59
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.0895891408190915 1 0.910410859180908
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 1 2 0 0.0895891408190915 1 0.910410859180908
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 1 2 0 0.0895891408190915 1 0.910410859180908
33 1 2 0 0.0895891408190915 1 0.910410859180908
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 1 2 0 0.0895891408190915 1 0.910410859180908
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 1 2 0 0.0895891408190915 1 0.910410859180908
52 0 1 0 1
53 1 2 0 0.0895891408190915 1 0.910410859180908
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 1 2 0 0.0895891408190915 1 0.910410859180908
62 1 2 0 0.0895891408190915 1 0.910410859180908
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 1 2 0 0.0895891408190915 1 0.910410859180908
72 1 2 0 0.0895891408190915 1 0.910410859180908
73 1 2 0 0.0895891408190915 1 0.910410859180908
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 1 2 0 0.0895891408190915 1 0.910410859180908
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 1 0 1
93 1 2 0 0.0895891408190915 1 0.910410859180908
94 1 2 0 0.0895891408190915 1 0.910410859180908
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 1 2 0 0.0895891408190915 1 0.910410859180908
103 0 1 0 1
104 1 2 0 0.0895891408190915 1 0.910410859180908
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 1 2 0 0.0895891408190915 1 0.910410859180908
113 1 2 0 0.0895891408190915 1 0.910410859180908
114 1 2 0 0.0895891408190915 1 0.910410859180908
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 1 2 0 0.0895891408190915 1 0.910410859180908
122 0 1 0 1
123 0 1 0 1
124 1 2 0 0.0895891408190915 1 0.910410859180908
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 1 2 0 0.0895891408190915 1 0.910410859180908
132 0 1 0 1
133 1 2 0 0.0895891408190915 1 0.910410859180908
134 1 2 0 0.0895891408190915 1 0.910410859180908
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 1 2 0 0.0895891408190915 1 0.910410859180908
142 1 2 0 0.0895891408190915 1 0.910410859180908
143 0 1 0 1
144 1 2 0 0.0895891408190915 1 0.910410859180908
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 1 2 0 0.0895891408190915 1 0.910410859180908
152 1 2 0 0.0895891408190915 1 0.910410859180908
153 1 2 0 0.0895891408190915 1 0.910410859180908
154 1 2 0 0.0895891408190915 1 0.910410859180908
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 1 1 1 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 1 1 1 1
171 0 1 0 1
172 0 1 0 1
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 1 1 1 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 1 1 1 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####REWARD#####
## formula
-($c(0) ~($s(27)))
## min
-1
## max
0
## independent from actions
1
## hash index
60
## caching type
VECTOR
## precomputed results
2
0 -1
1 0
## kleene caching type
VECTOR
## kleene caching vec size
3
## action hash keys
0 0
1 0
2 0
3 0
4 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 1 0 0 
## relevant preconditions
0


## index
4
## state
1 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## state fluent hash keys (first line is the number of keys)
4
0 5
2 5
36 5
40 5
## kleene state fluent hash keys (first line is the number of keys)
4
0 5
2 5
36 5
40 5

## index
1
## state hash key (for each value in the domain)
0 2
## state fluent hash keys (first line is the number of keys)
4
1 5
3 5
37 5
40 10
## kleene state fluent hash keys (first line is the number of keys)
4
1 5
3 5
37 5
40 15

## index
2
## state hash key (for each value in the domain)
0 4
## state fluent hash keys (first line is the number of keys)
4
0 10
2 10
6 5
41 5
## kleene state fluent hash keys (first line is the number of keys)
4
0 15
2 15
6 5
41 5

## index
3
## state hash key (for each value in the domain)
0 8
## state fluent hash keys (first line is the number of keys)
4
1 10
3 10
7 5
41 10
## kleene state fluent hash keys (first line is the number of keys)
4
1 15
3 15
7 5
41 15

## index
4
## state hash key (for each value in the domain)
0 16
## state fluent hash keys (first line is the number of keys)
4
4 5
12 5
38 5
42 5
## kleene state fluent hash keys (first line is the number of keys)
4
4 5
12 5
38 5
42 5

## index
5
## state hash key (for each value in the domain)
0 32
## state fluent hash keys (first line is the number of keys)
4
5 5
13 5
39 5
42 10
## kleene state fluent hash keys (first line is the number of keys)
4
5 5
13 5
39 5
42 15

## index
6
## state hash key (for each value in the domain)
0 64
## state fluent hash keys (first line is the number of keys)
4
2 20
6 10
8 5
43 5
## kleene state fluent hash keys (first line is the number of keys)
4
2 45
6 15
8 5
43 5

## index
7
## state hash key (for each value in the domain)
0 128
## state fluent hash keys (first line is the number of keys)
4
3 20
7 10
9 5
43 10
## kleene state fluent hash keys (first line is the number of keys)
4
3 45
7 15
9 5
43 15

## index
8
## state hash key (for each value in the domain)
0 256
## state fluent hash keys (first line is the number of keys)
4
6 20
8 10
10 5
44 5
## kleene state fluent hash keys (first line is the number of keys)
4
6 45
8 15
10 5
44 5

## index
9
## state hash key (for each value in the domain)
0 512
## state fluent hash keys (first line is the number of keys)
4
7 20
9 10
11 5
44 10
## kleene state fluent hash keys (first line is the number of keys)
4
7 45
9 15
11 5
44 15

## index
10
## state hash key (for each value in the domain)
0 1024
## state fluent hash keys (first line is the number of keys)
4
8 20
10 10
14 5
45 5
## kleene state fluent hash keys (first line is the number of keys)
4
8 45
10 15
14 5
45 5

## index
11
## state hash key (for each value in the domain)
0 2048
## state fluent hash keys (first line is the number of keys)
4
9 20
11 10
15 5
45 10
## kleene state fluent hash keys (first line is the number of keys)
4
9 45
11 15
15 5
45 15

## index
12
## state hash key (for each value in the domain)
0 4096
## state fluent hash keys (first line is the number of keys)
4
4 10
12 10
20 5
46 5
## kleene state fluent hash keys (first line is the number of keys)
4
4 15
12 15
20 5
46 5

## index
13
## state hash key (for each value in the domain)
0 8192
## state fluent hash keys (first line is the number of keys)
4
5 10
13 10
21 5
46 10
## kleene state fluent hash keys (first line is the number of keys)
4
5 15
13 15
21 5
46 15

## index
14
## state hash key (for each value in the domain)
0 16384
## state fluent hash keys (first line is the number of keys)
4
10 20
14 10
16 5
47 5
## kleene state fluent hash keys (first line is the number of keys)
4
10 45
14 15
16 5
47 5

## index
15
## state hash key (for each value in the domain)
0 32768
## state fluent hash keys (first line is the number of keys)
4
11 20
15 10
17 5
47 10
## kleene state fluent hash keys (first line is the number of keys)
4
11 45
15 15
17 5
47 15

## index
16
## state hash key (for each value in the domain)
0 65536
## state fluent hash keys (first line is the number of keys)
4
14 20
16 10
18 5
48 5
## kleene state fluent hash keys (first line is the number of keys)
4
14 45
16 15
18 5
48 5

## index
17
## state hash key (for each value in the domain)
0 131072
## state fluent hash keys (first line is the number of keys)
4
15 20
17 10
19 5
48 10
## kleene state fluent hash keys (first line is the number of keys)
4
15 45
17 15
19 5
48 15

## index
18
## state hash key (for each value in the domain)
0 262144
## state fluent hash keys (first line is the number of keys)
4
16 20
18 10
22 5
49 5
## kleene state fluent hash keys (first line is the number of keys)
4
16 45
18 15
22 5
49 5

## index
19
## state hash key (for each value in the domain)
0 524288
## state fluent hash keys (first line is the number of keys)
4
17 20
19 10
23 5
49 10
## kleene state fluent hash keys (first line is the number of keys)
4
17 45
19 15
23 5
49 15

## index
20
## state hash key (for each value in the domain)
0 1048576
## state fluent hash keys (first line is the number of keys)
4
12 20
20 10
28 5
50 5
## kleene state fluent hash keys (first line is the number of keys)
4
12 45
20 15
28 5
50 5

## index
21
## state hash key (for each value in the domain)
0 2097152
## state fluent hash keys (first line is the number of keys)
4
13 20
21 10
29 5
50 10
## kleene state fluent hash keys (first line is the number of keys)
4
13 45
21 15
29 5
50 15

## index
22
## state hash key (for each value in the domain)
0 4194304
## state fluent hash keys (first line is the number of keys)
4
18 20
22 10
24 5
51 5
## kleene state fluent hash keys (first line is the number of keys)
4
18 45
22 15
24 5
51 5

## index
23
## state hash key (for each value in the domain)
0 8388608
## state fluent hash keys (first line is the number of keys)
4
19 20
23 10
25 5
51 10
## kleene state fluent hash keys (first line is the number of keys)
4
19 45
23 15
25 5
51 15

## index
24
## state hash key (for each value in the domain)
0 16777216
## state fluent hash keys (first line is the number of keys)
4
22 20
24 10
26 5
52 5
## kleene state fluent hash keys (first line is the number of keys)
4
22 45
24 15
26 5
52 5

## index
25
## state hash key (for each value in the domain)
0 33554432
## state fluent hash keys (first line is the number of keys)
4
23 20
25 10
27 5
52 10
## kleene state fluent hash keys (first line is the number of keys)
4
23 45
25 15
27 5
52 15

## index
26
## state hash key (for each value in the domain)
0 67108864
## state fluent hash keys (first line is the number of keys)
3
24 20
26 10
53 5
## kleene state fluent hash keys (first line is the number of keys)
3
24 45
26 15
53 5

## index
27
## state hash key (for each value in the domain)
0 134217728
## state fluent hash keys (first line is the number of keys)
61
0 20
1 20
2 40
3 40
4 20
5 20
6 40
7 40
8 40
9 40
10 40
11 40
12 40
13 40
14 40
15 40
16 40
17 40
18 40
19 40
20 20
21 20
22 40
23 40
24 40
25 20
26 20
27 10
28 10
29 10
30 5
31 5
32 5
33 5
34 5
35 5
36 10
37 10
38 10
39 10
40 20
41 20
42 20
43 20
44 20
45 20
46 20
47 20
48 20
49 20
50 20
51 20
52 20
53 10
54 5
55 5
56 5
57 5
58 5
59 5
60 1
## kleene state fluent hash keys (first line is the number of keys)
61
0 45
1 45
2 135
3 135
4 45
5 45
6 135
7 135
8 135
9 135
10 135
11 135
12 135
13 135
14 135
15 135
16 135
17 135
18 135
19 135
20 45
21 45
22 135
23 135
24 135
25 45
26 45
27 15
28 15
29 15
30 5
31 5
32 5
33 5
34 5
35 5
36 15
37 15
38 15
39 15
40 45
41 45
42 45
43 45
44 45
45 45
46 45
47 45
48 45
49 45
50 45
51 45
52 45
53 15
54 5
55 5
56 5
57 5
58 5
59 5
60 1

## index
28
## state hash key (for each value in the domain)
0 268435456
## state fluent hash keys (first line is the number of keys)
4
20 40
28 20
30 10
54 10
## kleene state fluent hash keys (first line is the number of keys)
4
20 135
28 45
30 15
54 15

## index
29
## state hash key (for each value in the domain)
0 536870912
## state fluent hash keys (first line is the number of keys)
4
21 40
29 20
31 10
54 20
## kleene state fluent hash keys (first line is the number of keys)
4
21 135
29 45
31 15
54 45

## index
30
## state hash key (for each value in the domain)
0 1073741824
## state fluent hash keys (first line is the number of keys)
4
28 40
30 20
34 10
55 10
## kleene state fluent hash keys (first line is the number of keys)
4
28 135
30 45
34 15
55 15

## index
31
## state hash key (for each value in the domain)
0 2147483648
## state fluent hash keys (first line is the number of keys)
4
29 40
31 20
35 10
55 20
## kleene state fluent hash keys (first line is the number of keys)
4
29 135
31 45
35 15
55 45

## index
32
## state hash key (for each value in the domain)
0 4294967296
## state fluent hash keys (first line is the number of keys)
3
32 10
38 20
56 10
## kleene state fluent hash keys (first line is the number of keys)
3
32 15
38 45
56 15

## index
33
## state hash key (for each value in the domain)
0 8589934592
## state fluent hash keys (first line is the number of keys)
3
33 10
39 20
56 20
## kleene state fluent hash keys (first line is the number of keys)
3
33 15
39 45
56 45

## index
34
## state hash key (for each value in the domain)
0 17179869184
## state fluent hash keys (first line is the number of keys)
4
30 40
34 20
36 20
57 10
## kleene state fluent hash keys (first line is the number of keys)
4
30 135
34 45
36 45
57 15

## index
35
## state hash key (for each value in the domain)
0 34359738368
## state fluent hash keys (first line is the number of keys)
4
31 40
35 20
37 20
57 20
## kleene state fluent hash keys (first line is the number of keys)
4
31 135
35 45
37 45
57 45

## index
36
## state hash key (for each value in the domain)
0 68719476736
## state fluent hash keys (first line is the number of keys)
4
0 40
34 40
36 40
58 10
## kleene state fluent hash keys (first line is the number of keys)
4
0 135
34 135
36 135
58 15

## index
37
## state hash key (for each value in the domain)
0 137438953472
## state fluent hash keys (first line is the number of keys)
4
1 40
35 40
37 40
58 20
## kleene state fluent hash keys (first line is the number of keys)
4
1 135
35 135
37 135
58 45

## index
38
## state hash key (for each value in the domain)
0 274877906944
## state fluent hash keys (first line is the number of keys)
4
4 40
32 20
38 40
59 10
## kleene state fluent hash keys (first line is the number of keys)
4
4 135
32 45
38 135
59 15

## index
39
## state hash key (for each value in the domain)
0 549755813888
## state fluent hash keys (first line is the number of keys)
4
5 40
33 20
39 40
59 20
## kleene state fluent hash keys (first line is the number of keys)
4
5 135
33 45
39 135
59 45


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1099511627776
## state fluent hash keys (first line is the number of keys)
5
0 80
1 80
40 40
41 40
58 40
## kleene state fluent hash keys (first line is the number of keys)
5
0 405
1 405
40 135
41 135
58 135

## index
1
## state hash key (for each value in the domain)
0 2199023255552
## state fluent hash keys (first line is the number of keys)
5
2 80
3 80
40 80
41 80
43 40
## kleene state fluent hash keys (first line is the number of keys)
5
2 405
3 405
40 405
41 405
43 135

## index
2
## state hash key (for each value in the domain)
0 4398046511104
## state fluent hash keys (first line is the number of keys)
5
4 80
5 80
42 40
46 40
59 40
## kleene state fluent hash keys (first line is the number of keys)
5
4 405
5 405
42 135
46 135
59 135

## index
3
## state hash key (for each value in the domain)
0 8796093022208
## state fluent hash keys (first line is the number of keys)
5
6 80
7 80
41 160
43 80
44 40
## kleene state fluent hash keys (first line is the number of keys)
5
6 405
7 405
41 1215
43 405
44 135

## index
4
## state hash key (for each value in the domain)
0 17592186044416
## state fluent hash keys (first line is the number of keys)
5
8 80
9 80
43 160
44 80
45 40
## kleene state fluent hash keys (first line is the number of keys)
5
8 405
9 405
43 1215
44 405
45 135

## index
5
## state hash key (for each value in the domain)
0 35184372088832
## state fluent hash keys (first line is the number of keys)
5
10 80
11 80
44 160
45 80
47 40
## kleene state fluent hash keys (first line is the number of keys)
5
10 405
11 405
44 1215
45 405
47 135

## index
6
## state hash key (for each value in the domain)
0 70368744177664
## state fluent hash keys (first line is the number of keys)
5
12 80
13 80
42 80
46 80
50 40
## kleene state fluent hash keys (first line is the number of keys)
5
12 405
13 405
42 405
46 405
50 135

## index
7
## state hash key (for each value in the domain)
0 140737488355328
## state fluent hash keys (first line is the number of keys)
5
14 80
15 80
45 160
47 80
48 40
## kleene state fluent hash keys (first line is the number of keys)
5
14 405
15 405
45 1215
47 405
48 135

## index
8
## state hash key (for each value in the domain)
0 281474976710656
## state fluent hash keys (first line is the number of keys)
5
16 80
17 80
47 160
48 80
49 40
## kleene state fluent hash keys (first line is the number of keys)
5
16 405
17 405
47 1215
48 405
49 135

## index
9
## state hash key (for each value in the domain)
0 562949953421312
## state fluent hash keys (first line is the number of keys)
5
18 80
19 80
48 160
49 80
51 40
## kleene state fluent hash keys (first line is the number of keys)
5
18 405
19 405
48 1215
49 405
51 135

## index
10
## state hash key (for each value in the domain)
0 1125899906842624
## state fluent hash keys (first line is the number of keys)
5
20 80
21 80
46 160
50 80
54 40
## kleene state fluent hash keys (first line is the number of keys)
5
20 405
21 405
46 1215
50 405
54 135

## index
11
## state hash key (for each value in the domain)
0 2251799813685248
## state fluent hash keys (first line is the number of keys)
5
22 80
23 80
49 160
51 80
52 40
## kleene state fluent hash keys (first line is the number of keys)
5
22 405
23 405
49 1215
51 405
52 135

## index
12
## state hash key (for each value in the domain)
0 4503599627370496
## state fluent hash keys (first line is the number of keys)
5
24 80
25 40
51 160
52 80
53 20
## kleene state fluent hash keys (first line is the number of keys)
5
24 405
25 135
51 1215
52 405
53 45

## index
13
## state hash key (for each value in the domain)
0 9007199254740992
## state fluent hash keys (first line is the number of keys)
4
26 40
27 20
52 160
53 40
## kleene state fluent hash keys (first line is the number of keys)
4
26 135
27 45
52 1215
53 135

## index
14
## state hash key (for each value in the domain)
0 18014398509481984
## state fluent hash keys (first line is the number of keys)
5
28 80
29 80
50 160
54 80
55 40
## kleene state fluent hash keys (first line is the number of keys)
5
28 405
29 405
50 1215
54 405
55 135

## index
15
## state hash key (for each value in the domain)
0 36028797018963968
## state fluent hash keys (first line is the number of keys)
5
30 80
31 80
54 160
55 80
57 40
## kleene state fluent hash keys (first line is the number of keys)
5
30 405
31 405
54 1215
55 405
57 135

## index
16
## state hash key (for each value in the domain)
0 72057594037927936
## state fluent hash keys (first line is the number of keys)
4
32 40
33 40
56 40
59 80
## kleene state fluent hash keys (first line is the number of keys)
4
32 135
33 135
56 135
59 405

## index
17
## state hash key (for each value in the domain)
0 144115188075855872
## state fluent hash keys (first line is the number of keys)
5
34 80
35 80
55 160
57 80
58 80
## kleene state fluent hash keys (first line is the number of keys)
5
34 405
35 405
55 1215
57 405
58 405

## index
18
## state hash key (for each value in the domain)
0 288230376151711744
## state fluent hash keys (first line is the number of keys)
5
36 80
37 80
40 160
57 160
58 160
## kleene state fluent hash keys (first line is the number of keys)
5
36 405
37 405
40 1215
57 1215
58 1215

## index
19
## state hash key (for each value in the domain)
0 576460752303423488
## state fluent hash keys (first line is the number of keys)
5
38 80
39 80
42 160
56 80
59 160
## kleene state fluent hash keys (first line is the number of keys)
5
38 405
39 405
42 1215
56 405
59 1215



#####TRAINING SET#####
8
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
