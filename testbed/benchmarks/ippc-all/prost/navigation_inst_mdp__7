#####TASK#####
## name
navigation_inst_mdp__7
## horizon
40
## discount factor
1
## number of action fluents
4
## number of det state fluents
20
## number of prob state fluents
30
## number of preconds
0
## number of actions
5
## number of hashing functions
51
## initial state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
0
## method to calculate the final reward
NOOP
## 1 if reward formula allows reward lock detection and a reward lock was found during task analysis
1
## 1 if an unreasonable action was detected
1
## 1 if an unreasonable action was detected in the determinization
1
## number of states that were encountered during task analysis
3754
## number of unique states that were encountered during task analysis
14
## number of states with only one applicable reasonable action that were encountered during task analysis
3427
## number of unique states with only one applicable reasonable action that were encountered during task analysis
1


#####ACTION FLUENTS#####
## index
0
## name
move-east
## number of values
2
## values
0 false
1 true

## index
1
## name
move-north
## number of values
2
## values
0 false
1 true

## index
2
## name
move-south
## number of values
2
## values
0 false
1 true

## index
3
## name
move-west
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
robot-at(x105, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(0)) and($a(3) $s(0))) : $c(0)) (or(and($a(2) $s(20)) and($a(0) $s(16))) : $c(1)) ($c(1) : $s(0)) )
## hash index
0
## caching type 
VECTOR
## precomputed results
80
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 1
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 1
26 0
27 1
28 0
29 1
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 1
43 0
44 0
45 1
46 0
47 1
48 0
49 1
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 1
63 0
64 1
65 1
66 0
67 1
68 0
69 1
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
1
## name
robot-at(x105, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(1) : $c(1)) (or($s(1) and($a(2) $s(1)) and($a(3) $s(1))) : $c(0)) (or(and($a(1) $s(22)) and($a(0) $s(17))) : $c(1)) ($c(1) : $s(1)) )
## hash index
1
## caching type 
VECTOR
## precomputed results
40
0 0
1 0
2 0
3 0
4 0
5 1
6 1
7 1
8 1
9 1
10 0
11 0
12 0
13 0
14 1
15 1
16 1
17 1
18 1
19 1
20 0
21 0
22 0
23 1
24 0
25 1
26 1
27 1
28 1
29 1
30 0
31 0
32 0
33 1
34 1
35 1
36 1
37 1
38 1
39 1
## kleene caching type
VECTOR
## kleene caching vec size
135
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
2
## name
robot-at(x14, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(2)) and($a(0) $s(2)) and($a(3) $s(2))) : $c(0)) (or(and($a(2) $s(23)) and($a(0) $s(18)) and($a(3) $s(4))) : $c(1)) ($c(1) : $s(2)) )
## hash index
2
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 1
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 1
45 0
46 0
47 0
48 0
49 0
50 1
51 0
52 1
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 1
62 0
63 0
64 1
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 1
91 0
92 1
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 1
102 1
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 1
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 1
123 0
124 1
125 0
126 0
127 0
128 0
129 0
130 1
131 0
132 1
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 1
142 1
143 0
144 1
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 1
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
3
## name
robot-at(x14, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(2) $s(3)) and($a(0) $s(3)) and($a(3) $s(3))) : $c(0)) (or(and($a(1) $s(25)) and($a(0) $s(19)) and($a(3) $s(5))) : $c(1)) ($c(1) : $s(3)) )
## hash index
3
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 1
45 0
46 0
47 0
48 0
49 0
50 1
51 0
52 0
53 1
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 1
62 0
63 0
64 1
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 0
89 0
90 1
91 0
92 0
93 1
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 1
102 0
103 1
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 0
113 1
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 1
124 1
125 0
126 0
127 0
128 0
129 0
130 1
131 0
132 0
133 1
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 1
142 0
143 1
144 1
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 0
153 1
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
4
## name
robot-at(x21, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(4)) and($a(0) $s(4)) and($a(3) $s(4))) : $c(0)) (or(and($a(2) $s(26)) and($a(0) $s(2)) and($a(3) $s(6))) : $c(1)) ($c(1) : $s(4)) )
## hash index
4
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 1
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 1
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 1
93 0
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 1
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 1
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 1
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 1
133 0
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 1
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 1
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
5
## name
robot-at(x21, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(2) $s(5)) and($a(0) $s(5)) and($a(3) $s(5))) : $c(0)) (or(and($a(1) $s(28)) and($a(0) $s(3)) and($a(3) $s(7))) : $c(1)) ($c(1) : $s(5)) )
## hash index
5
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 1
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 0
103 1
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 0
113 1
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 0
123 1
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 0
133 1
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 0
143 1
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 0
153 1
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
6
## name
robot-at(x30, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(6)) and($a(0) $s(6)) and($a(3) $s(6))) : $c(0)) (or(and($a(2) $s(29)) and($a(0) $s(4)) and($a(3) $s(8))) : $c(1)) ($c(1) : $s(6)) )
## hash index
6
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 1
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 1
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 1
93 0
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 1
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 1
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 1
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 1
133 0
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 1
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 1
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
7
## name
robot-at(x30, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(2) $s(7)) and($a(0) $s(7)) and($a(3) $s(7))) : $c(0)) (or(and($a(1) $s(31)) and($a(0) $s(5)) and($a(3) $s(9))) : $c(1)) ($c(1) : $s(7)) )
## hash index
7
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 1
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 0
103 1
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 0
113 1
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 0
123 1
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 0
133 1
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 0
143 1
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 0
153 1
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
8
## name
robot-at(x41, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(8)) and($a(0) $s(8)) and($a(3) $s(8))) : $c(0)) (or(and($a(2) $s(32)) and($a(0) $s(6)) and($a(3) $s(10))) : $c(1)) ($c(1) : $s(8)) )
## hash index
8
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 1
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 1
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 1
93 0
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 1
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 1
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 1
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 1
133 0
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 1
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 1
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
9
## name
robot-at(x41, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(2) $s(9)) and($a(0) $s(9)) and($a(3) $s(9))) : $c(0)) (or(and($a(1) $s(34)) and($a(0) $s(7)) and($a(3) $s(11))) : $c(1)) ($c(1) : $s(9)) )
## hash index
9
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 1
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 0
103 1
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 0
113 1
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 0
123 1
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 0
133 1
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 0
143 1
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 0
153 1
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
10
## name
robot-at(x54, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(10)) and($a(0) $s(10)) and($a(3) $s(10))) : $c(0)) (or(and($a(2) $s(35)) and($a(0) $s(8)) and($a(3) $s(14))) : $c(1)) ($c(1) : $s(10)) )
## hash index
10
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 1
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 1
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 1
93 0
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 1
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 1
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 1
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 1
133 0
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 1
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 1
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
11
## name
robot-at(x54, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(2) $s(11)) and($a(0) $s(11)) and($a(3) $s(11))) : $c(0)) (or(and($a(1) $s(37)) and($a(0) $s(9)) and($a(3) $s(15))) : $c(1)) ($c(1) : $s(11)) )
## hash index
11
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 1
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 0
103 1
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 0
113 1
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 0
123 1
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 0
133 1
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 0
143 1
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 0
153 1
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
12
## name
robot-at(x6, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(12)) and($a(0) $s(12))) : $c(0)) (or(and($a(2) $s(38)) and($a(3) $s(18))) : $c(1)) ($c(1) : $s(12)) )
## hash index
12
## caching type 
VECTOR
## precomputed results
80
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 1
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 1
32 1
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 1
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 1
51 1
52 1
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 1
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 1
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
13
## name
robot-at(x6, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(2) $s(13)) and($a(0) $s(13))) : $c(0)) (or(and($a(1) $s(40)) and($a(3) $s(19))) : $c(1)) ($c(1) : $s(13)) )
## hash index
13
## caching type 
VECTOR
## precomputed results
80
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 1
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 1
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 1
44 0
45 0
46 0
47 0
48 0
49 0
50 1
51 1
52 0
53 1
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 1
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 1
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
14
## name
robot-at(x69, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(14)) and($a(0) $s(14)) and($a(3) $s(14))) : $c(0)) (or(and($a(2) $s(41)) and($a(0) $s(10)) and($a(3) $s(16))) : $c(1)) ($c(1) : $s(14)) )
## hash index
14
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 1
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 1
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 1
93 0
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 1
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 1
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 1
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 1
133 0
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 1
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 1
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
15
## name
robot-at(x69, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(2) $s(15)) and($a(0) $s(15)) and($a(3) $s(15))) : $c(0)) (or(and($a(1) $s(43)) and($a(0) $s(11)) and($a(3) $s(17))) : $c(1)) ($c(1) : $s(15)) )
## hash index
15
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 1
94 1
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 0
103 1
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 0
113 1
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 0
123 1
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 0
133 1
134 1
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 0
143 1
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 0
153 1
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
16
## name
robot-at(x86, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(16)) and($a(0) $s(16)) and($a(3) $s(16))) : $c(0)) (or(and($a(2) $s(44)) and($a(0) $s(14)) and($a(3) $s(0))) : $c(1)) ($c(1) : $s(16)) )
## hash index
16
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 0
26 1
27 0
28 0
29 1
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 1
41 0
42 1
43 0
44 0
45 1
46 0
47 1
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 1
63 0
64 0
65 1
66 0
67 1
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 1
87 1
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 1
103 0
104 1
105 0
106 1
107 1
108 0
109 1
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 1
121 0
122 1
123 0
124 0
125 1
126 0
127 1
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 1
143 0
144 0
145 1
146 0
147 1
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
17
## name
robot-at(x86, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(2) $s(17)) and($a(0) $s(17)) and($a(3) $s(17))) : $c(0)) (or(and($a(1) $s(46)) and($a(0) $s(15)) and($a(3) $s(1))) : $c(1)) ($c(1) : $s(17)) )
## hash index
17
## caching type 
VECTOR
## precomputed results
80
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 1
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 1
54 1
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
18
## name
robot-at(x9, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(18)) and($a(0) $s(18)) and($a(3) $s(18))) : $c(0)) (or(and($a(2) $s(47)) and($a(0) $s(12)) and($a(3) $s(2))) : $c(1)) ($c(1) : $s(18)) )
## hash index
18
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 0
26 0
27 0
28 0
29 0
30 0
31 1
32 0
33 0
34 1
35 0
36 0
37 0
38 0
39 0
40 1
41 0
42 1
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 1
51 0
52 1
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 1
92 1
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 1
103 0
104 1
105 0
106 0
107 0
108 0
109 0
110 0
111 1
112 1
113 0
114 1
115 0
116 0
117 0
118 0
119 0
120 1
121 0
122 1
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 1
131 0
132 1
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 1
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 1
153 0
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
19
## name
robot-at(x9, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(2) $s(19)) and($a(0) $s(19)) and($a(3) $s(19))) : $c(0)) (or(and($a(1) $s(49)) and($a(0) $s(13)) and($a(3) $s(3))) : $c(1)) ($c(1) : $s(19)) )
## hash index
19
## caching type 
VECTOR
## precomputed results
160
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 0
26 0
27 0
28 0
29 0
30 0
31 1
32 0
33 0
34 1
35 0
36 0
37 0
38 0
39 0
40 1
41 0
42 0
43 1
44 0
45 0
46 0
47 0
48 0
49 0
50 1
51 0
52 0
53 1
54 0
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 1
92 0
93 1
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 1
104 1
105 0
106 0
107 0
108 0
109 0
110 0
111 1
112 0
113 1
114 1
115 0
116 0
117 0
118 0
119 0
120 1
121 0
122 0
123 1
124 0
125 0
126 0
127 0
128 0
129 0
130 1
131 0
132 0
133 1
134 0
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 0
143 1
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 0
153 1
154 0
155 0
156 0
157 0
158 0
159 0
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
robot-at(x105, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(20)) and($a(2) $s(20)) and($a(3) $s(20))) : $c(0)) (or(and($a(1) $s(0)) and($a(2) $s(21)) and($a(0) $s(44))) : Bernoulli($c(0.073994571963946))) ($c(1) : $s(20)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(20)) and($a(2) $s(20)) and($a(3) $s(20))) : $c(0)) (or(and($a(1) $s(0)) and($a(2) $s(21)) and($a(0) $s(44))) : $c(0)) ($c(1) : $s(20)) )
## hash index
20
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
160
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 2 0 0.926005428036054 1 0.073994571963946
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 1 1 1 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 1 1 1 1
25 1 1 1 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 1 1 1 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 2 0 0.926005428036054 1 0.073994571963946
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 2 0 0.926005428036054 1 0.073994571963946
48 0 2 0 0.926005428036054 1 0.073994571963946
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 1 1 1 1
65 1 1 1 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 1 1 1 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 2 0 0.926005428036054 1 0.073994571963946
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 2 0 0.926005428036054 1 0.073994571963946
89 0 2 0 0.926005428036054 1 0.073994571963946
90 0 1 0 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 2 0 0.926005428036054 1 0.073994571963946
105 1 1 1 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 2 0 0.926005428036054 1 0.073994571963946
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 0 1 0 1
122 0 2 0 0.926005428036054 1 0.073994571963946
123 0 1 0 1
124 0 2 0 0.926005428036054 1 0.073994571963946
125 0 1 0 1
126 0 1 0 1
127 0 2 0 0.926005428036054 1 0.073994571963946
128 0 2 0 0.926005428036054 1 0.073994571963946
129 0 2 0 0.926005428036054 1 0.073994571963946
130 0 1 0 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 2 0 0.926005428036054 1 0.073994571963946
145 1 1 1 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 2 0 0.926005428036054 1 0.073994571963946
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
1
## name
robot-at(x105, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(21)) and($a(2) $s(21)) and($a(3) $s(21))) : $c(0)) (or(and($a(1) $s(20)) and($a(2) $s(22)) and($a(0) $s(45))) : Bernoulli($c(0.0600305857757727))) ($c(1) : $s(21)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(21)) and($a(2) $s(21)) and($a(3) $s(21))) : $c(0)) (or(and($a(1) $s(20)) and($a(2) $s(22)) and($a(0) $s(45))) : $c(0)) ($c(1) : $s(21)) )
## hash index
21
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
160
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 2 0 0.939969414224227 1 0.0600305857757727
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 1 1 1 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 1 1 1 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 1 1 1 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 1 1 1 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 2 0 0.939969414224227 1 0.0600305857757727
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 2 0 0.939969414224227 1 0.0600305857757727
53 0 2 0 0.939969414224227 1 0.0600305857757727
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 1 1 1 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 1 1 1 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 2 0 0.939969414224227 1 0.0600305857757727
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 1 0 1
93 0 2 0 0.939969414224227 1 0.0600305857757727
94 0 2 0 0.939969414224227 1 0.0600305857757727
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 2 0 0.939969414224227 1 0.0600305857757727
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 2 0 0.939969414224227 1 0.0600305857757727
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 0 1 0 1
122 0 2 0 0.939969414224227 1 0.0600305857757727
123 0 1 0 1
124 0 2 0 0.939969414224227 1 0.0600305857757727
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 0 1 0 1
132 0 2 0 0.939969414224227 1 0.0600305857757727
133 0 2 0 0.939969414224227 1 0.0600305857757727
134 0 2 0 0.939969414224227 1 0.0600305857757727
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 2 0 0.939969414224227 1 0.0600305857757727
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 2 0 0.939969414224227 1 0.0600305857757727
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
2
## name
robot-at(x105, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(22)) and($a(2) $s(22)) and($a(3) $s(22))) : $c(0)) (or(and($a(1) $s(21)) and($a(2) $s(1)) and($a(0) $s(46))) : Bernoulli($c(0.0613952695081631))) ($c(1) : $s(22)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(22)) and($a(2) $s(22)) and($a(3) $s(22))) : $c(0)) (or(and($a(1) $s(21)) and($a(2) $s(1)) and($a(0) $s(46))) : $c(0)) ($c(1) : $s(22)) )
## hash index
22
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
80
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 2 0 0.938604730491837 1 0.0613952695081631
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 1 1 1 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 1 1 1 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 1 1 1 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 1 1 1 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 2 0 0.938604730491837 1 0.0613952695081631
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 2 0 0.938604730491837 1 0.0613952695081631
54 0 2 0 0.938604730491837 1 0.0613952695081631
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 2 0 0.938604730491837 1 0.0613952695081631
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 2 0 0.938604730491837 1 0.0613952695081631
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
3
## name
robot-at(x14, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(23)) and($a(2) $s(23)) and($a(0) $s(23)) and($a(3) $s(23))) : $c(0)) (or(and($a(1) $s(2)) and($a(2) $s(24)) and($a(0) $s(47)) and($a(3) $s(26))) : Bernoulli($c(0.772604831390911))) ($c(1) : $s(23)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(23)) and($a(2) $s(23)) and($a(0) $s(23)) and($a(3) $s(23))) : $c(0)) (or(and($a(1) $s(2)) and($a(2) $s(24)) and($a(0) $s(47)) and($a(3) $s(26))) : $c(1)) ($c(1) : $s(23)) )
## hash index
23
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.227395168609089 1 0.772604831390911
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 1 1 1 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 1 1 1 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 1 2 0 0.227395168609089 1 0.772604831390911
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 1 2 0 0.227395168609089 1 0.772604831390911
53 1 2 0 0.227395168609089 1 0.772604831390911
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 1 2 0 0.227395168609089 1 0.772604831390911
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 1 2 0 0.227395168609089 1 0.772604831390911
92 0 1 0 1
93 1 2 0 0.227395168609089 1 0.772604831390911
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 1 2 0 0.227395168609089 1 0.772604831390911
122 1 2 0 0.227395168609089 1 0.772604831390911
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 1 2 0 0.227395168609089 1 0.772604831390911
132 1 2 0 0.227395168609089 1 0.772604831390911
133 1 2 0 0.227395168609089 1 0.772604831390911
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 1 2 0 0.227395168609089 1 0.772604831390911
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 1 0 1
172 0 1 0 1
173 1 2 0 0.227395168609089 1 0.772604831390911
174 1 2 0 0.227395168609089 1 0.772604831390911
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 1 1 1 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 1 1 1 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 1 0 1
202 1 2 0 0.227395168609089 1 0.772604831390911
203 0 1 0 1
204 1 2 0 0.227395168609089 1 0.772604831390911
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 1 0 1
212 1 2 0 0.227395168609089 1 0.772604831390911
213 1 2 0 0.227395168609089 1 0.772604831390911
214 1 2 0 0.227395168609089 1 0.772604831390911
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 1 2 0 0.227395168609089 1 0.772604831390911
242 0 1 0 1
243 0 1 0 1
244 1 2 0 0.227395168609089 1 0.772604831390911
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 1 2 0 0.227395168609089 1 0.772604831390911
252 0 1 0 1
253 1 2 0 0.227395168609089 1 0.772604831390911
254 1 2 0 0.227395168609089 1 0.772604831390911
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 0 1 0 1
281 1 2 0 0.227395168609089 1 0.772604831390911
282 1 2 0 0.227395168609089 1 0.772604831390911
283 0 1 0 1
284 1 2 0 0.227395168609089 1 0.772604831390911
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 0 1 0 1
291 1 2 0 0.227395168609089 1 0.772604831390911
292 1 2 0 0.227395168609089 1 0.772604831390911
293 1 2 0 0.227395168609089 1 0.772604831390911
294 1 2 0 0.227395168609089 1 0.772604831390911
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
4
## name
robot-at(x14, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(24)) and($a(2) $s(24)) and($a(0) $s(24)) and($a(3) $s(24))) : $c(0)) (or(and($a(1) $s(23)) and($a(2) $s(25)) and($a(0) $s(48)) and($a(3) $s(27))) : Bernoulli($c(0.788949288906426))) ($c(1) : $s(24)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(24)) and($a(2) $s(24)) and($a(0) $s(24)) and($a(3) $s(24))) : $c(0)) (or(and($a(1) $s(23)) and($a(2) $s(25)) and($a(0) $s(48)) and($a(3) $s(27))) : $c(1)) ($c(1) : $s(24)) )
## hash index
24
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.211050711093574 1 0.788949288906426
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 1 1 1 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 1 1 1 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 1 2 0 0.211050711093574 1 0.788949288906426
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 1 2 0 0.211050711093574 1 0.788949288906426
53 1 2 0 0.211050711093574 1 0.788949288906426
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 1 2 0 0.211050711093574 1 0.788949288906426
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 1 2 0 0.211050711093574 1 0.788949288906426
92 0 1 0 1
93 1 2 0 0.211050711093574 1 0.788949288906426
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 1 2 0 0.211050711093574 1 0.788949288906426
122 1 2 0 0.211050711093574 1 0.788949288906426
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 1 2 0 0.211050711093574 1 0.788949288906426
132 1 2 0 0.211050711093574 1 0.788949288906426
133 1 2 0 0.211050711093574 1 0.788949288906426
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 1 2 0 0.211050711093574 1 0.788949288906426
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 1 0 1
172 0 1 0 1
173 1 2 0 0.211050711093574 1 0.788949288906426
174 1 2 0 0.211050711093574 1 0.788949288906426
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 1 1 1 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 1 1 1 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 1 0 1
202 1 2 0 0.211050711093574 1 0.788949288906426
203 0 1 0 1
204 1 2 0 0.211050711093574 1 0.788949288906426
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 1 0 1
212 1 2 0 0.211050711093574 1 0.788949288906426
213 1 2 0 0.211050711093574 1 0.788949288906426
214 1 2 0 0.211050711093574 1 0.788949288906426
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 1 2 0 0.211050711093574 1 0.788949288906426
242 0 1 0 1
243 0 1 0 1
244 1 2 0 0.211050711093574 1 0.788949288906426
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 1 2 0 0.211050711093574 1 0.788949288906426
252 0 1 0 1
253 1 2 0 0.211050711093574 1 0.788949288906426
254 1 2 0 0.211050711093574 1 0.788949288906426
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 0 1 0 1
281 1 2 0 0.211050711093574 1 0.788949288906426
282 1 2 0 0.211050711093574 1 0.788949288906426
283 0 1 0 1
284 1 2 0 0.211050711093574 1 0.788949288906426
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 0 1 0 1
291 1 2 0 0.211050711093574 1 0.788949288906426
292 1 2 0 0.211050711093574 1 0.788949288906426
293 1 2 0 0.211050711093574 1 0.788949288906426
294 1 2 0 0.211050711093574 1 0.788949288906426
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
5
## name
robot-at(x14, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(25)) and($a(2) $s(25)) and($a(0) $s(25)) and($a(3) $s(25))) : $c(0)) (or(and($a(1) $s(24)) and($a(2) $s(3)) and($a(0) $s(49)) and($a(3) $s(28))) : Bernoulli($c(0.759766750865512))) ($c(1) : $s(25)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(25)) and($a(2) $s(25)) and($a(0) $s(25)) and($a(3) $s(25))) : $c(0)) (or(and($a(1) $s(24)) and($a(2) $s(3)) and($a(0) $s(49)) and($a(3) $s(28))) : $c(1)) ($c(1) : $s(25)) )
## hash index
25
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 1 2 0 0.240233249134488 1 0.759766750865512
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 1 2 0 0.240233249134488 1 0.759766750865512
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 1 2 0 0.240233249134488 1 0.759766750865512
33 1 2 0 0.240233249134488 1 0.759766750865512
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 1 2 0 0.240233249134488 1 0.759766750865512
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 1 2 0 0.240233249134488 1 0.759766750865512
92 1 2 0 0.240233249134488 1 0.759766750865512
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 1 2 0 0.240233249134488 1 0.759766750865512
102 0 1 0 1
103 1 2 0 0.240233249134488 1 0.759766750865512
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 1 2 0 0.240233249134488 1 0.759766750865512
112 1 2 0 0.240233249134488 1 0.759766750865512
113 1 2 0 0.240233249134488 1 0.759766750865512
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 1 2 0 0.240233249134488 1 0.759766750865512
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 1 0 1
172 1 2 0 0.240233249134488 1 0.759766750865512
173 0 1 0 1
174 1 2 0 0.240233249134488 1 0.759766750865512
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 1 0 1
182 0 1 0 1
183 1 2 0 0.240233249134488 1 0.759766750865512
184 1 2 0 0.240233249134488 1 0.759766750865512
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 1 0 1
192 1 2 0 0.240233249134488 1 0.759766750865512
193 1 2 0 0.240233249134488 1 0.759766750865512
194 1 2 0 0.240233249134488 1 0.759766750865512
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 1 2 0 0.240233249134488 1 0.759766750865512
242 0 1 0 1
243 0 1 0 1
244 1 2 0 0.240233249134488 1 0.759766750865512
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 1 2 0 0.240233249134488 1 0.759766750865512
252 1 2 0 0.240233249134488 1 0.759766750865512
253 0 1 0 1
254 1 2 0 0.240233249134488 1 0.759766750865512
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 1 2 0 0.240233249134488 1 0.759766750865512
262 0 1 0 1
263 1 2 0 0.240233249134488 1 0.759766750865512
264 1 2 0 0.240233249134488 1 0.759766750865512
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 1 2 0 0.240233249134488 1 0.759766750865512
272 1 2 0 0.240233249134488 1 0.759766750865512
273 1 2 0 0.240233249134488 1 0.759766750865512
274 1 2 0 0.240233249134488 1 0.759766750865512
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
6
## name
robot-at(x21, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(26)) and($a(2) $s(26)) and($a(0) $s(26)) and($a(3) $s(26))) : $c(0)) (or(and($a(1) $s(4)) and($a(2) $s(27)) and($a(0) $s(23)) and($a(3) $s(29))) : Bernoulli($c(0.687489828379411))) ($c(1) : $s(26)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(26)) and($a(2) $s(26)) and($a(0) $s(26)) and($a(3) $s(26))) : $c(0)) (or(and($a(1) $s(4)) and($a(2) $s(27)) and($a(0) $s(23)) and($a(3) $s(29))) : $c(1)) ($c(1) : $s(26)) )
## hash index
26
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.312510171620589 1 0.687489828379411
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 1 2 0 0.312510171620589 1 0.687489828379411
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 1 2 0 0.312510171620589 1 0.687489828379411
34 1 2 0 0.312510171620589 1 0.687489828379411
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 1 2 0 0.312510171620589 1 0.687489828379411
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 1 2 0 0.312510171620589 1 0.687489828379411
93 1 2 0 0.312510171620589 1 0.687489828379411
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 1 2 0 0.312510171620589 1 0.687489828379411
103 0 1 0 1
104 1 2 0 0.312510171620589 1 0.687489828379411
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 1 2 0 0.312510171620589 1 0.687489828379411
113 1 2 0 0.312510171620589 1 0.687489828379411
114 1 2 0 0.312510171620589 1 0.687489828379411
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 1 2 0 0.312510171620589 1 0.687489828379411
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 1 2 0 0.312510171620589 1 0.687489828379411
172 0 1 0 1
173 1 2 0 0.312510171620589 1 0.687489828379411
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 1 2 0 0.312510171620589 1 0.687489828379411
182 0 1 0 1
183 0 1 0 1
184 1 2 0 0.312510171620589 1 0.687489828379411
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 1 2 0 0.312510171620589 1 0.687489828379411
192 0 1 0 1
193 1 2 0 0.312510171620589 1 0.687489828379411
194 1 2 0 0.312510171620589 1 0.687489828379411
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 1 2 0 0.312510171620589 1 0.687489828379411
242 1 2 0 0.312510171620589 1 0.687489828379411
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 1 2 0 0.312510171620589 1 0.687489828379411
252 1 2 0 0.312510171620589 1 0.687489828379411
253 1 2 0 0.312510171620589 1 0.687489828379411
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 1 2 0 0.312510171620589 1 0.687489828379411
262 1 2 0 0.312510171620589 1 0.687489828379411
263 0 1 0 1
264 1 2 0 0.312510171620589 1 0.687489828379411
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 1 2 0 0.312510171620589 1 0.687489828379411
272 1 2 0 0.312510171620589 1 0.687489828379411
273 1 2 0 0.312510171620589 1 0.687489828379411
274 1 2 0 0.312510171620589 1 0.687489828379411
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
7
## name
robot-at(x21, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(27)) and($a(2) $s(27)) and($a(0) $s(27)) and($a(3) $s(27))) : $c(0)) (or(and($a(1) $s(26)) and($a(2) $s(28)) and($a(0) $s(24)) and($a(3) $s(30))) : Bernoulli($c(0.669396876874897))) ($c(1) : $s(27)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(27)) and($a(2) $s(27)) and($a(0) $s(27)) and($a(3) $s(27))) : $c(0)) (or(and($a(1) $s(26)) and($a(2) $s(28)) and($a(0) $s(24)) and($a(3) $s(30))) : $c(1)) ($c(1) : $s(27)) )
## hash index
27
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 1 2 0 0.330603123125103 1 0.669396876874897
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 1 2 0 0.330603123125103 1 0.669396876874897
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 1 2 0 0.330603123125103 1 0.669396876874897
34 1 2 0 0.330603123125103 1 0.669396876874897
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 1 2 0 0.330603123125103 1 0.669396876874897
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 1 2 0 0.330603123125103 1 0.669396876874897
93 0 1 0 1
94 1 2 0 0.330603123125103 1 0.669396876874897
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 1 2 0 0.330603123125103 1 0.669396876874897
103 1 2 0 0.330603123125103 1 0.669396876874897
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 1 2 0 0.330603123125103 1 0.669396876874897
113 1 2 0 0.330603123125103 1 0.669396876874897
114 1 2 0 0.330603123125103 1 0.669396876874897
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 1 2 0 0.330603123125103 1 0.669396876874897
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 1 2 0 0.330603123125103 1 0.669396876874897
172 0 1 0 1
173 0 1 0 1
174 1 2 0 0.330603123125103 1 0.669396876874897
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 1 2 0 0.330603123125103 1 0.669396876874897
182 0 1 0 1
183 1 2 0 0.330603123125103 1 0.669396876874897
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 1 2 0 0.330603123125103 1 0.669396876874897
192 0 1 0 1
193 1 2 0 0.330603123125103 1 0.669396876874897
194 1 2 0 0.330603123125103 1 0.669396876874897
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 1 2 0 0.330603123125103 1 0.669396876874897
242 1 2 0 0.330603123125103 1 0.669396876874897
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 1 2 0 0.330603123125103 1 0.669396876874897
252 1 2 0 0.330603123125103 1 0.669396876874897
253 0 1 0 1
254 1 2 0 0.330603123125103 1 0.669396876874897
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 1 2 0 0.330603123125103 1 0.669396876874897
262 1 2 0 0.330603123125103 1 0.669396876874897
263 1 2 0 0.330603123125103 1 0.669396876874897
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 1 2 0 0.330603123125103 1 0.669396876874897
272 1 2 0 0.330603123125103 1 0.669396876874897
273 1 2 0 0.330603123125103 1 0.669396876874897
274 1 2 0 0.330603123125103 1 0.669396876874897
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
8
## name
robot-at(x21, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(28)) and($a(2) $s(28)) and($a(0) $s(28)) and($a(3) $s(28))) : $c(0)) (or(and($a(1) $s(27)) and($a(2) $s(5)) and($a(0) $s(25)) and($a(3) $s(31))) : Bernoulli($c(0.689893853618641))) ($c(1) : $s(28)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(28)) and($a(2) $s(28)) and($a(0) $s(28)) and($a(3) $s(28))) : $c(0)) (or(and($a(1) $s(27)) and($a(2) $s(5)) and($a(0) $s(25)) and($a(3) $s(31))) : $c(1)) ($c(1) : $s(28)) )
## hash index
28
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 1 2 0 0.310106146381359 1 0.689893853618641
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 1 2 0 0.310106146381359 1 0.689893853618641
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 1 2 0 0.310106146381359 1 0.689893853618641
33 0 1 0 1
34 1 2 0 0.310106146381359 1 0.689893853618641
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 1 2 0 0.310106146381359 1 0.689893853618641
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 1 2 0 0.310106146381359 1 0.689893853618641
53 1 2 0 0.310106146381359 1 0.689893853618641
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 1 2 0 0.310106146381359 1 0.689893853618641
64 1 2 0 0.310106146381359 1 0.689893853618641
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 1 2 0 0.310106146381359 1 0.689893853618641
73 1 2 0 0.310106146381359 1 0.689893853618641
74 1 2 0 0.310106146381359 1 0.689893853618641
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 1 2 0 0.310106146381359 1 0.689893853618641
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 1 2 0 0.310106146381359 1 0.689893853618641
172 1 2 0 0.310106146381359 1 0.689893853618641
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 1 2 0 0.310106146381359 1 0.689893853618641
182 0 1 0 1
183 0 1 0 1
184 1 2 0 0.310106146381359 1 0.689893853618641
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 1 2 0 0.310106146381359 1 0.689893853618641
192 1 2 0 0.310106146381359 1 0.689893853618641
193 0 1 0 1
194 1 2 0 0.310106146381359 1 0.689893853618641
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 1 2 0 0.310106146381359 1 0.689893853618641
202 0 1 0 1
203 1 2 0 0.310106146381359 1 0.689893853618641
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 1 2 0 0.310106146381359 1 0.689893853618641
212 1 2 0 0.310106146381359 1 0.689893853618641
213 1 2 0 0.310106146381359 1 0.689893853618641
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 1 2 0 0.310106146381359 1 0.689893853618641
222 0 1 0 1
223 1 2 0 0.310106146381359 1 0.689893853618641
224 1 2 0 0.310106146381359 1 0.689893853618641
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 1 2 0 0.310106146381359 1 0.689893853618641
232 1 2 0 0.310106146381359 1 0.689893853618641
233 1 2 0 0.310106146381359 1 0.689893853618641
234 1 2 0 0.310106146381359 1 0.689893853618641
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
9
## name
robot-at(x30, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(29)) and($a(2) $s(29)) and($a(0) $s(29)) and($a(3) $s(29))) : $c(0)) (or(and($a(1) $s(6)) and($a(2) $s(30)) and($a(0) $s(26)) and($a(3) $s(32))) : Bernoulli($c(0.568039713220464))) ($c(1) : $s(29)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(29)) and($a(2) $s(29)) and($a(0) $s(29)) and($a(3) $s(29))) : $c(0)) (or(and($a(1) $s(6)) and($a(2) $s(30)) and($a(0) $s(26)) and($a(3) $s(32))) : $c(1)) ($c(1) : $s(29)) )
## hash index
29
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.431960286779536 1 0.568039713220464
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 1 2 0 0.431960286779536 1 0.568039713220464
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 1 2 0 0.431960286779536 1 0.568039713220464
34 1 2 0 0.431960286779536 1 0.568039713220464
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 1 2 0 0.431960286779536 1 0.568039713220464
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 1 2 0 0.431960286779536 1 0.568039713220464
93 1 2 0 0.431960286779536 1 0.568039713220464
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 1 2 0 0.431960286779536 1 0.568039713220464
103 0 1 0 1
104 1 2 0 0.431960286779536 1 0.568039713220464
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 1 2 0 0.431960286779536 1 0.568039713220464
113 1 2 0 0.431960286779536 1 0.568039713220464
114 1 2 0 0.431960286779536 1 0.568039713220464
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 1 2 0 0.431960286779536 1 0.568039713220464
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 1 2 0 0.431960286779536 1 0.568039713220464
172 0 1 0 1
173 1 2 0 0.431960286779536 1 0.568039713220464
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 1 2 0 0.431960286779536 1 0.568039713220464
182 0 1 0 1
183 0 1 0 1
184 1 2 0 0.431960286779536 1 0.568039713220464
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 1 2 0 0.431960286779536 1 0.568039713220464
192 0 1 0 1
193 1 2 0 0.431960286779536 1 0.568039713220464
194 1 2 0 0.431960286779536 1 0.568039713220464
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 1 2 0 0.431960286779536 1 0.568039713220464
242 1 2 0 0.431960286779536 1 0.568039713220464
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 1 2 0 0.431960286779536 1 0.568039713220464
252 1 2 0 0.431960286779536 1 0.568039713220464
253 1 2 0 0.431960286779536 1 0.568039713220464
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 1 2 0 0.431960286779536 1 0.568039713220464
262 1 2 0 0.431960286779536 1 0.568039713220464
263 0 1 0 1
264 1 2 0 0.431960286779536 1 0.568039713220464
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 1 2 0 0.431960286779536 1 0.568039713220464
272 1 2 0 0.431960286779536 1 0.568039713220464
273 1 2 0 0.431960286779536 1 0.568039713220464
274 1 2 0 0.431960286779536 1 0.568039713220464
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
10
## name
robot-at(x30, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(30)) and($a(2) $s(30)) and($a(0) $s(30)) and($a(3) $s(30))) : $c(0)) (or(and($a(1) $s(29)) and($a(2) $s(31)) and($a(0) $s(27)) and($a(3) $s(33))) : Bernoulli($c(0.558982306884395))) ($c(1) : $s(30)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(30)) and($a(2) $s(30)) and($a(0) $s(30)) and($a(3) $s(30))) : $c(0)) (or(and($a(1) $s(29)) and($a(2) $s(31)) and($a(0) $s(27)) and($a(3) $s(33))) : $c(1)) ($c(1) : $s(30)) )
## hash index
30
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 1 2 0 0.441017693115605 1 0.558982306884395
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 1 2 0 0.441017693115605 1 0.558982306884395
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 1 2 0 0.441017693115605 1 0.558982306884395
34 1 2 0 0.441017693115605 1 0.558982306884395
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 1 2 0 0.441017693115605 1 0.558982306884395
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 1 2 0 0.441017693115605 1 0.558982306884395
93 0 1 0 1
94 1 2 0 0.441017693115605 1 0.558982306884395
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 1 2 0 0.441017693115605 1 0.558982306884395
103 1 2 0 0.441017693115605 1 0.558982306884395
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 1 2 0 0.441017693115605 1 0.558982306884395
113 1 2 0 0.441017693115605 1 0.558982306884395
114 1 2 0 0.441017693115605 1 0.558982306884395
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 1 2 0 0.441017693115605 1 0.558982306884395
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 1 2 0 0.441017693115605 1 0.558982306884395
172 0 1 0 1
173 0 1 0 1
174 1 2 0 0.441017693115605 1 0.558982306884395
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 1 2 0 0.441017693115605 1 0.558982306884395
182 0 1 0 1
183 1 2 0 0.441017693115605 1 0.558982306884395
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 1 2 0 0.441017693115605 1 0.558982306884395
192 0 1 0 1
193 1 2 0 0.441017693115605 1 0.558982306884395
194 1 2 0 0.441017693115605 1 0.558982306884395
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 1 2 0 0.441017693115605 1 0.558982306884395
242 1 2 0 0.441017693115605 1 0.558982306884395
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 1 2 0 0.441017693115605 1 0.558982306884395
252 1 2 0 0.441017693115605 1 0.558982306884395
253 0 1 0 1
254 1 2 0 0.441017693115605 1 0.558982306884395
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 1 2 0 0.441017693115605 1 0.558982306884395
262 1 2 0 0.441017693115605 1 0.558982306884395
263 1 2 0 0.441017693115605 1 0.558982306884395
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 1 2 0 0.441017693115605 1 0.558982306884395
272 1 2 0 0.441017693115605 1 0.558982306884395
273 1 2 0 0.441017693115605 1 0.558982306884395
274 1 2 0 0.441017693115605 1 0.558982306884395
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
11
## name
robot-at(x30, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(31)) and($a(2) $s(31)) and($a(0) $s(31)) and($a(3) $s(31))) : $c(0)) (or(and($a(1) $s(30)) and($a(2) $s(7)) and($a(0) $s(28)) and($a(3) $s(34))) : Bernoulli($c(0.541992485316263))) ($c(1) : $s(31)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(31)) and($a(2) $s(31)) and($a(0) $s(31)) and($a(3) $s(31))) : $c(0)) (or(and($a(1) $s(30)) and($a(2) $s(7)) and($a(0) $s(28)) and($a(3) $s(34))) : $c(1)) ($c(1) : $s(31)) )
## hash index
31
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 1 2 0 0.458007514683737 1 0.541992485316263
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 1 2 0 0.458007514683737 1 0.541992485316263
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 1 2 0 0.458007514683737 1 0.541992485316263
33 0 1 0 1
34 1 2 0 0.458007514683737 1 0.541992485316263
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 1 2 0 0.458007514683737 1 0.541992485316263
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 1 2 0 0.458007514683737 1 0.541992485316263
53 1 2 0 0.458007514683737 1 0.541992485316263
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 1 2 0 0.458007514683737 1 0.541992485316263
64 1 2 0 0.458007514683737 1 0.541992485316263
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 1 2 0 0.458007514683737 1 0.541992485316263
73 1 2 0 0.458007514683737 1 0.541992485316263
74 1 2 0 0.458007514683737 1 0.541992485316263
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 1 2 0 0.458007514683737 1 0.541992485316263
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 1 2 0 0.458007514683737 1 0.541992485316263
172 1 2 0 0.458007514683737 1 0.541992485316263
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 1 2 0 0.458007514683737 1 0.541992485316263
182 0 1 0 1
183 0 1 0 1
184 1 2 0 0.458007514683737 1 0.541992485316263
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 1 2 0 0.458007514683737 1 0.541992485316263
192 1 2 0 0.458007514683737 1 0.541992485316263
193 0 1 0 1
194 1 2 0 0.458007514683737 1 0.541992485316263
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 1 2 0 0.458007514683737 1 0.541992485316263
202 0 1 0 1
203 1 2 0 0.458007514683737 1 0.541992485316263
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 1 2 0 0.458007514683737 1 0.541992485316263
212 1 2 0 0.458007514683737 1 0.541992485316263
213 1 2 0 0.458007514683737 1 0.541992485316263
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 1 2 0 0.458007514683737 1 0.541992485316263
222 0 1 0 1
223 1 2 0 0.458007514683737 1 0.541992485316263
224 1 2 0 0.458007514683737 1 0.541992485316263
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 1 2 0 0.458007514683737 1 0.541992485316263
232 1 2 0 0.458007514683737 1 0.541992485316263
233 1 2 0 0.458007514683737 1 0.541992485316263
234 1 2 0 0.458007514683737 1 0.541992485316263
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
12
## name
robot-at(x41, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(32)) and($a(2) $s(32)) and($a(0) $s(32)) and($a(3) $s(32))) : $c(0)) (or(and($a(1) $s(8)) and($a(2) $s(33)) and($a(0) $s(29)) and($a(3) $s(35))) : Bernoulli($c(0.461690431460738))) ($c(1) : $s(32)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(32)) and($a(2) $s(32)) and($a(0) $s(32)) and($a(3) $s(32))) : $c(0)) (or(and($a(1) $s(8)) and($a(2) $s(33)) and($a(0) $s(29)) and($a(3) $s(35))) : $c(0)) ($c(1) : $s(32)) )
## hash index
32
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 2 0 0.538309568539262 1 0.461690431460738
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 2 0 0.538309568539262 1 0.461690431460738
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 2 0 0.538309568539262 1 0.461690431460738
34 0 2 0 0.538309568539262 1 0.461690431460738
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 2 0 0.538309568539262 1 0.461690431460738
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 2 0 0.538309568539262 1 0.461690431460738
93 0 2 0 0.538309568539262 1 0.461690431460738
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 2 0 0.538309568539262 1 0.461690431460738
103 0 1 0 1
104 0 2 0 0.538309568539262 1 0.461690431460738
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 2 0 0.538309568539262 1 0.461690431460738
113 0 2 0 0.538309568539262 1 0.461690431460738
114 0 2 0 0.538309568539262 1 0.461690431460738
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.538309568539262 1 0.461690431460738
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.538309568539262 1 0.461690431460738
172 0 1 0 1
173 0 2 0 0.538309568539262 1 0.461690431460738
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.538309568539262 1 0.461690431460738
182 0 1 0 1
183 0 1 0 1
184 0 2 0 0.538309568539262 1 0.461690431460738
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 2 0 0.538309568539262 1 0.461690431460738
192 0 1 0 1
193 0 2 0 0.538309568539262 1 0.461690431460738
194 0 2 0 0.538309568539262 1 0.461690431460738
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 0 2 0 0.538309568539262 1 0.461690431460738
242 0 2 0 0.538309568539262 1 0.461690431460738
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 0 2 0 0.538309568539262 1 0.461690431460738
252 0 2 0 0.538309568539262 1 0.461690431460738
253 0 2 0 0.538309568539262 1 0.461690431460738
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 2 0 0.538309568539262 1 0.461690431460738
262 0 2 0 0.538309568539262 1 0.461690431460738
263 0 1 0 1
264 0 2 0 0.538309568539262 1 0.461690431460738
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 2 0 0.538309568539262 1 0.461690431460738
272 0 2 0 0.538309568539262 1 0.461690431460738
273 0 2 0 0.538309568539262 1 0.461690431460738
274 0 2 0 0.538309568539262 1 0.461690431460738
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
13
## name
robot-at(x41, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(33)) and($a(2) $s(33)) and($a(0) $s(33)) and($a(3) $s(33))) : $c(0)) (or(and($a(1) $s(32)) and($a(2) $s(34)) and($a(0) $s(30)) and($a(3) $s(36))) : Bernoulli($c(0.48802167433314))) ($c(1) : $s(33)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(33)) and($a(2) $s(33)) and($a(0) $s(33)) and($a(3) $s(33))) : $c(0)) (or(and($a(1) $s(32)) and($a(2) $s(34)) and($a(0) $s(30)) and($a(3) $s(36))) : $c(0)) ($c(1) : $s(33)) )
## hash index
33
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 2 0 0.51197832566686 1 0.48802167433314
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 2 0 0.51197832566686 1 0.48802167433314
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 2 0 0.51197832566686 1 0.48802167433314
34 0 2 0 0.51197832566686 1 0.48802167433314
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 2 0 0.51197832566686 1 0.48802167433314
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 2 0 0.51197832566686 1 0.48802167433314
93 0 1 0 1
94 0 2 0 0.51197832566686 1 0.48802167433314
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 2 0 0.51197832566686 1 0.48802167433314
103 0 2 0 0.51197832566686 1 0.48802167433314
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 2 0 0.51197832566686 1 0.48802167433314
113 0 2 0 0.51197832566686 1 0.48802167433314
114 0 2 0 0.51197832566686 1 0.48802167433314
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.51197832566686 1 0.48802167433314
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.51197832566686 1 0.48802167433314
172 0 1 0 1
173 0 1 0 1
174 0 2 0 0.51197832566686 1 0.48802167433314
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.51197832566686 1 0.48802167433314
182 0 1 0 1
183 0 2 0 0.51197832566686 1 0.48802167433314
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 2 0 0.51197832566686 1 0.48802167433314
192 0 1 0 1
193 0 2 0 0.51197832566686 1 0.48802167433314
194 0 2 0 0.51197832566686 1 0.48802167433314
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 0 2 0 0.51197832566686 1 0.48802167433314
242 0 2 0 0.51197832566686 1 0.48802167433314
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 0 2 0 0.51197832566686 1 0.48802167433314
252 0 2 0 0.51197832566686 1 0.48802167433314
253 0 1 0 1
254 0 2 0 0.51197832566686 1 0.48802167433314
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 2 0 0.51197832566686 1 0.48802167433314
262 0 2 0 0.51197832566686 1 0.48802167433314
263 0 2 0 0.51197832566686 1 0.48802167433314
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 2 0 0.51197832566686 1 0.48802167433314
272 0 2 0 0.51197832566686 1 0.48802167433314
273 0 2 0 0.51197832566686 1 0.48802167433314
274 0 2 0 0.51197832566686 1 0.48802167433314
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
14
## name
robot-at(x41, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(34)) and($a(2) $s(34)) and($a(0) $s(34)) and($a(3) $s(34))) : $c(0)) (or(and($a(1) $s(33)) and($a(2) $s(9)) and($a(0) $s(31)) and($a(3) $s(37))) : Bernoulli($c(0.481796233914793))) ($c(1) : $s(34)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(34)) and($a(2) $s(34)) and($a(0) $s(34)) and($a(3) $s(34))) : $c(0)) (or(and($a(1) $s(33)) and($a(2) $s(9)) and($a(0) $s(31)) and($a(3) $s(37))) : $c(0)) ($c(1) : $s(34)) )
## hash index
34
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 2 0 0.518203766085207 1 0.481796233914793
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 2 0 0.518203766085207 1 0.481796233914793
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 2 0 0.518203766085207 1 0.481796233914793
33 0 1 0 1
34 0 2 0 0.518203766085207 1 0.481796233914793
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 2 0 0.518203766085207 1 0.481796233914793
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 2 0 0.518203766085207 1 0.481796233914793
53 0 2 0 0.518203766085207 1 0.481796233914793
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 2 0 0.518203766085207 1 0.481796233914793
64 0 2 0 0.518203766085207 1 0.481796233914793
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 2 0 0.518203766085207 1 0.481796233914793
73 0 2 0 0.518203766085207 1 0.481796233914793
74 0 2 0 0.518203766085207 1 0.481796233914793
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.518203766085207 1 0.481796233914793
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.518203766085207 1 0.481796233914793
172 0 2 0 0.518203766085207 1 0.481796233914793
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.518203766085207 1 0.481796233914793
182 0 1 0 1
183 0 1 0 1
184 0 2 0 0.518203766085207 1 0.481796233914793
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 2 0 0.518203766085207 1 0.481796233914793
192 0 2 0 0.518203766085207 1 0.481796233914793
193 0 1 0 1
194 0 2 0 0.518203766085207 1 0.481796233914793
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 2 0 0.518203766085207 1 0.481796233914793
202 0 1 0 1
203 0 2 0 0.518203766085207 1 0.481796233914793
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 2 0 0.518203766085207 1 0.481796233914793
212 0 2 0 0.518203766085207 1 0.481796233914793
213 0 2 0 0.518203766085207 1 0.481796233914793
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 0 2 0 0.518203766085207 1 0.481796233914793
222 0 1 0 1
223 0 2 0 0.518203766085207 1 0.481796233914793
224 0 2 0 0.518203766085207 1 0.481796233914793
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 2 0 0.518203766085207 1 0.481796233914793
232 0 2 0 0.518203766085207 1 0.481796233914793
233 0 2 0 0.518203766085207 1 0.481796233914793
234 0 2 0 0.518203766085207 1 0.481796233914793
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
15
## name
robot-at(x54, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(35)) and($a(2) $s(35)) and($a(0) $s(35)) and($a(3) $s(35))) : $c(0)) (or(and($a(1) $s(10)) and($a(2) $s(36)) and($a(0) $s(32)) and($a(3) $s(41))) : Bernoulli($c(0.380698886803455))) ($c(1) : $s(35)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(35)) and($a(2) $s(35)) and($a(0) $s(35)) and($a(3) $s(35))) : $c(0)) (or(and($a(1) $s(10)) and($a(2) $s(36)) and($a(0) $s(32)) and($a(3) $s(41))) : $c(0)) ($c(1) : $s(35)) )
## hash index
35
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 2 0 0.619301113196545 1 0.380698886803455
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 2 0 0.619301113196545 1 0.380698886803455
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 2 0 0.619301113196545 1 0.380698886803455
34 0 2 0 0.619301113196545 1 0.380698886803455
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 2 0 0.619301113196545 1 0.380698886803455
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 2 0 0.619301113196545 1 0.380698886803455
93 0 2 0 0.619301113196545 1 0.380698886803455
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 2 0 0.619301113196545 1 0.380698886803455
103 0 1 0 1
104 0 2 0 0.619301113196545 1 0.380698886803455
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 2 0 0.619301113196545 1 0.380698886803455
113 0 2 0 0.619301113196545 1 0.380698886803455
114 0 2 0 0.619301113196545 1 0.380698886803455
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.619301113196545 1 0.380698886803455
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.619301113196545 1 0.380698886803455
172 0 1 0 1
173 0 2 0 0.619301113196545 1 0.380698886803455
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.619301113196545 1 0.380698886803455
182 0 1 0 1
183 0 1 0 1
184 0 2 0 0.619301113196545 1 0.380698886803455
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 2 0 0.619301113196545 1 0.380698886803455
192 0 1 0 1
193 0 2 0 0.619301113196545 1 0.380698886803455
194 0 2 0 0.619301113196545 1 0.380698886803455
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 0 2 0 0.619301113196545 1 0.380698886803455
242 0 2 0 0.619301113196545 1 0.380698886803455
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 0 2 0 0.619301113196545 1 0.380698886803455
252 0 2 0 0.619301113196545 1 0.380698886803455
253 0 2 0 0.619301113196545 1 0.380698886803455
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 2 0 0.619301113196545 1 0.380698886803455
262 0 2 0 0.619301113196545 1 0.380698886803455
263 0 1 0 1
264 0 2 0 0.619301113196545 1 0.380698886803455
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 2 0 0.619301113196545 1 0.380698886803455
272 0 2 0 0.619301113196545 1 0.380698886803455
273 0 2 0 0.619301113196545 1 0.380698886803455
274 0 2 0 0.619301113196545 1 0.380698886803455
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
16
## name
robot-at(x54, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(36)) and($a(2) $s(36)) and($a(0) $s(36)) and($a(3) $s(36))) : $c(0)) (or(and($a(1) $s(35)) and($a(2) $s(37)) and($a(0) $s(33)) and($a(3) $s(42))) : Bernoulli($c(0.340488535455532))) ($c(1) : $s(36)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(36)) and($a(2) $s(36)) and($a(0) $s(36)) and($a(3) $s(36))) : $c(0)) (or(and($a(1) $s(35)) and($a(2) $s(37)) and($a(0) $s(33)) and($a(3) $s(42))) : $c(0)) ($c(1) : $s(36)) )
## hash index
36
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 2 0 0.659511464544468 1 0.340488535455532
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 2 0 0.659511464544468 1 0.340488535455532
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 2 0 0.659511464544468 1 0.340488535455532
34 0 2 0 0.659511464544468 1 0.340488535455532
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 2 0 0.659511464544468 1 0.340488535455532
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 2 0 0.659511464544468 1 0.340488535455532
93 0 1 0 1
94 0 2 0 0.659511464544468 1 0.340488535455532
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 2 0 0.659511464544468 1 0.340488535455532
103 0 2 0 0.659511464544468 1 0.340488535455532
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 2 0 0.659511464544468 1 0.340488535455532
113 0 2 0 0.659511464544468 1 0.340488535455532
114 0 2 0 0.659511464544468 1 0.340488535455532
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.659511464544468 1 0.340488535455532
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.659511464544468 1 0.340488535455532
172 0 1 0 1
173 0 1 0 1
174 0 2 0 0.659511464544468 1 0.340488535455532
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.659511464544468 1 0.340488535455532
182 0 1 0 1
183 0 2 0 0.659511464544468 1 0.340488535455532
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 2 0 0.659511464544468 1 0.340488535455532
192 0 1 0 1
193 0 2 0 0.659511464544468 1 0.340488535455532
194 0 2 0 0.659511464544468 1 0.340488535455532
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 0 2 0 0.659511464544468 1 0.340488535455532
242 0 2 0 0.659511464544468 1 0.340488535455532
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 0 2 0 0.659511464544468 1 0.340488535455532
252 0 2 0 0.659511464544468 1 0.340488535455532
253 0 1 0 1
254 0 2 0 0.659511464544468 1 0.340488535455532
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 2 0 0.659511464544468 1 0.340488535455532
262 0 2 0 0.659511464544468 1 0.340488535455532
263 0 2 0 0.659511464544468 1 0.340488535455532
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 2 0 0.659511464544468 1 0.340488535455532
272 0 2 0 0.659511464544468 1 0.340488535455532
273 0 2 0 0.659511464544468 1 0.340488535455532
274 0 2 0 0.659511464544468 1 0.340488535455532
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
17
## name
robot-at(x54, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(37)) and($a(2) $s(37)) and($a(0) $s(37)) and($a(3) $s(37))) : $c(0)) (or(and($a(1) $s(36)) and($a(2) $s(11)) and($a(0) $s(34)) and($a(3) $s(43))) : Bernoulli($c(0.357191042146749))) ($c(1) : $s(37)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(37)) and($a(2) $s(37)) and($a(0) $s(37)) and($a(3) $s(37))) : $c(0)) (or(and($a(1) $s(36)) and($a(2) $s(11)) and($a(0) $s(34)) and($a(3) $s(43))) : $c(0)) ($c(1) : $s(37)) )
## hash index
37
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 2 0 0.642808957853251 1 0.357191042146749
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 2 0 0.642808957853251 1 0.357191042146749
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 2 0 0.642808957853251 1 0.357191042146749
33 0 1 0 1
34 0 2 0 0.642808957853251 1 0.357191042146749
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 2 0 0.642808957853251 1 0.357191042146749
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 2 0 0.642808957853251 1 0.357191042146749
53 0 2 0 0.642808957853251 1 0.357191042146749
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 2 0 0.642808957853251 1 0.357191042146749
64 0 2 0 0.642808957853251 1 0.357191042146749
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 2 0 0.642808957853251 1 0.357191042146749
73 0 2 0 0.642808957853251 1 0.357191042146749
74 0 2 0 0.642808957853251 1 0.357191042146749
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.642808957853251 1 0.357191042146749
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.642808957853251 1 0.357191042146749
172 0 2 0 0.642808957853251 1 0.357191042146749
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.642808957853251 1 0.357191042146749
182 0 1 0 1
183 0 1 0 1
184 0 2 0 0.642808957853251 1 0.357191042146749
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 2 0 0.642808957853251 1 0.357191042146749
192 0 2 0 0.642808957853251 1 0.357191042146749
193 0 1 0 1
194 0 2 0 0.642808957853251 1 0.357191042146749
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 2 0 0.642808957853251 1 0.357191042146749
202 0 1 0 1
203 0 2 0 0.642808957853251 1 0.357191042146749
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 2 0 0.642808957853251 1 0.357191042146749
212 0 2 0 0.642808957853251 1 0.357191042146749
213 0 2 0 0.642808957853251 1 0.357191042146749
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 0 2 0 0.642808957853251 1 0.357191042146749
222 0 1 0 1
223 0 2 0 0.642808957853251 1 0.357191042146749
224 0 2 0 0.642808957853251 1 0.357191042146749
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 2 0 0.642808957853251 1 0.357191042146749
232 0 2 0 0.642808957853251 1 0.357191042146749
233 0 2 0 0.642808957853251 1 0.357191042146749
234 0 2 0 0.642808957853251 1 0.357191042146749
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
18
## name
robot-at(x6, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(38)) and($a(2) $s(38)) and($a(0) $s(38))) : $c(0)) (or(and($a(1) $s(12)) and($a(2) $s(39)) and($a(3) $s(47))) : Bernoulli($c(0.976005053147674))) ($c(1) : $s(38)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(38)) and($a(2) $s(38)) and($a(0) $s(38))) : $c(0)) (or(and($a(1) $s(12)) and($a(2) $s(39)) and($a(3) $s(47))) : $c(1)) ($c(1) : $s(38)) )
## hash index
38
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
160
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.0239949468523264 1 0.976005053147674
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 1 1 1 1
21 1 1 1 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 1 1 1 1
31 1 1 1 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 1 2 0 0.0239949468523264 1 0.976005053147674
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 1 2 0 0.0239949468523264 1 0.976005053147674
53 1 2 0 0.0239949468523264 1 0.976005053147674
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 1 1 1 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 1 1 1 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 1 2 0 0.0239949468523264 1 0.976005053147674
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 1 2 0 0.0239949468523264 1 0.976005053147674
92 0 1 0 1
93 1 2 0 0.0239949468523264 1 0.976005053147674
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 1 2 0 0.0239949468523264 1 0.976005053147674
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 1 2 0 0.0239949468523264 1 0.976005053147674
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 1 2 0 0.0239949468523264 1 0.976005053147674
122 1 2 0 0.0239949468523264 1 0.976005053147674
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 1 2 0 0.0239949468523264 1 0.976005053147674
132 1 2 0 0.0239949468523264 1 0.976005053147674
133 1 2 0 0.0239949468523264 1 0.976005053147674
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 1 2 0 0.0239949468523264 1 0.976005053147674
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 1 2 0 0.0239949468523264 1 0.976005053147674
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
19
## name
robot-at(x6, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(39)) and($a(2) $s(39)) and($a(0) $s(39))) : $c(0)) (or(and($a(1) $s(38)) and($a(2) $s(40)) and($a(3) $s(48))) : Bernoulli($c(0.978658619336784))) ($c(1) : $s(39)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(39)) and($a(2) $s(39)) and($a(0) $s(39))) : $c(0)) (or(and($a(1) $s(38)) and($a(2) $s(40)) and($a(3) $s(48))) : $c(1)) ($c(1) : $s(39)) )
## hash index
39
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
160
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.0213413806632161 1 0.978658619336784
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 1 1 1 1
21 1 1 1 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 1 1 1 1
31 1 1 1 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 1 2 0 0.0213413806632161 1 0.978658619336784
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 1 2 0 0.0213413806632161 1 0.978658619336784
53 1 2 0 0.0213413806632161 1 0.978658619336784
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 1 1 1 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 1 1 1 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 1 2 0 0.0213413806632161 1 0.978658619336784
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 1 2 0 0.0213413806632161 1 0.978658619336784
92 0 1 0 1
93 1 2 0 0.0213413806632161 1 0.978658619336784
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 1 2 0 0.0213413806632161 1 0.978658619336784
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 1 2 0 0.0213413806632161 1 0.978658619336784
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 1 2 0 0.0213413806632161 1 0.978658619336784
122 1 2 0 0.0213413806632161 1 0.978658619336784
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 1 2 0 0.0213413806632161 1 0.978658619336784
132 1 2 0 0.0213413806632161 1 0.978658619336784
133 1 2 0 0.0213413806632161 1 0.978658619336784
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 1 2 0 0.0213413806632161 1 0.978658619336784
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 1 2 0 0.0213413806632161 1 0.978658619336784
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
20
## name
robot-at(x6, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(40)) and($a(2) $s(40)) and($a(0) $s(40))) : $c(0)) (or(and($a(1) $s(39)) and($a(2) $s(13)) and($a(3) $s(49))) : Bernoulli($c(0.988873517140746))) ($c(1) : $s(40)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(40)) and($a(2) $s(40)) and($a(0) $s(40))) : $c(0)) (or(and($a(1) $s(39)) and($a(2) $s(13)) and($a(3) $s(49))) : $c(1)) ($c(1) : $s(40)) )
## hash index
40
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
160
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 1 2 0 0.0111264828592539 1 0.988873517140746
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 1 2 0 0.0111264828592539 1 0.988873517140746
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 1 2 0 0.0111264828592539 1 0.988873517140746
33 1 2 0 0.0111264828592539 1 0.988873517140746
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 1 1 1 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 1 1 1 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 1 1 1 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 1 1 1 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 1 2 0 0.0111264828592539 1 0.988873517140746
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 1 2 0 0.0111264828592539 1 0.988873517140746
92 1 2 0 0.0111264828592539 1 0.988873517140746
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 1 2 0 0.0111264828592539 1 0.988873517140746
102 0 1 0 1
103 1 2 0 0.0111264828592539 1 0.988873517140746
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 1 2 0 0.0111264828592539 1 0.988873517140746
112 1 2 0 0.0111264828592539 1 0.988873517140746
113 1 2 0 0.0111264828592539 1 0.988873517140746
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 1 2 0 0.0111264828592539 1 0.988873517140746
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 1 2 0 0.0111264828592539 1 0.988873517140746
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 1 2 0 0.0111264828592539 1 0.988873517140746
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 1 2 0 0.0111264828592539 1 0.988873517140746
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
1215
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
21
## name
robot-at(x69, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(41)) and($a(2) $s(41)) and($a(0) $s(41)) and($a(3) $s(41))) : $c(0)) (or(and($a(1) $s(14)) and($a(2) $s(42)) and($a(0) $s(35)) and($a(3) $s(44))) : Bernoulli($c(0.251344322537382))) ($c(1) : $s(41)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(41)) and($a(2) $s(41)) and($a(0) $s(41)) and($a(3) $s(41))) : $c(0)) (or(and($a(1) $s(14)) and($a(2) $s(42)) and($a(0) $s(35)) and($a(3) $s(44))) : $c(0)) ($c(1) : $s(41)) )
## hash index
41
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 2 0 0.748655677462618 1 0.251344322537382
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 2 0 0.748655677462618 1 0.251344322537382
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 2 0 0.748655677462618 1 0.251344322537382
34 0 2 0 0.748655677462618 1 0.251344322537382
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 2 0 0.748655677462618 1 0.251344322537382
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 2 0 0.748655677462618 1 0.251344322537382
93 0 2 0 0.748655677462618 1 0.251344322537382
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 2 0 0.748655677462618 1 0.251344322537382
103 0 1 0 1
104 0 2 0 0.748655677462618 1 0.251344322537382
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 2 0 0.748655677462618 1 0.251344322537382
113 0 2 0 0.748655677462618 1 0.251344322537382
114 0 2 0 0.748655677462618 1 0.251344322537382
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.748655677462618 1 0.251344322537382
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.748655677462618 1 0.251344322537382
172 0 1 0 1
173 0 2 0 0.748655677462618 1 0.251344322537382
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.748655677462618 1 0.251344322537382
182 0 1 0 1
183 0 1 0 1
184 0 2 0 0.748655677462618 1 0.251344322537382
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 2 0 0.748655677462618 1 0.251344322537382
192 0 1 0 1
193 0 2 0 0.748655677462618 1 0.251344322537382
194 0 2 0 0.748655677462618 1 0.251344322537382
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 0 2 0 0.748655677462618 1 0.251344322537382
242 0 2 0 0.748655677462618 1 0.251344322537382
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 0 2 0 0.748655677462618 1 0.251344322537382
252 0 2 0 0.748655677462618 1 0.251344322537382
253 0 2 0 0.748655677462618 1 0.251344322537382
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 2 0 0.748655677462618 1 0.251344322537382
262 0 2 0 0.748655677462618 1 0.251344322537382
263 0 1 0 1
264 0 2 0 0.748655677462618 1 0.251344322537382
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 2 0 0.748655677462618 1 0.251344322537382
272 0 2 0 0.748655677462618 1 0.251344322537382
273 0 2 0 0.748655677462618 1 0.251344322537382
274 0 2 0 0.748655677462618 1 0.251344322537382
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
22
## name
robot-at(x69, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(42)) and($a(2) $s(42)) and($a(0) $s(42)) and($a(3) $s(42))) : $c(0)) (or(and($a(1) $s(41)) and($a(2) $s(43)) and($a(0) $s(36)) and($a(3) $s(45))) : Bernoulli($c(0.275430382539829))) ($c(1) : $s(42)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(42)) and($a(2) $s(42)) and($a(0) $s(42)) and($a(3) $s(42))) : $c(0)) (or(and($a(1) $s(41)) and($a(2) $s(43)) and($a(0) $s(36)) and($a(3) $s(45))) : $c(0)) ($c(1) : $s(42)) )
## hash index
42
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 2 0 0.724569617460171 1 0.275430382539829
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 2 0 0.724569617460171 1 0.275430382539829
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 2 0 0.724569617460171 1 0.275430382539829
34 0 2 0 0.724569617460171 1 0.275430382539829
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 1 1 1 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 1 1 1 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 1 1 1 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 1 1 1 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 2 0 0.724569617460171 1 0.275430382539829
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 2 0 0.724569617460171 1 0.275430382539829
93 0 1 0 1
94 0 2 0 0.724569617460171 1 0.275430382539829
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 1 0 1
102 0 2 0 0.724569617460171 1 0.275430382539829
103 0 2 0 0.724569617460171 1 0.275430382539829
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 2 0 0.724569617460171 1 0.275430382539829
113 0 2 0 0.724569617460171 1 0.275430382539829
114 0 2 0 0.724569617460171 1 0.275430382539829
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.724569617460171 1 0.275430382539829
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.724569617460171 1 0.275430382539829
172 0 1 0 1
173 0 1 0 1
174 0 2 0 0.724569617460171 1 0.275430382539829
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.724569617460171 1 0.275430382539829
182 0 1 0 1
183 0 2 0 0.724569617460171 1 0.275430382539829
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 2 0 0.724569617460171 1 0.275430382539829
192 0 1 0 1
193 0 2 0 0.724569617460171 1 0.275430382539829
194 0 2 0 0.724569617460171 1 0.275430382539829
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 0 1 0 1
241 0 2 0 0.724569617460171 1 0.275430382539829
242 0 2 0 0.724569617460171 1 0.275430382539829
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 0 2 0 0.724569617460171 1 0.275430382539829
252 0 2 0 0.724569617460171 1 0.275430382539829
253 0 1 0 1
254 0 2 0 0.724569617460171 1 0.275430382539829
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 0 1 0 1
261 0 2 0 0.724569617460171 1 0.275430382539829
262 0 2 0 0.724569617460171 1 0.275430382539829
263 0 2 0 0.724569617460171 1 0.275430382539829
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 2 0 0.724569617460171 1 0.275430382539829
272 0 2 0 0.724569617460171 1 0.275430382539829
273 0 2 0 0.724569617460171 1 0.275430382539829
274 0 2 0 0.724569617460171 1 0.275430382539829
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
23
## name
robot-at(x69, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(43)) and($a(2) $s(43)) and($a(0) $s(43)) and($a(3) $s(43))) : $c(0)) (or(and($a(1) $s(42)) and($a(2) $s(15)) and($a(0) $s(37)) and($a(3) $s(46))) : Bernoulli($c(0.240536610906323))) ($c(1) : $s(43)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(43)) and($a(2) $s(43)) and($a(0) $s(43)) and($a(3) $s(43))) : $c(0)) (or(and($a(1) $s(42)) and($a(2) $s(15)) and($a(0) $s(37)) and($a(3) $s(46))) : $c(0)) ($c(1) : $s(43)) )
## hash index
43
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 2 0 0.759463389093677 1 0.240536610906323
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 2 0 0.759463389093677 1 0.240536610906323
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 2 0 0.759463389093677 1 0.240536610906323
33 0 1 0 1
34 0 2 0 0.759463389093677 1 0.240536610906323
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 2 0 0.759463389093677 1 0.240536610906323
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 2 0 0.759463389093677 1 0.240536610906323
53 0 2 0 0.759463389093677 1 0.240536610906323
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 2 0 0.759463389093677 1 0.240536610906323
64 0 2 0 0.759463389093677 1 0.240536610906323
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 2 0 0.759463389093677 1 0.240536610906323
73 0 2 0 0.759463389093677 1 0.240536610906323
74 0 2 0 0.759463389093677 1 0.240536610906323
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 2 0 0.759463389093677 1 0.240536610906323
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.759463389093677 1 0.240536610906323
172 0 2 0 0.759463389093677 1 0.240536610906323
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.759463389093677 1 0.240536610906323
182 0 1 0 1
183 0 1 0 1
184 0 2 0 0.759463389093677 1 0.240536610906323
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 2 0 0.759463389093677 1 0.240536610906323
192 0 2 0 0.759463389093677 1 0.240536610906323
193 0 1 0 1
194 0 2 0 0.759463389093677 1 0.240536610906323
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 2 0 0.759463389093677 1 0.240536610906323
202 0 1 0 1
203 0 2 0 0.759463389093677 1 0.240536610906323
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 2 0 0.759463389093677 1 0.240536610906323
212 0 2 0 0.759463389093677 1 0.240536610906323
213 0 2 0 0.759463389093677 1 0.240536610906323
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 0 2 0 0.759463389093677 1 0.240536610906323
222 0 1 0 1
223 0 2 0 0.759463389093677 1 0.240536610906323
224 0 2 0 0.759463389093677 1 0.240536610906323
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 2 0 0.759463389093677 1 0.240536610906323
232 0 2 0 0.759463389093677 1 0.240536610906323
233 0 2 0 0.759463389093677 1 0.240536610906323
234 0 2 0 0.759463389093677 1 0.240536610906323
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
24
## name
robot-at(x86, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(44)) and($a(2) $s(44)) and($a(0) $s(44)) and($a(3) $s(44))) : $c(0)) (or(and($a(1) $s(16)) and($a(2) $s(45)) and($a(0) $s(41)) and($a(3) $s(20))) : Bernoulli($c(0.140418855059478))) ($c(1) : $s(44)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(44)) and($a(2) $s(44)) and($a(0) $s(44)) and($a(3) $s(44))) : $c(0)) (or(and($a(1) $s(16)) and($a(2) $s(45)) and($a(0) $s(41)) and($a(3) $s(20))) : $c(0)) ($c(1) : $s(44)) )
## hash index
44
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 2 0 0.859581144940522 1 0.140418855059478
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 2 0 0.859581144940522 1 0.140418855059478
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 2 0 0.859581144940522 1 0.140418855059478
32 0 1 0 1
33 0 2 0 0.859581144940522 1 0.140418855059478
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 2 0 0.859581144940522 1 0.140418855059478
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 2 0 0.859581144940522 1 0.140418855059478
54 0 2 0 0.859581144940522 1 0.140418855059478
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 2 0 0.859581144940522 1 0.140418855059478
62 0 1 0 1
63 0 1 0 1
64 0 2 0 0.859581144940522 1 0.140418855059478
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 2 0 0.859581144940522 1 0.140418855059478
72 0 1 0 1
73 0 2 0 0.859581144940522 1 0.140418855059478
74 0 2 0 0.859581144940522 1 0.140418855059478
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 0 2 0 0.859581144940522 1 0.140418855059478
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 1 0 1
172 0 2 0 0.859581144940522 1 0.140418855059478
173 0 2 0 0.859581144940522 1 0.140418855059478
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 2 0 0.859581144940522 1 0.140418855059478
182 0 2 0 0.859581144940522 1 0.140418855059478
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 2 0 0.859581144940522 1 0.140418855059478
192 0 2 0 0.859581144940522 1 0.140418855059478
193 0 2 0 0.859581144940522 1 0.140418855059478
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 1 0 1
202 0 2 0 0.859581144940522 1 0.140418855059478
203 0 1 0 1
204 0 2 0 0.859581144940522 1 0.140418855059478
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 1 0 1
212 0 2 0 0.859581144940522 1 0.140418855059478
213 0 2 0 0.859581144940522 1 0.140418855059478
214 0 2 0 0.859581144940522 1 0.140418855059478
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 0 2 0 0.859581144940522 1 0.140418855059478
222 0 2 0 0.859581144940522 1 0.140418855059478
223 0 1 0 1
224 0 2 0 0.859581144940522 1 0.140418855059478
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 2 0 0.859581144940522 1 0.140418855059478
232 0 2 0 0.859581144940522 1 0.140418855059478
233 0 2 0 0.859581144940522 1 0.140418855059478
234 0 2 0 0.859581144940522 1 0.140418855059478
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
25
## name
robot-at(x86, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(45)) and($a(2) $s(45)) and($a(0) $s(45)) and($a(3) $s(45))) : $c(0)) (or(and($a(1) $s(44)) and($a(2) $s(46)) and($a(0) $s(42)) and($a(3) $s(21))) : Bernoulli($c(0.186500573116872))) ($c(1) : $s(45)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(45)) and($a(2) $s(45)) and($a(0) $s(45)) and($a(3) $s(45))) : $c(0)) (or(and($a(1) $s(44)) and($a(2) $s(46)) and($a(0) $s(42)) and($a(3) $s(21))) : $c(0)) ($c(1) : $s(45)) )
## hash index
45
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 2 0 0.813499426883128 1 0.186500573116872
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 2 0 0.813499426883128 1 0.186500573116872
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 2 0 0.813499426883128 1 0.186500573116872
32 0 1 0 1
33 0 1 0 1
34 0 2 0 0.813499426883128 1 0.186500573116872
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 2 0 0.813499426883128 1 0.186500573116872
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 2 0 0.813499426883128 1 0.186500573116872
52 0 1 0 1
53 0 2 0 0.813499426883128 1 0.186500573116872
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 2 0 0.813499426883128 1 0.186500573116872
64 0 2 0 0.813499426883128 1 0.186500573116872
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 2 0 0.813499426883128 1 0.186500573116872
72 0 1 0 1
73 0 2 0 0.813499426883128 1 0.186500573116872
74 0 2 0 0.813499426883128 1 0.186500573116872
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 0 2 0 0.813499426883128 1 0.186500573116872
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 2 0 0.813499426883128 1 0.186500573116872
172 0 2 0 0.813499426883128 1 0.186500573116872
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 1 0 1
182 0 2 0 0.813499426883128 1 0.186500573116872
183 0 1 0 1
184 0 2 0 0.813499426883128 1 0.186500573116872
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 2 0 0.813499426883128 1 0.186500573116872
192 0 2 0 0.813499426883128 1 0.186500573116872
193 0 1 0 1
194 0 2 0 0.813499426883128 1 0.186500573116872
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 1 0 1
202 0 2 0 0.813499426883128 1 0.186500573116872
203 0 2 0 0.813499426883128 1 0.186500573116872
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 2 0 0.813499426883128 1 0.186500573116872
212 0 2 0 0.813499426883128 1 0.186500573116872
213 0 2 0 0.813499426883128 1 0.186500573116872
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 0 1 0 1
222 0 2 0 0.813499426883128 1 0.186500573116872
223 0 2 0 0.813499426883128 1 0.186500573116872
224 0 2 0 0.813499426883128 1 0.186500573116872
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 2 0 0.813499426883128 1 0.186500573116872
232 0 2 0 0.813499426883128 1 0.186500573116872
233 0 2 0 0.813499426883128 1 0.186500573116872
234 0 2 0 0.813499426883128 1 0.186500573116872
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
26
## name
robot-at(x86, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(46)) and($a(2) $s(46)) and($a(0) $s(46)) and($a(3) $s(46))) : $c(0)) (or(and($a(1) $s(45)) and($a(2) $s(17)) and($a(0) $s(43)) and($a(3) $s(22))) : Bernoulli($c(0.166935871872637))) ($c(1) : $s(46)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(46)) and($a(2) $s(46)) and($a(0) $s(46)) and($a(3) $s(46))) : $c(0)) (or(and($a(1) $s(45)) and($a(2) $s(17)) and($a(0) $s(43)) and($a(3) $s(22))) : $c(0)) ($c(1) : $s(46)) )
## hash index
46
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 2 0 0.833064128127363 1 0.166935871872637
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 2 0 0.833064128127363 1 0.166935871872637
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 2 0 0.833064128127363 1 0.166935871872637
32 0 2 0 0.833064128127363 1 0.166935871872637
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 2 0 0.833064128127363 1 0.166935871872637
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 2 0 0.833064128127363 1 0.166935871872637
53 0 1 0 1
54 0 2 0 0.833064128127363 1 0.166935871872637
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 2 0 0.833064128127363 1 0.166935871872637
62 0 1 0 1
63 0 1 0 1
64 0 2 0 0.833064128127363 1 0.166935871872637
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 2 0 0.833064128127363 1 0.166935871872637
72 0 2 0 0.833064128127363 1 0.166935871872637
73 0 1 0 1
74 0 2 0 0.833064128127363 1 0.166935871872637
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 1 0 1
83 0 2 0 0.833064128127363 1 0.166935871872637
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 2 0 0.833064128127363 1 0.166935871872637
93 0 2 0 0.833064128127363 1 0.166935871872637
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 0 2 0 0.833064128127363 1 0.166935871872637
102 0 1 0 1
103 0 2 0 0.833064128127363 1 0.166935871872637
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 2 0 0.833064128127363 1 0.166935871872637
112 0 2 0 0.833064128127363 1 0.166935871872637
113 0 2 0 0.833064128127363 1 0.166935871872637
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 0 1 0 1
122 0 1 0 1
123 0 2 0 0.833064128127363 1 0.166935871872637
124 0 2 0 0.833064128127363 1 0.166935871872637
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 0 1 0 1
132 0 2 0 0.833064128127363 1 0.166935871872637
133 0 2 0 0.833064128127363 1 0.166935871872637
134 0 2 0 0.833064128127363 1 0.166935871872637
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 0 2 0 0.833064128127363 1 0.166935871872637
142 0 1 0 1
143 0 2 0 0.833064128127363 1 0.166935871872637
144 0 2 0 0.833064128127363 1 0.166935871872637
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 2 0 0.833064128127363 1 0.166935871872637
152 0 2 0 0.833064128127363 1 0.166935871872637
153 0 2 0 0.833064128127363 1 0.166935871872637
154 0 2 0 0.833064128127363 1 0.166935871872637
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 1 1 1 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 1 1 1 1
171 0 1 0 1
172 0 1 0 1
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 1 1 1 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 1 1 1 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
27
## name
robot-at(x9, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(47)) and($a(2) $s(47)) and($a(0) $s(47)) and($a(3) $s(47))) : $c(0)) (or(and($a(1) $s(18)) and($a(2) $s(48)) and($a(0) $s(38)) and($a(3) $s(23))) : Bernoulli($c(0.848039506417182))) ($c(1) : $s(47)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(47)) and($a(2) $s(47)) and($a(0) $s(47)) and($a(3) $s(47))) : $c(0)) (or(and($a(1) $s(18)) and($a(2) $s(48)) and($a(0) $s(38)) and($a(3) $s(23))) : $c(1)) ($c(1) : $s(47)) )
## hash index
47
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 1 2 0 0.151960493582818 1 0.848039506417182
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 1 2 0 0.151960493582818 1 0.848039506417182
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 1 2 0 0.151960493582818 1 0.848039506417182
32 0 1 0 1
33 1 2 0 0.151960493582818 1 0.848039506417182
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 1 2 0 0.151960493582818 1 0.848039506417182
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 1 2 0 0.151960493582818 1 0.848039506417182
54 1 2 0 0.151960493582818 1 0.848039506417182
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 1 2 0 0.151960493582818 1 0.848039506417182
62 0 1 0 1
63 0 1 0 1
64 1 2 0 0.151960493582818 1 0.848039506417182
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 1 2 0 0.151960493582818 1 0.848039506417182
72 0 1 0 1
73 1 2 0 0.151960493582818 1 0.848039506417182
74 1 2 0 0.151960493582818 1 0.848039506417182
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 1 2 0 0.151960493582818 1 0.848039506417182
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 1 0 1
172 1 2 0 0.151960493582818 1 0.848039506417182
173 1 2 0 0.151960493582818 1 0.848039506417182
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 1 2 0 0.151960493582818 1 0.848039506417182
182 1 2 0 0.151960493582818 1 0.848039506417182
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 1 2 0 0.151960493582818 1 0.848039506417182
192 1 2 0 0.151960493582818 1 0.848039506417182
193 1 2 0 0.151960493582818 1 0.848039506417182
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 1 0 1
202 1 2 0 0.151960493582818 1 0.848039506417182
203 0 1 0 1
204 1 2 0 0.151960493582818 1 0.848039506417182
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 1 0 1
212 1 2 0 0.151960493582818 1 0.848039506417182
213 1 2 0 0.151960493582818 1 0.848039506417182
214 1 2 0 0.151960493582818 1 0.848039506417182
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 1 2 0 0.151960493582818 1 0.848039506417182
222 1 2 0 0.151960493582818 1 0.848039506417182
223 0 1 0 1
224 1 2 0 0.151960493582818 1 0.848039506417182
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 1 2 0 0.151960493582818 1 0.848039506417182
232 1 2 0 0.151960493582818 1 0.848039506417182
233 1 2 0 0.151960493582818 1 0.848039506417182
234 1 2 0 0.151960493582818 1 0.848039506417182
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
28
## name
robot-at(x9, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(48)) and($a(2) $s(48)) and($a(0) $s(48)) and($a(3) $s(48))) : $c(0)) (or(and($a(1) $s(47)) and($a(2) $s(49)) and($a(0) $s(39)) and($a(3) $s(24))) : Bernoulli($c(0.850783082139161))) ($c(1) : $s(48)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(48)) and($a(2) $s(48)) and($a(0) $s(48)) and($a(3) $s(48))) : $c(0)) (or(and($a(1) $s(47)) and($a(2) $s(49)) and($a(0) $s(39)) and($a(3) $s(24))) : $c(1)) ($c(1) : $s(48)) )
## hash index
48
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 1 2 0 0.149216917860839 1 0.850783082139161
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 1 2 0 0.149216917860839 1 0.850783082139161
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 1 2 0 0.149216917860839 1 0.850783082139161
32 0 1 0 1
33 0 1 0 1
34 1 2 0 0.149216917860839 1 0.850783082139161
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 1 2 0 0.149216917860839 1 0.850783082139161
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 1 2 0 0.149216917860839 1 0.850783082139161
52 0 1 0 1
53 1 2 0 0.149216917860839 1 0.850783082139161
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 1 2 0 0.149216917860839 1 0.850783082139161
64 1 2 0 0.149216917860839 1 0.850783082139161
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 1 2 0 0.149216917860839 1 0.850783082139161
72 0 1 0 1
73 1 2 0 0.149216917860839 1 0.850783082139161
74 1 2 0 0.149216917860839 1 0.850783082139161
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 1 1 1 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 1 1 1 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 1 1 1 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 1 1 1 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 1 1 1 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 1 1 1 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 1 1 1 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 1 1 1 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 0 1 0 1
161 0 1 0 1
162 1 2 0 0.149216917860839 1 0.850783082139161
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 1 2 0 0.149216917860839 1 0.850783082139161
172 1 2 0 0.149216917860839 1 0.850783082139161
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 0 1 0 1
181 0 1 0 1
182 1 2 0 0.149216917860839 1 0.850783082139161
183 0 1 0 1
184 1 2 0 0.149216917860839 1 0.850783082139161
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 1 2 0 0.149216917860839 1 0.850783082139161
192 1 2 0 0.149216917860839 1 0.850783082139161
193 0 1 0 1
194 1 2 0 0.149216917860839 1 0.850783082139161
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 0 1 0 1
201 0 1 0 1
202 1 2 0 0.149216917860839 1 0.850783082139161
203 1 2 0 0.149216917860839 1 0.850783082139161
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 1 2 0 0.149216917860839 1 0.850783082139161
212 1 2 0 0.149216917860839 1 0.850783082139161
213 1 2 0 0.149216917860839 1 0.850783082139161
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 0 1 0 1
221 0 1 0 1
222 1 2 0 0.149216917860839 1 0.850783082139161
223 1 2 0 0.149216917860839 1 0.850783082139161
224 1 2 0 0.149216917860839 1 0.850783082139161
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 1 2 0 0.149216917860839 1 0.850783082139161
232 1 2 0 0.149216917860839 1 0.850783082139161
233 1 2 0 0.149216917860839 1 0.850783082139161
234 1 2 0 0.149216917860839 1 0.850783082139161
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
29
## name
robot-at(x9, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(1) and($a(1) $s(49)) and($a(2) $s(49)) and($a(0) $s(49)) and($a(3) $s(49))) : $c(0)) (or(and($a(1) $s(48)) and($a(2) $s(19)) and($a(0) $s(40)) and($a(3) $s(25))) : Bernoulli($c(0.859086793329981))) ($c(1) : $s(49)) )
## determinized formula
switch( (or($s(1) and($a(1) $s(49)) and($a(2) $s(49)) and($a(0) $s(49)) and($a(3) $s(49))) : $c(0)) (or(and($a(1) $s(48)) and($a(2) $s(19)) and($a(0) $s(40)) and($a(3) $s(25))) : $c(1)) ($c(1) : $s(49)) )
## hash index
49
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
320
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 1 2 0 0.140913206670019 1 0.859086793329981
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 0 1 0 1
20 0 1 0 1
21 1 2 0 0.140913206670019 1 0.859086793329981
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 1 2 0 0.140913206670019 1 0.859086793329981
32 1 2 0 0.140913206670019 1 0.859086793329981
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 0 1 0 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 1 2 0 0.140913206670019 1 0.859086793329981
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 1 2 0 0.140913206670019 1 0.859086793329981
53 0 1 0 1
54 1 2 0 0.140913206670019 1 0.859086793329981
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 0 1 0 1
60 0 1 0 1
61 1 2 0 0.140913206670019 1 0.859086793329981
62 0 1 0 1
63 0 1 0 1
64 1 2 0 0.140913206670019 1 0.859086793329981
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 1 2 0 0.140913206670019 1 0.859086793329981
72 1 2 0 0.140913206670019 1 0.859086793329981
73 0 1 0 1
74 1 2 0 0.140913206670019 1 0.859086793329981
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 0 1 0 1
80 0 1 0 1
81 0 1 0 1
82 0 1 0 1
83 1 2 0 0.140913206670019 1 0.859086793329981
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 1 2 0 0.140913206670019 1 0.859086793329981
93 1 2 0 0.140913206670019 1 0.859086793329981
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 0 1 0 1
100 0 1 0 1
101 1 2 0 0.140913206670019 1 0.859086793329981
102 0 1 0 1
103 1 2 0 0.140913206670019 1 0.859086793329981
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 1 2 0 0.140913206670019 1 0.859086793329981
112 1 2 0 0.140913206670019 1 0.859086793329981
113 1 2 0 0.140913206670019 1 0.859086793329981
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 0 1 0 1
120 0 1 0 1
121 0 1 0 1
122 0 1 0 1
123 1 2 0 0.140913206670019 1 0.859086793329981
124 1 2 0 0.140913206670019 1 0.859086793329981
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 0 1 0 1
132 1 2 0 0.140913206670019 1 0.859086793329981
133 1 2 0 0.140913206670019 1 0.859086793329981
134 1 2 0 0.140913206670019 1 0.859086793329981
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 0 1 0 1
140 0 1 0 1
141 1 2 0 0.140913206670019 1 0.859086793329981
142 0 1 0 1
143 1 2 0 0.140913206670019 1 0.859086793329981
144 1 2 0 0.140913206670019 1 0.859086793329981
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 1 2 0 0.140913206670019 1 0.859086793329981
152 1 2 0 0.140913206670019 1 0.859086793329981
153 1 2 0 0.140913206670019 1 0.859086793329981
154 1 2 0 0.140913206670019 1 0.859086793329981
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 0 1 0 1
160 1 1 1 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 1 1 1 1
171 0 1 0 1
172 0 1 0 1
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 0 1 0 1
180 1 1 1 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 1 1 1 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 0 1 0 1
200 1 1 1 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 1 1 1 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 0 1 0 1
220 1 1 1 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 1 1 1 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 0 1 0 1
240 1 1 1 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 1 1 1 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 0 1 0 1
260 1 1 1 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 1 1 1 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 0 1 0 1
280 1 1 1 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 1 1 1 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 0 1 0 1
300 1 1 1 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 1 1 1 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 0 1 0 1
## kleene caching type
VECTOR
## kleene caching vec size
3645
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####REWARD#####
## formula
-($c(0) ~($s(1)))
## min
-1
## max
0
## independent from actions
1
## hash index
50
## caching type
VECTOR
## precomputed results
2
0 -1
1 0
## kleene caching type
VECTOR
## kleene caching vec size
3
## action hash keys
0 0
1 0
2 0
3 0
4 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 1 0 0 
## relevant preconditions
0


## index
4
## state
1 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## state fluent hash keys (first line is the number of keys)
3
0 5
16 5
20 5
## kleene state fluent hash keys (first line is the number of keys)
3
0 5
16 5
20 5

## index
1
## state hash key (for each value in the domain)
0 2
## state fluent hash keys (first line is the number of keys)
51
0 10
1 5
2 5
3 5
4 5
5 5
6 5
7 5
8 5
9 5
10 5
11 5
12 5
13 5
14 5
15 5
16 10
17 5
18 5
19 5
20 10
21 5
22 5
23 5
24 5
25 5
26 5
27 5
28 5
29 5
30 5
31 5
32 5
33 5
34 5
35 5
36 5
37 5
38 5
39 5
40 5
41 5
42 5
43 5
44 5
45 5
46 5
47 5
48 5
49 5
50 1
## kleene state fluent hash keys (first line is the number of keys)
51
0 15
1 5
2 5
3 5
4 5
5 5
6 5
7 5
8 5
9 5
10 5
11 5
12 5
13 5
14 5
15 5
16 15
17 5
18 5
19 5
20 15
21 5
22 5
23 5
24 5
25 5
26 5
27 5
28 5
29 5
30 5
31 5
32 5
33 5
34 5
35 5
36 5
37 5
38 5
39 5
40 5
41 5
42 5
43 5
44 5
45 5
46 5
47 5
48 5
49 5
50 1

## index
2
## state hash key (for each value in the domain)
0 4
## state fluent hash keys (first line is the number of keys)
4
2 10
4 10
18 10
23 10
## kleene state fluent hash keys (first line is the number of keys)
4
2 15
4 15
18 15
23 15

## index
3
## state hash key (for each value in the domain)
0 8
## state fluent hash keys (first line is the number of keys)
4
3 10
5 10
19 10
25 10
## kleene state fluent hash keys (first line is the number of keys)
4
3 15
5 15
19 15
25 15

## index
4
## state hash key (for each value in the domain)
0 16
## state fluent hash keys (first line is the number of keys)
4
2 20
4 20
6 10
26 10
## kleene state fluent hash keys (first line is the number of keys)
4
2 45
4 45
6 15
26 15

## index
5
## state hash key (for each value in the domain)
0 32
## state fluent hash keys (first line is the number of keys)
4
3 20
5 20
7 10
28 10
## kleene state fluent hash keys (first line is the number of keys)
4
3 45
5 45
7 15
28 15

## index
6
## state hash key (for each value in the domain)
0 64
## state fluent hash keys (first line is the number of keys)
4
4 40
6 20
8 10
29 10
## kleene state fluent hash keys (first line is the number of keys)
4
4 135
6 45
8 15
29 15

## index
7
## state hash key (for each value in the domain)
0 128
## state fluent hash keys (first line is the number of keys)
4
5 40
7 20
9 10
31 10
## kleene state fluent hash keys (first line is the number of keys)
4
5 135
7 45
9 15
31 15

## index
8
## state hash key (for each value in the domain)
0 256
## state fluent hash keys (first line is the number of keys)
4
6 40
8 20
10 10
32 10
## kleene state fluent hash keys (first line is the number of keys)
4
6 135
8 45
10 15
32 15

## index
9
## state hash key (for each value in the domain)
0 512
## state fluent hash keys (first line is the number of keys)
4
7 40
9 20
11 10
34 10
## kleene state fluent hash keys (first line is the number of keys)
4
7 135
9 45
11 15
34 15

## index
10
## state hash key (for each value in the domain)
0 1024
## state fluent hash keys (first line is the number of keys)
4
8 40
10 20
14 10
35 10
## kleene state fluent hash keys (first line is the number of keys)
4
8 135
10 45
14 15
35 15

## index
11
## state hash key (for each value in the domain)
0 2048
## state fluent hash keys (first line is the number of keys)
4
9 40
11 20
15 10
37 10
## kleene state fluent hash keys (first line is the number of keys)
4
9 135
11 45
15 15
37 15

## index
12
## state hash key (for each value in the domain)
0 4096
## state fluent hash keys (first line is the number of keys)
3
12 10
18 20
38 10
## kleene state fluent hash keys (first line is the number of keys)
3
12 15
18 45
38 15

## index
13
## state hash key (for each value in the domain)
0 8192
## state fluent hash keys (first line is the number of keys)
3
13 10
19 20
40 10
## kleene state fluent hash keys (first line is the number of keys)
3
13 15
19 45
40 15

## index
14
## state hash key (for each value in the domain)
0 16384
## state fluent hash keys (first line is the number of keys)
4
10 40
14 20
16 20
41 10
## kleene state fluent hash keys (first line is the number of keys)
4
10 135
14 45
16 45
41 15

## index
15
## state hash key (for each value in the domain)
0 32768
## state fluent hash keys (first line is the number of keys)
4
11 40
15 20
17 10
43 10
## kleene state fluent hash keys (first line is the number of keys)
4
11 135
15 45
17 15
43 15

## index
16
## state hash key (for each value in the domain)
0 65536
## state fluent hash keys (first line is the number of keys)
4
0 20
14 40
16 40
44 10
## kleene state fluent hash keys (first line is the number of keys)
4
0 45
14 135
16 135
44 15

## index
17
## state hash key (for each value in the domain)
0 131072
## state fluent hash keys (first line is the number of keys)
4
1 10
15 40
17 20
46 10
## kleene state fluent hash keys (first line is the number of keys)
4
1 15
15 135
17 45
46 15

## index
18
## state hash key (for each value in the domain)
0 262144
## state fluent hash keys (first line is the number of keys)
4
2 40
12 20
18 40
47 10
## kleene state fluent hash keys (first line is the number of keys)
4
2 135
12 45
18 135
47 15

## index
19
## state hash key (for each value in the domain)
0 524288
## state fluent hash keys (first line is the number of keys)
4
3 40
13 20
19 40
49 10
## kleene state fluent hash keys (first line is the number of keys)
4
3 135
13 45
19 135
49 15


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1048576
## state fluent hash keys (first line is the number of keys)
4
0 40
20 20
21 10
44 20
## kleene state fluent hash keys (first line is the number of keys)
4
0 135
20 45
21 15
44 45

## index
1
## state hash key (for each value in the domain)
0 2097152
## state fluent hash keys (first line is the number of keys)
4
20 40
21 20
22 10
45 10
## kleene state fluent hash keys (first line is the number of keys)
4
20 135
21 45
22 15
45 15

## index
2
## state hash key (for each value in the domain)
0 4194304
## state fluent hash keys (first line is the number of keys)
4
1 20
21 40
22 20
46 20
## kleene state fluent hash keys (first line is the number of keys)
4
1 45
21 135
22 45
46 45

## index
3
## state hash key (for each value in the domain)
0 8388608
## state fluent hash keys (first line is the number of keys)
5
2 80
23 20
24 10
26 20
47 20
## kleene state fluent hash keys (first line is the number of keys)
5
2 405
23 45
24 15
26 45
47 45

## index
4
## state hash key (for each value in the domain)
0 16777216
## state fluent hash keys (first line is the number of keys)
5
23 40
24 20
25 20
27 10
48 10
## kleene state fluent hash keys (first line is the number of keys)
5
23 135
24 45
25 45
27 15
48 15

## index
5
## state hash key (for each value in the domain)
0 33554432
## state fluent hash keys (first line is the number of keys)
5
3 80
24 40
25 40
28 20
49 20
## kleene state fluent hash keys (first line is the number of keys)
5
3 405
24 135
25 135
28 45
49 45

## index
6
## state hash key (for each value in the domain)
0 67108864
## state fluent hash keys (first line is the number of keys)
5
4 80
23 80
26 40
27 20
29 20
## kleene state fluent hash keys (first line is the number of keys)
5
4 405
23 405
26 135
27 45
29 45

## index
7
## state hash key (for each value in the domain)
0 134217728
## state fluent hash keys (first line is the number of keys)
5
24 80
26 80
27 40
28 40
30 10
## kleene state fluent hash keys (first line is the number of keys)
5
24 405
26 405
27 135
28 135
30 15

## index
8
## state hash key (for each value in the domain)
0 268435456
## state fluent hash keys (first line is the number of keys)
5
5 80
25 80
27 80
28 80
31 20
## kleene state fluent hash keys (first line is the number of keys)
5
5 405
25 405
27 405
28 405
31 45

## index
9
## state hash key (for each value in the domain)
0 536870912
## state fluent hash keys (first line is the number of keys)
5
6 80
26 160
29 40
30 20
32 20
## kleene state fluent hash keys (first line is the number of keys)
5
6 405
26 1215
29 135
30 45
32 45

## index
10
## state hash key (for each value in the domain)
0 1073741824
## state fluent hash keys (first line is the number of keys)
5
27 160
29 80
30 40
31 40
33 10
## kleene state fluent hash keys (first line is the number of keys)
5
27 1215
29 405
30 135
31 135
33 15

## index
11
## state hash key (for each value in the domain)
0 2147483648
## state fluent hash keys (first line is the number of keys)
5
7 80
28 160
30 80
31 80
34 20
## kleene state fluent hash keys (first line is the number of keys)
5
7 405
28 1215
30 405
31 405
34 45

## index
12
## state hash key (for each value in the domain)
0 4294967296
## state fluent hash keys (first line is the number of keys)
5
8 80
29 160
32 40
33 20
35 20
## kleene state fluent hash keys (first line is the number of keys)
5
8 405
29 1215
32 135
33 45
35 45

## index
13
## state hash key (for each value in the domain)
0 8589934592
## state fluent hash keys (first line is the number of keys)
5
30 160
32 80
33 40
34 40
36 10
## kleene state fluent hash keys (first line is the number of keys)
5
30 1215
32 405
33 135
34 135
36 15

## index
14
## state hash key (for each value in the domain)
0 17179869184
## state fluent hash keys (first line is the number of keys)
5
9 80
31 160
33 80
34 80
37 20
## kleene state fluent hash keys (first line is the number of keys)
5
9 405
31 1215
33 405
34 405
37 45

## index
15
## state hash key (for each value in the domain)
0 34359738368
## state fluent hash keys (first line is the number of keys)
5
10 80
32 160
35 40
36 20
41 20
## kleene state fluent hash keys (first line is the number of keys)
5
10 405
32 1215
35 135
36 45
41 45

## index
16
## state hash key (for each value in the domain)
0 68719476736
## state fluent hash keys (first line is the number of keys)
5
33 160
35 80
36 40
37 40
42 10
## kleene state fluent hash keys (first line is the number of keys)
5
33 1215
35 405
36 135
37 135
42 15

## index
17
## state hash key (for each value in the domain)
0 137438953472
## state fluent hash keys (first line is the number of keys)
5
11 80
34 160
36 80
37 80
43 20
## kleene state fluent hash keys (first line is the number of keys)
5
11 405
34 1215
36 405
37 405
43 45

## index
18
## state hash key (for each value in the domain)
0 274877906944
## state fluent hash keys (first line is the number of keys)
4
12 40
38 20
39 10
47 40
## kleene state fluent hash keys (first line is the number of keys)
4
12 135
38 45
39 15
47 135

## index
19
## state hash key (for each value in the domain)
0 549755813888
## state fluent hash keys (first line is the number of keys)
4
38 40
39 20
40 20
48 20
## kleene state fluent hash keys (first line is the number of keys)
4
38 135
39 45
40 45
48 45

## index
20
## state hash key (for each value in the domain)
0 1099511627776
## state fluent hash keys (first line is the number of keys)
4
13 40
39 40
40 40
49 40
## kleene state fluent hash keys (first line is the number of keys)
4
13 135
39 135
40 135
49 135

## index
21
## state hash key (for each value in the domain)
0 2199023255552
## state fluent hash keys (first line is the number of keys)
5
14 80
35 160
41 40
42 20
44 40
## kleene state fluent hash keys (first line is the number of keys)
5
14 405
35 1215
41 135
42 45
44 135

## index
22
## state hash key (for each value in the domain)
0 4398046511104
## state fluent hash keys (first line is the number of keys)
5
36 160
41 80
42 40
43 40
45 20
## kleene state fluent hash keys (first line is the number of keys)
5
36 1215
41 405
42 135
43 135
45 45

## index
23
## state hash key (for each value in the domain)
0 8796093022208
## state fluent hash keys (first line is the number of keys)
5
15 80
37 160
42 80
43 80
46 40
## kleene state fluent hash keys (first line is the number of keys)
5
15 405
37 1215
42 405
43 405
46 135

## index
24
## state hash key (for each value in the domain)
0 17592186044416
## state fluent hash keys (first line is the number of keys)
5
16 80
20 80
41 160
44 80
45 40
## kleene state fluent hash keys (first line is the number of keys)
5
16 405
20 405
41 1215
44 405
45 135

## index
25
## state hash key (for each value in the domain)
0 35184372088832
## state fluent hash keys (first line is the number of keys)
5
21 80
42 160
44 160
45 80
46 80
## kleene state fluent hash keys (first line is the number of keys)
5
21 405
42 1215
44 1215
45 405
46 405

## index
26
## state hash key (for each value in the domain)
0 70368744177664
## state fluent hash keys (first line is the number of keys)
5
17 40
22 40
43 160
45 160
46 160
## kleene state fluent hash keys (first line is the number of keys)
5
17 135
22 135
43 1215
45 1215
46 1215

## index
27
## state hash key (for each value in the domain)
0 140737488355328
## state fluent hash keys (first line is the number of keys)
5
18 80
23 160
38 80
47 80
48 40
## kleene state fluent hash keys (first line is the number of keys)
5
18 405
23 1215
38 405
47 405
48 135

## index
28
## state hash key (for each value in the domain)
0 281474976710656
## state fluent hash keys (first line is the number of keys)
5
24 160
39 80
47 160
48 80
49 80
## kleene state fluent hash keys (first line is the number of keys)
5
24 1215
39 405
47 1215
48 405
49 405

## index
29
## state hash key (for each value in the domain)
0 562949953421312
## state fluent hash keys (first line is the number of keys)
5
19 80
25 160
40 80
48 160
49 160
## kleene state fluent hash keys (first line is the number of keys)
5
19 405
25 1215
40 405
48 1215
49 1215



#####TRAINING SET#####
14
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
