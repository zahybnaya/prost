#####TASK#####
## name
sysadmin_inst_mdp__10
## horizon
40
## discount factor
1
## number of action fluents
50
## number of det state fluents
0
## number of prob state fluents
50
## number of preconds
0
## number of actions
51
## number of hashing functions
51
## initial state
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
0
## method to calculate the final reward
NOOP
## 1 if reward formula allows reward lock detection and a reward lock was found during task analysis
0
## 1 if an unreasonable action was detected
0
## 1 if an unreasonable action was detected in the determinization
1
## number of states that were encountered during task analysis
512
## number of unique states that were encountered during task analysis
485
## number of states with only one applicable reasonable action that were encountered during task analysis
0
## number of unique states with only one applicable reasonable action that were encountered during task analysis
0


#####ACTION FLUENTS#####
## index
0
## name
reboot(c1)
## number of values
2
## values
0 false
1 true

## index
1
## name
reboot(c10)
## number of values
2
## values
0 false
1 true

## index
2
## name
reboot(c11)
## number of values
2
## values
0 false
1 true

## index
3
## name
reboot(c12)
## number of values
2
## values
0 false
1 true

## index
4
## name
reboot(c13)
## number of values
2
## values
0 false
1 true

## index
5
## name
reboot(c14)
## number of values
2
## values
0 false
1 true

## index
6
## name
reboot(c15)
## number of values
2
## values
0 false
1 true

## index
7
## name
reboot(c16)
## number of values
2
## values
0 false
1 true

## index
8
## name
reboot(c17)
## number of values
2
## values
0 false
1 true

## index
9
## name
reboot(c18)
## number of values
2
## values
0 false
1 true

## index
10
## name
reboot(c19)
## number of values
2
## values
0 false
1 true

## index
11
## name
reboot(c2)
## number of values
2
## values
0 false
1 true

## index
12
## name
reboot(c20)
## number of values
2
## values
0 false
1 true

## index
13
## name
reboot(c21)
## number of values
2
## values
0 false
1 true

## index
14
## name
reboot(c22)
## number of values
2
## values
0 false
1 true

## index
15
## name
reboot(c23)
## number of values
2
## values
0 false
1 true

## index
16
## name
reboot(c24)
## number of values
2
## values
0 false
1 true

## index
17
## name
reboot(c25)
## number of values
2
## values
0 false
1 true

## index
18
## name
reboot(c26)
## number of values
2
## values
0 false
1 true

## index
19
## name
reboot(c27)
## number of values
2
## values
0 false
1 true

## index
20
## name
reboot(c28)
## number of values
2
## values
0 false
1 true

## index
21
## name
reboot(c29)
## number of values
2
## values
0 false
1 true

## index
22
## name
reboot(c3)
## number of values
2
## values
0 false
1 true

## index
23
## name
reboot(c30)
## number of values
2
## values
0 false
1 true

## index
24
## name
reboot(c31)
## number of values
2
## values
0 false
1 true

## index
25
## name
reboot(c32)
## number of values
2
## values
0 false
1 true

## index
26
## name
reboot(c33)
## number of values
2
## values
0 false
1 true

## index
27
## name
reboot(c34)
## number of values
2
## values
0 false
1 true

## index
28
## name
reboot(c35)
## number of values
2
## values
0 false
1 true

## index
29
## name
reboot(c36)
## number of values
2
## values
0 false
1 true

## index
30
## name
reboot(c37)
## number of values
2
## values
0 false
1 true

## index
31
## name
reboot(c38)
## number of values
2
## values
0 false
1 true

## index
32
## name
reboot(c39)
## number of values
2
## values
0 false
1 true

## index
33
## name
reboot(c4)
## number of values
2
## values
0 false
1 true

## index
34
## name
reboot(c40)
## number of values
2
## values
0 false
1 true

## index
35
## name
reboot(c41)
## number of values
2
## values
0 false
1 true

## index
36
## name
reboot(c42)
## number of values
2
## values
0 false
1 true

## index
37
## name
reboot(c43)
## number of values
2
## values
0 false
1 true

## index
38
## name
reboot(c44)
## number of values
2
## values
0 false
1 true

## index
39
## name
reboot(c45)
## number of values
2
## values
0 false
1 true

## index
40
## name
reboot(c46)
## number of values
2
## values
0 false
1 true

## index
41
## name
reboot(c47)
## number of values
2
## values
0 false
1 true

## index
42
## name
reboot(c48)
## number of values
2
## values
0 false
1 true

## index
43
## name
reboot(c49)
## number of values
2
## values
0 false
1 true

## index
44
## name
reboot(c5)
## number of values
2
## values
0 false
1 true

## index
45
## name
reboot(c50)
## number of values
2
## values
0 false
1 true

## index
46
## name
reboot(c6)
## number of values
2
## values
0 false
1 true

## index
47
## name
reboot(c7)
## number of values
2
## values
0 false
1 true

## index
48
## name
reboot(c8)
## number of values
2
## values
0 false
1 true

## index
49
## name
reboot(c9)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####


#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
running(c1)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(0) : $c(1)) ($s(0) : Bernoulli(+(/(*(+($s(1) $s(2) $s(9) $s(32) $s(34) $c(1)) $c(0.5)) $c(6)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(0) : $c(1)) ($s(0) : <=($c(0.5) +(/(*(+($s(1) $s(2) $s(9) $s(32) $s(34) $c(1)) $c(0.5)) $c(6)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
0
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
128
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 1 2 0 0.466666666666667 1 0.533333333333333
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 1 2 0 0.383333333333333 1 0.616666666666667
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 1 2 0 0.383333333333333 1 0.616666666666667
11 1 1 1 1
12 0 2 0 0.99 1 0.01
13 1 1 1 1
14 1 2 0 0.3 1 0.7
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 1 2 0 0.383333333333333 1 0.616666666666667
19 1 1 1 1
20 0 2 0 0.99 1 0.01
21 1 1 1 1
22 1 2 0 0.3 1 0.7
23 1 1 1 1
24 0 2 0 0.99 1 0.01
25 1 1 1 1
26 1 2 0 0.3 1 0.7
27 1 1 1 1
28 0 2 0 0.99 1 0.01
29 1 1 1 1
30 1 2 0 0.216666666666667 1 0.783333333333333
31 1 1 1 1
32 0 2 0 0.99 1 0.01
33 1 1 1 1
34 1 2 0 0.383333333333333 1 0.616666666666667
35 1 1 1 1
36 0 2 0 0.99 1 0.01
37 1 1 1 1
38 1 2 0 0.3 1 0.7
39 1 1 1 1
40 0 2 0 0.99 1 0.01
41 1 1 1 1
42 1 2 0 0.3 1 0.7
43 1 1 1 1
44 0 2 0 0.99 1 0.01
45 1 1 1 1
46 1 2 0 0.216666666666667 1 0.783333333333333
47 1 1 1 1
48 0 2 0 0.99 1 0.01
49 1 1 1 1
50 1 2 0 0.3 1 0.7
51 1 1 1 1
52 0 2 0 0.99 1 0.01
53 1 1 1 1
54 1 2 0 0.216666666666667 1 0.783333333333333
55 1 1 1 1
56 0 2 0 0.99 1 0.01
57 1 1 1 1
58 1 2 0 0.216666666666667 1 0.783333333333333
59 1 1 1 1
60 0 2 0 0.99 1 0.01
61 1 1 1 1
62 1 2 0 0.133333333333333 1 0.866666666666667
63 1 1 1 1
64 0 2 0 0.99 1 0.01
65 1 1 1 1
66 1 2 0 0.383333333333333 1 0.616666666666667
67 1 1 1 1
68 0 2 0 0.99 1 0.01
69 1 1 1 1
70 1 2 0 0.3 1 0.7
71 1 1 1 1
72 0 2 0 0.99 1 0.01
73 1 1 1 1
74 1 2 0 0.3 1 0.7
75 1 1 1 1
76 0 2 0 0.99 1 0.01
77 1 1 1 1
78 1 2 0 0.216666666666667 1 0.783333333333333
79 1 1 1 1
80 0 2 0 0.99 1 0.01
81 1 1 1 1
82 1 2 0 0.3 1 0.7
83 1 1 1 1
84 0 2 0 0.99 1 0.01
85 1 1 1 1
86 1 2 0 0.216666666666667 1 0.783333333333333
87 1 1 1 1
88 0 2 0 0.99 1 0.01
89 1 1 1 1
90 1 2 0 0.216666666666667 1 0.783333333333333
91 1 1 1 1
92 0 2 0 0.99 1 0.01
93 1 1 1 1
94 1 2 0 0.133333333333333 1 0.866666666666667
95 1 1 1 1
96 0 2 0 0.99 1 0.01
97 1 1 1 1
98 1 2 0 0.3 1 0.7
99 1 1 1 1
100 0 2 0 0.99 1 0.01
101 1 1 1 1
102 1 2 0 0.216666666666667 1 0.783333333333333
103 1 1 1 1
104 0 2 0 0.99 1 0.01
105 1 1 1 1
106 1 2 0 0.216666666666667 1 0.783333333333333
107 1 1 1 1
108 0 2 0 0.99 1 0.01
109 1 1 1 1
110 1 2 0 0.133333333333333 1 0.866666666666667
111 1 1 1 1
112 0 2 0 0.99 1 0.01
113 1 1 1 1
114 1 2 0 0.216666666666667 1 0.783333333333333
115 1 1 1 1
116 0 2 0 0.99 1 0.01
117 1 1 1 1
118 1 2 0 0.133333333333333 1 0.866666666666667
119 1 1 1 1
120 0 2 0 0.99 1 0.01
121 1 1 1 1
122 1 2 0 0.133333333333333 1 0.866666666666667
123 1 1 1 1
124 0 2 0 0.99 1 0.01
125 1 1 1 1
126 1 2 0 0.05 1 0.95
127 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
1458
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 1

## index
1
## name
running(c10)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(1) : $c(1)) ($s(1) : Bernoulli(+(/(*(+($s(49) $s(10) $s(17) $s(32) $c(1)) $c(0.5)) $c(5)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(1) : $c(1)) ($s(1) : <=($c(0.5) +(/(*(+($s(49) $s(10) $s(17) $s(32) $c(1)) $c(0.5)) $c(5)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
1
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
64
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 1 2 0 0.45 1 0.55
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 1 2 0 0.35 1 0.65
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 1 2 0 0.35 1 0.65
11 1 1 1 1
12 0 2 0 0.99 1 0.01
13 1 1 1 1
14 1 2 0 0.25 1 0.75
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 1 2 0 0.35 1 0.65
19 1 1 1 1
20 0 2 0 0.99 1 0.01
21 1 1 1 1
22 1 2 0 0.25 1 0.75
23 1 1 1 1
24 0 2 0 0.99 1 0.01
25 1 1 1 1
26 1 2 0 0.25 1 0.75
27 1 1 1 1
28 0 2 0 0.99 1 0.01
29 1 1 1 1
30 1 2 0 0.15 1 0.85
31 1 1 1 1
32 0 2 0 0.99 1 0.01
33 1 1 1 1
34 1 2 0 0.35 1 0.65
35 1 1 1 1
36 0 2 0 0.99 1 0.01
37 1 1 1 1
38 1 2 0 0.25 1 0.75
39 1 1 1 1
40 0 2 0 0.99 1 0.01
41 1 1 1 1
42 1 2 0 0.25 1 0.75
43 1 1 1 1
44 0 2 0 0.99 1 0.01
45 1 1 1 1
46 1 2 0 0.15 1 0.85
47 1 1 1 1
48 0 2 0 0.99 1 0.01
49 1 1 1 1
50 1 2 0 0.25 1 0.75
51 1 1 1 1
52 0 2 0 0.99 1 0.01
53 1 1 1 1
54 1 2 0 0.15 1 0.85
55 1 1 1 1
56 0 2 0 0.99 1 0.01
57 1 1 1 1
58 1 2 0 0.15 1 0.85
59 1 1 1 1
60 0 2 0 0.99 1 0.01
61 1 1 1 1
62 1 2 0 0.05 1 0.95
63 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
486
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 1
50 0

## index
2
## name
running(c11)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(2) : $c(1)) ($s(2) : Bernoulli(+(/(*(+($s(32) $c(1)) $c(0.5)) $c(2)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(2) : $c(1)) ($s(2) : <=($c(0.5) +(/(*(+($s(32) $c(1)) $c(0.5)) $c(2)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
2
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
8
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 1 2 0 0.3 1 0.7
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 1 2 0 0.05 1 0.95
7 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
18
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 1
49 0
50 0

## index
3
## name
running(c12)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(3) : $c(1)) ($s(3) : Bernoulli(+(/(*(+($s(5) $c(1)) $c(0.5)) $c(2)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(3) : $c(1)) ($s(3) : <=($c(0.5) +(/(*(+($s(5) $c(1)) $c(0.5)) $c(2)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
3
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
8
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 1 2 0 0.3 1 0.7
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 1 2 0 0.05 1 0.95
7 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
18
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 1
48 0
49 0
50 0

## index
4
## name
running(c13)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(4) : $c(1)) ($s(4) : Bernoulli(+(/(*(+($s(23) $s(28) $s(30) $s(35) $c(1)) $c(0.5)) $c(5)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(4) : $c(1)) ($s(4) : <=($c(0.5) +(/(*(+($s(23) $s(28) $s(30) $s(35) $c(1)) $c(0.5)) $c(5)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
4
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
64
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 1 2 0 0.45 1 0.55
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 1 2 0 0.35 1 0.65
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 1 2 0 0.35 1 0.65
11 1 1 1 1
12 0 2 0 0.99 1 0.01
13 1 1 1 1
14 1 2 0 0.25 1 0.75
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 1 2 0 0.35 1 0.65
19 1 1 1 1
20 0 2 0 0.99 1 0.01
21 1 1 1 1
22 1 2 0 0.25 1 0.75
23 1 1 1 1
24 0 2 0 0.99 1 0.01
25 1 1 1 1
26 1 2 0 0.25 1 0.75
27 1 1 1 1
28 0 2 0 0.99 1 0.01
29 1 1 1 1
30 1 2 0 0.15 1 0.85
31 1 1 1 1
32 0 2 0 0.99 1 0.01
33 1 1 1 1
34 1 2 0 0.35 1 0.65
35 1 1 1 1
36 0 2 0 0.99 1 0.01
37 1 1 1 1
38 1 2 0 0.25 1 0.75
39 1 1 1 1
40 0 2 0 0.99 1 0.01
41 1 1 1 1
42 1 2 0 0.25 1 0.75
43 1 1 1 1
44 0 2 0 0.99 1 0.01
45 1 1 1 1
46 1 2 0 0.15 1 0.85
47 1 1 1 1
48 0 2 0 0.99 1 0.01
49 1 1 1 1
50 1 2 0 0.25 1 0.75
51 1 1 1 1
52 0 2 0 0.99 1 0.01
53 1 1 1 1
54 1 2 0 0.15 1 0.85
55 1 1 1 1
56 0 2 0 0.99 1 0.01
57 1 1 1 1
58 1 2 0 0.15 1 0.85
59 1 1 1 1
60 0 2 0 0.99 1 0.01
61 1 1 1 1
62 1 2 0 0.05 1 0.95
63 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
486
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 1
47 0
48 0
49 0
50 0

## index
5
## name
running(c14)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(5) : $c(1)) ($s(5) : Bernoulli(+(/(*(+($s(9) $s(12) $s(20) $s(27) $c(1)) $c(0.5)) $c(5)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(5) : $c(1)) ($s(5) : <=($c(0.5) +(/(*(+($s(9) $s(12) $s(20) $s(27) $c(1)) $c(0.5)) $c(5)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
5
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
64
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 1 2 0 0.45 1 0.55
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 1 2 0 0.35 1 0.65
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 1 2 0 0.35 1 0.65
11 1 1 1 1
12 0 2 0 0.99 1 0.01
13 1 1 1 1
14 1 2 0 0.25 1 0.75
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 1 2 0 0.35 1 0.65
19 1 1 1 1
20 0 2 0 0.99 1 0.01
21 1 1 1 1
22 1 2 0 0.25 1 0.75
23 1 1 1 1
24 0 2 0 0.99 1 0.01
25 1 1 1 1
26 1 2 0 0.25 1 0.75
27 1 1 1 1
28 0 2 0 0.99 1 0.01
29 1 1 1 1
30 1 2 0 0.15 1 0.85
31 1 1 1 1
32 0 2 0 0.99 1 0.01
33 1 1 1 1
34 1 2 0 0.35 1 0.65
35 1 1 1 1
36 0 2 0 0.99 1 0.01
37 1 1 1 1
38 1 2 0 0.25 1 0.75
39 1 1 1 1
40 0 2 0 0.99 1 0.01
41 1 1 1 1
42 1 2 0 0.25 1 0.75
43 1 1 1 1
44 0 2 0 0.99 1 0.01
45 1 1 1 1
46 1 2 0 0.15 1 0.85
47 1 1 1 1
48 0 2 0 0.99 1 0.01
49 1 1 1 1
50 1 2 0 0.25 1 0.75
51 1 1 1 1
52 0 2 0 0.99 1 0.01
53 1 1 1 1
54 1 2 0 0.15 1 0.85
55 1 1 1 1
56 0 2 0 0.99 1 0.01
57 1 1 1 1
58 1 2 0 0.15 1 0.85
59 1 1 1 1
60 0 2 0 0.99 1 0.01
61 1 1 1 1
62 1 2 0 0.05 1 0.95
63 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
486
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 1
46 0
47 0
48 0
49 0
50 0

## index
6
## name
running(c15)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(6) : $c(1)) ($s(6) : Bernoulli(+(/(*(+($s(26) $s(30) $s(36) $c(1)) $c(0.5)) $c(4)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(6) : $c(1)) ($s(6) : <=($c(0.5) +(/(*(+($s(26) $s(30) $s(36) $c(1)) $c(0.5)) $c(4)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
6
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
32
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 1 2 0 0.425 1 0.575
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 1 2 0 0.3 1 0.7
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 1 2 0 0.3 1 0.7
11 1 1 1 1
12 0 2 0 0.99 1 0.01
13 1 1 1 1
14 1 2 0 0.175 1 0.825
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 1 2 0 0.3 1 0.7
19 1 1 1 1
20 0 2 0 0.99 1 0.01
21 1 1 1 1
22 1 2 0 0.175 1 0.825
23 1 1 1 1
24 0 2 0 0.99 1 0.01
25 1 1 1 1
26 1 2 0 0.175 1 0.825
27 1 1 1 1
28 0 2 0 0.99 1 0.01
29 1 1 1 1
30 1 2 0 0.05 1 0.95
31 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
162
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 1
45 0
46 0
47 0
48 0
49 0
50 0

## index
7
## name
running(c16)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(7) : $c(1)) ($s(7) : Bernoulli(+(/(*(+($s(11) $s(6) $s(21) $c(1)) $c(0.5)) $c(4)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(7) : $c(1)) ($s(7) : <=($c(0.5) +(/(*(+($s(11) $s(6) $s(21) $c(1)) $c(0.5)) $c(4)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
7
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
32
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 1 2 0 0.425 1 0.575
5 1 1 1 1
6 1 2 0 0.3 1 0.7
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 0 2 0 0.99 1 0.01
11 1 1 1 1
12 1 2 0 0.3 1 0.7
13 1 1 1 1
14 1 2 0 0.175 1 0.825
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 0 2 0 0.99 1 0.01
19 1 1 1 1
20 1 2 0 0.3 1 0.7
21 1 1 1 1
22 1 2 0 0.175 1 0.825
23 1 1 1 1
24 0 2 0 0.99 1 0.01
25 1 1 1 1
26 0 2 0 0.99 1 0.01
27 1 1 1 1
28 1 2 0 0.175 1 0.825
29 1 1 1 1
30 1 2 0 0.05 1 0.95
31 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
162
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 1
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
8
## name
running(c17)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(8) : $c(1)) ($s(8) : Bernoulli($c(0.95))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(8) : $c(1)) ($s(8) : $c(1)) ($c(1) : $c(0)) )
## hash index
8
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
4
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 1 2 0 0.05 1 0.95
3 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
6
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 1
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
9
## name
running(c18)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(9) : $c(1)) ($s(9) : Bernoulli(+(/(*(+($s(25) $s(34) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(9) : $c(1)) ($s(9) : <=($c(0.5) +(/(*(+($s(25) $s(34) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
9
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
16
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 1 2 0 0.383333333333333 1 0.616666666666667
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 1 2 0 0.216666666666667 1 0.783333333333333
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 1 2 0 0.216666666666667 1 0.783333333333333
11 1 1 1 1
12 0 2 0 0.99 1 0.01
13 1 1 1 1
14 1 2 0 0.05 1 0.95
15 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
54
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
10
## name
running(c19)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(10) : $c(1)) ($s(10) : Bernoulli(+(/(*(+($s(17) $s(19) $s(20) $c(1)) $c(0.5)) $c(4)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(10) : $c(1)) ($s(10) : <=($c(0.5) +(/(*(+($s(17) $s(19) $s(20) $c(1)) $c(0.5)) $c(4)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
10
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
32
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 1 2 0 0.425 1 0.575
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 1 2 0 0.3 1 0.7
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 1 2 0 0.3 1 0.7
11 1 1 1 1
12 0 2 0 0.99 1 0.01
13 1 1 1 1
14 1 2 0 0.175 1 0.825
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 1 2 0 0.3 1 0.7
19 1 1 1 1
20 0 2 0 0.99 1 0.01
21 1 1 1 1
22 1 2 0 0.175 1 0.825
23 1 1 1 1
24 0 2 0 0.99 1 0.01
25 1 1 1 1
26 1 2 0 0.175 1 0.825
27 1 1 1 1
28 0 2 0 0.99 1 0.01
29 1 1 1 1
30 1 2 0 0.05 1 0.95
31 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
162
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 1
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
11
## name
running(c2)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(11) : $c(1)) ($s(11) : Bernoulli(+(/(*(+($s(3) $s(4) $s(14) $s(16) $s(20) $c(1)) $c(0.5)) $c(6)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(11) : $c(1)) ($s(11) : <=($c(0.5) +(/(*(+($s(3) $s(4) $s(14) $s(16) $s(20) $c(1)) $c(0.5)) $c(6)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
11
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
128
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 0 2 0 0.99 1 0.01
7 1 1 1 1
8 1 2 0 0.466666666666667 1 0.533333333333333
9 1 1 1 1
10 1 2 0 0.383333333333333 1 0.616666666666667
11 1 1 1 1
12 1 2 0 0.383333333333333 1 0.616666666666667
13 1 1 1 1
14 1 2 0 0.3 1 0.7
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 0 2 0 0.99 1 0.01
19 1 1 1 1
20 0 2 0 0.99 1 0.01
21 1 1 1 1
22 0 2 0 0.99 1 0.01
23 1 1 1 1
24 1 2 0 0.383333333333333 1 0.616666666666667
25 1 1 1 1
26 1 2 0 0.3 1 0.7
27 1 1 1 1
28 1 2 0 0.3 1 0.7
29 1 1 1 1
30 1 2 0 0.216666666666667 1 0.783333333333333
31 1 1 1 1
32 0 2 0 0.99 1 0.01
33 1 1 1 1
34 0 2 0 0.99 1 0.01
35 1 1 1 1
36 0 2 0 0.99 1 0.01
37 1 1 1 1
38 0 2 0 0.99 1 0.01
39 1 1 1 1
40 1 2 0 0.383333333333333 1 0.616666666666667
41 1 1 1 1
42 1 2 0 0.3 1 0.7
43 1 1 1 1
44 1 2 0 0.3 1 0.7
45 1 1 1 1
46 1 2 0 0.216666666666667 1 0.783333333333333
47 1 1 1 1
48 0 2 0 0.99 1 0.01
49 1 1 1 1
50 0 2 0 0.99 1 0.01
51 1 1 1 1
52 0 2 0 0.99 1 0.01
53 1 1 1 1
54 0 2 0 0.99 1 0.01
55 1 1 1 1
56 1 2 0 0.3 1 0.7
57 1 1 1 1
58 1 2 0 0.216666666666667 1 0.783333333333333
59 1 1 1 1
60 1 2 0 0.216666666666667 1 0.783333333333333
61 1 1 1 1
62 1 2 0 0.133333333333333 1 0.866666666666667
63 1 1 1 1
64 0 2 0 0.99 1 0.01
65 1 1 1 1
66 0 2 0 0.99 1 0.01
67 1 1 1 1
68 0 2 0 0.99 1 0.01
69 1 1 1 1
70 0 2 0 0.99 1 0.01
71 1 1 1 1
72 1 2 0 0.383333333333333 1 0.616666666666667
73 1 1 1 1
74 1 2 0 0.3 1 0.7
75 1 1 1 1
76 1 2 0 0.3 1 0.7
77 1 1 1 1
78 1 2 0 0.216666666666667 1 0.783333333333333
79 1 1 1 1
80 0 2 0 0.99 1 0.01
81 1 1 1 1
82 0 2 0 0.99 1 0.01
83 1 1 1 1
84 0 2 0 0.99 1 0.01
85 1 1 1 1
86 0 2 0 0.99 1 0.01
87 1 1 1 1
88 1 2 0 0.3 1 0.7
89 1 1 1 1
90 1 2 0 0.216666666666667 1 0.783333333333333
91 1 1 1 1
92 1 2 0 0.216666666666667 1 0.783333333333333
93 1 1 1 1
94 1 2 0 0.133333333333333 1 0.866666666666667
95 1 1 1 1
96 0 2 0 0.99 1 0.01
97 1 1 1 1
98 0 2 0 0.99 1 0.01
99 1 1 1 1
100 0 2 0 0.99 1 0.01
101 1 1 1 1
102 0 2 0 0.99 1 0.01
103 1 1 1 1
104 1 2 0 0.3 1 0.7
105 1 1 1 1
106 1 2 0 0.216666666666667 1 0.783333333333333
107 1 1 1 1
108 1 2 0 0.216666666666667 1 0.783333333333333
109 1 1 1 1
110 1 2 0 0.133333333333333 1 0.866666666666667
111 1 1 1 1
112 0 2 0 0.99 1 0.01
113 1 1 1 1
114 0 2 0 0.99 1 0.01
115 1 1 1 1
116 0 2 0 0.99 1 0.01
117 1 1 1 1
118 0 2 0 0.99 1 0.01
119 1 1 1 1
120 1 2 0 0.216666666666667 1 0.783333333333333
121 1 1 1 1
122 1 2 0 0.133333333333333 1 0.866666666666667
123 1 1 1 1
124 1 2 0 0.133333333333333 1 0.866666666666667
125 1 1 1 1
126 1 2 0 0.05 1 0.95
127 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
1458
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 1
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
12
## name
running(c20)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(12) : $c(1)) ($s(12) : Bernoulli(+(/(*(+($s(46) $s(1) $s(31) $s(41) $c(1)) $c(0.5)) $c(5)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(12) : $c(1)) ($s(12) : <=($c(0.5) +(/(*(+($s(46) $s(1) $s(31) $s(41) $c(1)) $c(0.5)) $c(5)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
12
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
64
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 1 2 0 0.45 1 0.55
5 1 1 1 1
6 1 2 0 0.35 1 0.65
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 0 2 0 0.99 1 0.01
11 1 1 1 1
12 1 2 0 0.35 1 0.65
13 1 1 1 1
14 1 2 0 0.25 1 0.75
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 0 2 0 0.99 1 0.01
19 1 1 1 1
20 1 2 0 0.35 1 0.65
21 1 1 1 1
22 1 2 0 0.25 1 0.75
23 1 1 1 1
24 0 2 0 0.99 1 0.01
25 1 1 1 1
26 0 2 0 0.99 1 0.01
27 1 1 1 1
28 1 2 0 0.25 1 0.75
29 1 1 1 1
30 1 2 0 0.15 1 0.85
31 1 1 1 1
32 0 2 0 0.99 1 0.01
33 1 1 1 1
34 0 2 0 0.99 1 0.01
35 1 1 1 1
36 1 2 0 0.35 1 0.65
37 1 1 1 1
38 1 2 0 0.25 1 0.75
39 1 1 1 1
40 0 2 0 0.99 1 0.01
41 1 1 1 1
42 0 2 0 0.99 1 0.01
43 1 1 1 1
44 1 2 0 0.25 1 0.75
45 1 1 1 1
46 1 2 0 0.15 1 0.85
47 1 1 1 1
48 0 2 0 0.99 1 0.01
49 1 1 1 1
50 0 2 0 0.99 1 0.01
51 1 1 1 1
52 1 2 0 0.25 1 0.75
53 1 1 1 1
54 1 2 0 0.15 1 0.85
55 1 1 1 1
56 0 2 0 0.99 1 0.01
57 1 1 1 1
58 0 2 0 0.99 1 0.01
59 1 1 1 1
60 1 2 0 0.15 1 0.85
61 1 1 1 1
62 1 2 0 0.05 1 0.95
63 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
486
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 1
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
13
## name
running(c21)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(13) : $c(1)) ($s(13) : Bernoulli(+(/(*(+($s(1) $s(2) $s(10) $s(15) $c(1)) $c(0.5)) $c(5)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(13) : $c(1)) ($s(13) : <=($c(0.5) +(/(*(+($s(1) $s(2) $s(10) $s(15) $c(1)) $c(0.5)) $c(5)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
13
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
64
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 0 2 0 0.99 1 0.01
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 0 2 0 0.99 1 0.01
11 1 1 1 1
12 0 2 0 0.99 1 0.01
13 1 1 1 1
14 0 2 0 0.99 1 0.01
15 1 1 1 1
16 1 2 0 0.45 1 0.55
17 1 1 1 1
18 1 2 0 0.35 1 0.65
19 1 1 1 1
20 1 2 0 0.35 1 0.65
21 1 1 1 1
22 1 2 0 0.25 1 0.75
23 1 1 1 1
24 1 2 0 0.35 1 0.65
25 1 1 1 1
26 1 2 0 0.25 1 0.75
27 1 1 1 1
28 1 2 0 0.25 1 0.75
29 1 1 1 1
30 1 2 0 0.15 1 0.85
31 1 1 1 1
32 0 2 0 0.99 1 0.01
33 1 1 1 1
34 0 2 0 0.99 1 0.01
35 1 1 1 1
36 0 2 0 0.99 1 0.01
37 1 1 1 1
38 0 2 0 0.99 1 0.01
39 1 1 1 1
40 0 2 0 0.99 1 0.01
41 1 1 1 1
42 0 2 0 0.99 1 0.01
43 1 1 1 1
44 0 2 0 0.99 1 0.01
45 1 1 1 1
46 0 2 0 0.99 1 0.01
47 1 1 1 1
48 1 2 0 0.35 1 0.65
49 1 1 1 1
50 1 2 0 0.25 1 0.75
51 1 1 1 1
52 1 2 0 0.25 1 0.75
53 1 1 1 1
54 1 2 0 0.15 1 0.85
55 1 1 1 1
56 1 2 0 0.25 1 0.75
57 1 1 1 1
58 1 2 0 0.15 1 0.85
59 1 1 1 1
60 1 2 0 0.15 1 0.85
61 1 1 1 1
62 1 2 0 0.05 1 0.95
63 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
486
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 1
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
14
## name
running(c22)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(14) : $c(1)) ($s(14) : Bernoulli(+(/(*(+($s(49) $s(7) $s(18) $s(25) $c(1)) $c(0.5)) $c(5)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(14) : $c(1)) ($s(14) : <=($c(0.5) +(/(*(+($s(49) $s(7) $s(18) $s(25) $c(1)) $c(0.5)) $c(5)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
14
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
64
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 1 2 0 0.45 1 0.55
5 1 1 1 1
6 1 2 0 0.35 1 0.65
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 0 2 0 0.99 1 0.01
11 1 1 1 1
12 1 2 0 0.35 1 0.65
13 1 1 1 1
14 1 2 0 0.25 1 0.75
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 0 2 0 0.99 1 0.01
19 1 1 1 1
20 1 2 0 0.35 1 0.65
21 1 1 1 1
22 1 2 0 0.25 1 0.75
23 1 1 1 1
24 0 2 0 0.99 1 0.01
25 1 1 1 1
26 0 2 0 0.99 1 0.01
27 1 1 1 1
28 1 2 0 0.25 1 0.75
29 1 1 1 1
30 1 2 0 0.15 1 0.85
31 1 1 1 1
32 0 2 0 0.99 1 0.01
33 1 1 1 1
34 0 2 0 0.99 1 0.01
35 1 1 1 1
36 1 2 0 0.35 1 0.65
37 1 1 1 1
38 1 2 0 0.25 1 0.75
39 1 1 1 1
40 0 2 0 0.99 1 0.01
41 1 1 1 1
42 0 2 0 0.99 1 0.01
43 1 1 1 1
44 1 2 0 0.25 1 0.75
45 1 1 1 1
46 1 2 0 0.15 1 0.85
47 1 1 1 1
48 0 2 0 0.99 1 0.01
49 1 1 1 1
50 0 2 0 0.99 1 0.01
51 1 1 1 1
52 1 2 0 0.25 1 0.75
53 1 1 1 1
54 1 2 0 0.15 1 0.85
55 1 1 1 1
56 0 2 0 0.99 1 0.01
57 1 1 1 1
58 0 2 0 0.99 1 0.01
59 1 1 1 1
60 1 2 0 0.15 1 0.85
61 1 1 1 1
62 1 2 0 0.05 1 0.95
63 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
486
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 1
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
15
## name
running(c23)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(15) : $c(1)) ($s(15) : Bernoulli(+(/(*(+($s(6) $s(13) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(15) : $c(1)) ($s(15) : <=($c(0.5) +(/(*(+($s(6) $s(13) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
15
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
16
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 0 2 0 0.99 1 0.01
7 1 1 1 1
8 1 2 0 0.383333333333333 1 0.616666666666667
9 1 1 1 1
10 1 2 0 0.216666666666667 1 0.783333333333333
11 1 1 1 1
12 1 2 0 0.216666666666667 1 0.783333333333333
13 1 1 1 1
14 1 2 0 0.05 1 0.95
15 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
54
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 1
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
16
## name
running(c24)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(16) : $c(1)) ($s(16) : Bernoulli(+(/(*(+($s(0) $s(48) $s(13) $c(1)) $c(0.5)) $c(4)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(16) : $c(1)) ($s(16) : <=($c(0.5) +(/(*(+($s(0) $s(48) $s(13) $c(1)) $c(0.5)) $c(4)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
16
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
32
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 0 2 0 0.99 1 0.01
7 1 1 1 1
8 1 2 0 0.425 1 0.575
9 1 1 1 1
10 1 2 0 0.3 1 0.7
11 1 1 1 1
12 1 2 0 0.3 1 0.7
13 1 1 1 1
14 1 2 0 0.175 1 0.825
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 0 2 0 0.99 1 0.01
19 1 1 1 1
20 0 2 0 0.99 1 0.01
21 1 1 1 1
22 0 2 0 0.99 1 0.01
23 1 1 1 1
24 1 2 0 0.3 1 0.7
25 1 1 1 1
26 1 2 0 0.175 1 0.825
27 1 1 1 1
28 1 2 0 0.175 1 0.825
29 1 1 1 1
30 1 2 0 0.05 1 0.95
31 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
162
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 1
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
17
## name
running(c25)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(17) : $c(1)) ($s(17) : Bernoulli(+(/(*(+($s(33) $s(44) $s(24) $s(31) $s(37) $c(1)) $c(0.5)) $c(6)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(17) : $c(1)) ($s(17) : <=($c(0.5) +(/(*(+($s(33) $s(44) $s(24) $s(31) $s(37) $c(1)) $c(0.5)) $c(6)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
17
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
128
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 1 2 0 0.466666666666667 1 0.533333333333333
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 1 2 0 0.383333333333333 1 0.616666666666667
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 1 2 0 0.383333333333333 1 0.616666666666667
11 1 1 1 1
12 0 2 0 0.99 1 0.01
13 1 1 1 1
14 1 2 0 0.3 1 0.7
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 1 2 0 0.383333333333333 1 0.616666666666667
19 1 1 1 1
20 0 2 0 0.99 1 0.01
21 1 1 1 1
22 1 2 0 0.3 1 0.7
23 1 1 1 1
24 0 2 0 0.99 1 0.01
25 1 1 1 1
26 1 2 0 0.3 1 0.7
27 1 1 1 1
28 0 2 0 0.99 1 0.01
29 1 1 1 1
30 1 2 0 0.216666666666667 1 0.783333333333333
31 1 1 1 1
32 0 2 0 0.99 1 0.01
33 1 1 1 1
34 1 2 0 0.383333333333333 1 0.616666666666667
35 1 1 1 1
36 0 2 0 0.99 1 0.01
37 1 1 1 1
38 1 2 0 0.3 1 0.7
39 1 1 1 1
40 0 2 0 0.99 1 0.01
41 1 1 1 1
42 1 2 0 0.3 1 0.7
43 1 1 1 1
44 0 2 0 0.99 1 0.01
45 1 1 1 1
46 1 2 0 0.216666666666667 1 0.783333333333333
47 1 1 1 1
48 0 2 0 0.99 1 0.01
49 1 1 1 1
50 1 2 0 0.3 1 0.7
51 1 1 1 1
52 0 2 0 0.99 1 0.01
53 1 1 1 1
54 1 2 0 0.216666666666667 1 0.783333333333333
55 1 1 1 1
56 0 2 0 0.99 1 0.01
57 1 1 1 1
58 1 2 0 0.216666666666667 1 0.783333333333333
59 1 1 1 1
60 0 2 0 0.99 1 0.01
61 1 1 1 1
62 1 2 0 0.133333333333333 1 0.866666666666667
63 1 1 1 1
64 0 2 0 0.99 1 0.01
65 1 1 1 1
66 1 2 0 0.383333333333333 1 0.616666666666667
67 1 1 1 1
68 0 2 0 0.99 1 0.01
69 1 1 1 1
70 1 2 0 0.3 1 0.7
71 1 1 1 1
72 0 2 0 0.99 1 0.01
73 1 1 1 1
74 1 2 0 0.3 1 0.7
75 1 1 1 1
76 0 2 0 0.99 1 0.01
77 1 1 1 1
78 1 2 0 0.216666666666667 1 0.783333333333333
79 1 1 1 1
80 0 2 0 0.99 1 0.01
81 1 1 1 1
82 1 2 0 0.3 1 0.7
83 1 1 1 1
84 0 2 0 0.99 1 0.01
85 1 1 1 1
86 1 2 0 0.216666666666667 1 0.783333333333333
87 1 1 1 1
88 0 2 0 0.99 1 0.01
89 1 1 1 1
90 1 2 0 0.216666666666667 1 0.783333333333333
91 1 1 1 1
92 0 2 0 0.99 1 0.01
93 1 1 1 1
94 1 2 0 0.133333333333333 1 0.866666666666667
95 1 1 1 1
96 0 2 0 0.99 1 0.01
97 1 1 1 1
98 1 2 0 0.3 1 0.7
99 1 1 1 1
100 0 2 0 0.99 1 0.01
101 1 1 1 1
102 1 2 0 0.216666666666667 1 0.783333333333333
103 1 1 1 1
104 0 2 0 0.99 1 0.01
105 1 1 1 1
106 1 2 0 0.216666666666667 1 0.783333333333333
107 1 1 1 1
108 0 2 0 0.99 1 0.01
109 1 1 1 1
110 1 2 0 0.133333333333333 1 0.866666666666667
111 1 1 1 1
112 0 2 0 0.99 1 0.01
113 1 1 1 1
114 1 2 0 0.216666666666667 1 0.783333333333333
115 1 1 1 1
116 0 2 0 0.99 1 0.01
117 1 1 1 1
118 1 2 0 0.133333333333333 1 0.866666666666667
119 1 1 1 1
120 0 2 0 0.99 1 0.01
121 1 1 1 1
122 1 2 0 0.133333333333333 1 0.866666666666667
123 1 1 1 1
124 0 2 0 0.99 1 0.01
125 1 1 1 1
126 1 2 0 0.05 1 0.95
127 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
1458
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
18
## name
running(c26)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(18) : $c(1)) ($s(18) : Bernoulli(+(/(*(+($s(8) $s(38) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(18) : $c(1)) ($s(18) : <=($c(0.5) +(/(*(+($s(8) $s(38) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
18
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
16
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 1 2 0 0.383333333333333 1 0.616666666666667
5 1 1 1 1
6 1 2 0 0.216666666666667 1 0.783333333333333
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 0 2 0 0.99 1 0.01
11 1 1 1 1
12 1 2 0 0.216666666666667 1 0.783333333333333
13 1 1 1 1
14 1 2 0 0.05 1 0.95
15 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
54
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 1
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
19
## name
running(c27)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(19) : $c(1)) ($s(19) : Bernoulli(+(/(*(+($s(22) $s(21) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(19) : $c(1)) ($s(19) : <=($c(0.5) +(/(*(+($s(22) $s(21) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
19
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
16
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 1 2 0 0.383333333333333 1 0.616666666666667
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 1 2 0 0.216666666666667 1 0.783333333333333
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 1 2 0 0.216666666666667 1 0.783333333333333
11 1 1 1 1
12 0 2 0 0.99 1 0.01
13 1 1 1 1
14 1 2 0 0.05 1 0.95
15 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
54
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 1
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
20
## name
running(c28)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(20) : $c(1)) ($s(20) : Bernoulli(+(/(*(+($s(22) $s(46) $s(47) $s(8) $s(12) $c(1)) $c(0.5)) $c(6)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(20) : $c(1)) ($s(20) : <=($c(0.5) +(/(*(+($s(22) $s(46) $s(47) $s(8) $s(12) $c(1)) $c(0.5)) $c(6)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
20
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
128
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 0 2 0 0.99 1 0.01
7 1 1 1 1
8 1 2 0 0.466666666666667 1 0.533333333333333
9 1 1 1 1
10 1 2 0 0.383333333333333 1 0.616666666666667
11 1 1 1 1
12 1 2 0 0.383333333333333 1 0.616666666666667
13 1 1 1 1
14 1 2 0 0.3 1 0.7
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 0 2 0 0.99 1 0.01
19 1 1 1 1
20 0 2 0 0.99 1 0.01
21 1 1 1 1
22 0 2 0 0.99 1 0.01
23 1 1 1 1
24 1 2 0 0.383333333333333 1 0.616666666666667
25 1 1 1 1
26 1 2 0 0.3 1 0.7
27 1 1 1 1
28 1 2 0 0.3 1 0.7
29 1 1 1 1
30 1 2 0 0.216666666666667 1 0.783333333333333
31 1 1 1 1
32 0 2 0 0.99 1 0.01
33 1 1 1 1
34 0 2 0 0.99 1 0.01
35 1 1 1 1
36 0 2 0 0.99 1 0.01
37 1 1 1 1
38 0 2 0 0.99 1 0.01
39 1 1 1 1
40 1 2 0 0.383333333333333 1 0.616666666666667
41 1 1 1 1
42 1 2 0 0.3 1 0.7
43 1 1 1 1
44 1 2 0 0.3 1 0.7
45 1 1 1 1
46 1 2 0 0.216666666666667 1 0.783333333333333
47 1 1 1 1
48 0 2 0 0.99 1 0.01
49 1 1 1 1
50 0 2 0 0.99 1 0.01
51 1 1 1 1
52 0 2 0 0.99 1 0.01
53 1 1 1 1
54 0 2 0 0.99 1 0.01
55 1 1 1 1
56 1 2 0 0.3 1 0.7
57 1 1 1 1
58 1 2 0 0.216666666666667 1 0.783333333333333
59 1 1 1 1
60 1 2 0 0.216666666666667 1 0.783333333333333
61 1 1 1 1
62 1 2 0 0.133333333333333 1 0.866666666666667
63 1 1 1 1
64 0 2 0 0.99 1 0.01
65 1 1 1 1
66 0 2 0 0.99 1 0.01
67 1 1 1 1
68 0 2 0 0.99 1 0.01
69 1 1 1 1
70 0 2 0 0.99 1 0.01
71 1 1 1 1
72 1 2 0 0.383333333333333 1 0.616666666666667
73 1 1 1 1
74 1 2 0 0.3 1 0.7
75 1 1 1 1
76 1 2 0 0.3 1 0.7
77 1 1 1 1
78 1 2 0 0.216666666666667 1 0.783333333333333
79 1 1 1 1
80 0 2 0 0.99 1 0.01
81 1 1 1 1
82 0 2 0 0.99 1 0.01
83 1 1 1 1
84 0 2 0 0.99 1 0.01
85 1 1 1 1
86 0 2 0 0.99 1 0.01
87 1 1 1 1
88 1 2 0 0.3 1 0.7
89 1 1 1 1
90 1 2 0 0.216666666666667 1 0.783333333333333
91 1 1 1 1
92 1 2 0 0.216666666666667 1 0.783333333333333
93 1 1 1 1
94 1 2 0 0.133333333333333 1 0.866666666666667
95 1 1 1 1
96 0 2 0 0.99 1 0.01
97 1 1 1 1
98 0 2 0 0.99 1 0.01
99 1 1 1 1
100 0 2 0 0.99 1 0.01
101 1 1 1 1
102 0 2 0 0.99 1 0.01
103 1 1 1 1
104 1 2 0 0.3 1 0.7
105 1 1 1 1
106 1 2 0 0.216666666666667 1 0.783333333333333
107 1 1 1 1
108 1 2 0 0.216666666666667 1 0.783333333333333
109 1 1 1 1
110 1 2 0 0.133333333333333 1 0.866666666666667
111 1 1 1 1
112 0 2 0 0.99 1 0.01
113 1 1 1 1
114 0 2 0 0.99 1 0.01
115 1 1 1 1
116 0 2 0 0.99 1 0.01
117 1 1 1 1
118 0 2 0 0.99 1 0.01
119 1 1 1 1
120 1 2 0 0.216666666666667 1 0.783333333333333
121 1 1 1 1
122 1 2 0 0.133333333333333 1 0.866666666666667
123 1 1 1 1
124 1 2 0 0.133333333333333 1 0.866666666666667
125 1 1 1 1
126 1 2 0 0.05 1 0.95
127 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
1458
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
21
## name
running(c29)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(21) : $c(1)) ($s(21) : Bernoulli(+(/(*(+($s(31) $s(42) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(21) : $c(1)) ($s(21) : <=($c(0.5) +(/(*(+($s(31) $s(42) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
21
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
16
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 1 2 0 0.383333333333333 1 0.616666666666667
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 1 2 0 0.216666666666667 1 0.783333333333333
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 1 2 0 0.216666666666667 1 0.783333333333333
11 1 1 1 1
12 0 2 0 0.99 1 0.01
13 1 1 1 1
14 1 2 0 0.05 1 0.95
15 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
54
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 1
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
22
## name
running(c3)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(22) : $c(1)) ($s(22) : Bernoulli(+(/(*(+($s(26) $c(1)) $c(0.5)) $c(2)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(22) : $c(1)) ($s(22) : <=($c(0.5) +(/(*(+($s(26) $c(1)) $c(0.5)) $c(2)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
22
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
8
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 1 2 0 0.3 1 0.7
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 1 2 0 0.05 1 0.95
7 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
18
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 1
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
23
## name
running(c30)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(23) : $c(1)) ($s(23) : Bernoulli(+(/(*(+($s(29) $s(36) $s(41) $c(1)) $c(0.5)) $c(4)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(23) : $c(1)) ($s(23) : <=($c(0.5) +(/(*(+($s(29) $s(36) $s(41) $c(1)) $c(0.5)) $c(4)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
23
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
32
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 1 2 0 0.425 1 0.575
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 1 2 0 0.3 1 0.7
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 1 2 0 0.3 1 0.7
11 1 1 1 1
12 0 2 0 0.99 1 0.01
13 1 1 1 1
14 1 2 0 0.175 1 0.825
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 1 2 0 0.3 1 0.7
19 1 1 1 1
20 0 2 0 0.99 1 0.01
21 1 1 1 1
22 1 2 0 0.175 1 0.825
23 1 1 1 1
24 0 2 0 0.99 1 0.01
25 1 1 1 1
26 1 2 0 0.175 1 0.825
27 1 1 1 1
28 0 2 0 0.99 1 0.01
29 1 1 1 1
30 1 2 0 0.05 1 0.95
31 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
162
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 1
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
24
## name
running(c31)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(24) : $c(1)) ($s(24) : Bernoulli(+(/(*(+($s(44) $s(17) $s(26) $c(1)) $c(0.5)) $c(4)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(24) : $c(1)) ($s(24) : <=($c(0.5) +(/(*(+($s(44) $s(17) $s(26) $c(1)) $c(0.5)) $c(4)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
24
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
32
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 1 2 0 0.425 1 0.575
5 1 1 1 1
6 1 2 0 0.3 1 0.7
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 0 2 0 0.99 1 0.01
11 1 1 1 1
12 1 2 0 0.3 1 0.7
13 1 1 1 1
14 1 2 0 0.175 1 0.825
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 0 2 0 0.99 1 0.01
19 1 1 1 1
20 1 2 0 0.3 1 0.7
21 1 1 1 1
22 1 2 0 0.175 1 0.825
23 1 1 1 1
24 0 2 0 0.99 1 0.01
25 1 1 1 1
26 0 2 0 0.99 1 0.01
27 1 1 1 1
28 1 2 0 0.175 1 0.825
29 1 1 1 1
30 1 2 0 0.05 1 0.95
31 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
162
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
25
## name
running(c32)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(25) : $c(1)) ($s(25) : Bernoulli(+(/(*(+($s(47) $s(5) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(25) : $c(1)) ($s(25) : <=($c(0.5) +(/(*(+($s(47) $s(5) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
25
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
16
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 1 2 0 0.383333333333333 1 0.616666666666667
5 1 1 1 1
6 1 2 0 0.216666666666667 1 0.783333333333333
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 0 2 0 0.99 1 0.01
11 1 1 1 1
12 1 2 0 0.216666666666667 1 0.783333333333333
13 1 1 1 1
14 1 2 0 0.05 1 0.95
15 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
54
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 1
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
26
## name
running(c33)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(26) : $c(1)) ($s(26) : Bernoulli(+(/(*(+($s(27) $s(30) $s(41) $c(1)) $c(0.5)) $c(4)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(26) : $c(1)) ($s(26) : <=($c(0.5) +(/(*(+($s(27) $s(30) $s(41) $c(1)) $c(0.5)) $c(4)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
26
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
32
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 1 2 0 0.425 1 0.575
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 1 2 0 0.3 1 0.7
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 1 2 0 0.3 1 0.7
11 1 1 1 1
12 0 2 0 0.99 1 0.01
13 1 1 1 1
14 1 2 0 0.175 1 0.825
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 1 2 0 0.3 1 0.7
19 1 1 1 1
20 0 2 0 0.99 1 0.01
21 1 1 1 1
22 1 2 0 0.175 1 0.825
23 1 1 1 1
24 0 2 0 0.99 1 0.01
25 1 1 1 1
26 1 2 0 0.175 1 0.825
27 1 1 1 1
28 0 2 0 0.99 1 0.01
29 1 1 1 1
30 1 2 0 0.05 1 0.95
31 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
162
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
27
## name
running(c34)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(27) : $c(1)) ($s(27) : Bernoulli(+(/(*(+($s(12) $s(14) $s(37) $s(45) $c(1)) $c(0.5)) $c(5)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(27) : $c(1)) ($s(27) : <=($c(0.5) +(/(*(+($s(12) $s(14) $s(37) $s(45) $c(1)) $c(0.5)) $c(5)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
27
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
64
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 0 2 0 0.99 1 0.01
7 1 1 1 1
8 1 2 0 0.45 1 0.55
9 1 1 1 1
10 1 2 0 0.35 1 0.65
11 1 1 1 1
12 1 2 0 0.35 1 0.65
13 1 1 1 1
14 1 2 0 0.25 1 0.75
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 0 2 0 0.99 1 0.01
19 1 1 1 1
20 0 2 0 0.99 1 0.01
21 1 1 1 1
22 0 2 0 0.99 1 0.01
23 1 1 1 1
24 1 2 0 0.35 1 0.65
25 1 1 1 1
26 1 2 0 0.25 1 0.75
27 1 1 1 1
28 1 2 0 0.25 1 0.75
29 1 1 1 1
30 1 2 0 0.15 1 0.85
31 1 1 1 1
32 0 2 0 0.99 1 0.01
33 1 1 1 1
34 0 2 0 0.99 1 0.01
35 1 1 1 1
36 0 2 0 0.99 1 0.01
37 1 1 1 1
38 0 2 0 0.99 1 0.01
39 1 1 1 1
40 1 2 0 0.35 1 0.65
41 1 1 1 1
42 1 2 0 0.25 1 0.75
43 1 1 1 1
44 1 2 0 0.25 1 0.75
45 1 1 1 1
46 1 2 0 0.15 1 0.85
47 1 1 1 1
48 0 2 0 0.99 1 0.01
49 1 1 1 1
50 0 2 0 0.99 1 0.01
51 1 1 1 1
52 0 2 0 0.99 1 0.01
53 1 1 1 1
54 0 2 0 0.99 1 0.01
55 1 1 1 1
56 1 2 0 0.25 1 0.75
57 1 1 1 1
58 1 2 0 0.15 1 0.85
59 1 1 1 1
60 1 2 0 0.15 1 0.85
61 1 1 1 1
62 1 2 0 0.05 1 0.95
63 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
486
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
28
## name
running(c35)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(28) : $c(1)) ($s(28) : Bernoulli(+(/(*(+($s(24) $s(38) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(28) : $c(1)) ($s(28) : <=($c(0.5) +(/(*(+($s(24) $s(38) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
28
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
16
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 1 2 0 0.383333333333333 1 0.616666666666667
5 1 1 1 1
6 1 2 0 0.216666666666667 1 0.783333333333333
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 0 2 0 0.99 1 0.01
11 1 1 1 1
12 1 2 0 0.216666666666667 1 0.783333333333333
13 1 1 1 1
14 1 2 0 0.05 1 0.95
15 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
54
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 1
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
29
## name
running(c36)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(29) : $c(1)) ($s(29) : Bernoulli(+(/(*(+($s(16) $s(28) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(29) : $c(1)) ($s(29) : <=($c(0.5) +(/(*(+($s(16) $s(28) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
29
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
16
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 0 2 0 0.99 1 0.01
7 1 1 1 1
8 1 2 0 0.383333333333333 1 0.616666666666667
9 1 1 1 1
10 1 2 0 0.216666666666667 1 0.783333333333333
11 1 1 1 1
12 1 2 0 0.216666666666667 1 0.783333333333333
13 1 1 1 1
14 1 2 0 0.05 1 0.95
15 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
54
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
30
## name
running(c37)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(30) : $c(1)) ($s(30) : Bernoulli(+(/(*(+($s(11) $s(46) $s(37) $s(43) $s(45) $c(1)) $c(0.5)) $c(6)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(30) : $c(1)) ($s(30) : <=($c(0.5) +(/(*(+($s(11) $s(46) $s(37) $s(43) $s(45) $c(1)) $c(0.5)) $c(6)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
30
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
128
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 1 2 0 0.466666666666667 1 0.533333333333333
5 1 1 1 1
6 1 2 0 0.383333333333333 1 0.616666666666667
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 0 2 0 0.99 1 0.01
11 1 1 1 1
12 1 2 0 0.383333333333333 1 0.616666666666667
13 1 1 1 1
14 1 2 0 0.3 1 0.7
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 0 2 0 0.99 1 0.01
19 1 1 1 1
20 1 2 0 0.383333333333333 1 0.616666666666667
21 1 1 1 1
22 1 2 0 0.3 1 0.7
23 1 1 1 1
24 0 2 0 0.99 1 0.01
25 1 1 1 1
26 0 2 0 0.99 1 0.01
27 1 1 1 1
28 1 2 0 0.3 1 0.7
29 1 1 1 1
30 1 2 0 0.216666666666667 1 0.783333333333333
31 1 1 1 1
32 0 2 0 0.99 1 0.01
33 1 1 1 1
34 0 2 0 0.99 1 0.01
35 1 1 1 1
36 1 2 0 0.383333333333333 1 0.616666666666667
37 1 1 1 1
38 1 2 0 0.3 1 0.7
39 1 1 1 1
40 0 2 0 0.99 1 0.01
41 1 1 1 1
42 0 2 0 0.99 1 0.01
43 1 1 1 1
44 1 2 0 0.3 1 0.7
45 1 1 1 1
46 1 2 0 0.216666666666667 1 0.783333333333333
47 1 1 1 1
48 0 2 0 0.99 1 0.01
49 1 1 1 1
50 0 2 0 0.99 1 0.01
51 1 1 1 1
52 1 2 0 0.3 1 0.7
53 1 1 1 1
54 1 2 0 0.216666666666667 1 0.783333333333333
55 1 1 1 1
56 0 2 0 0.99 1 0.01
57 1 1 1 1
58 0 2 0 0.99 1 0.01
59 1 1 1 1
60 1 2 0 0.216666666666667 1 0.783333333333333
61 1 1 1 1
62 1 2 0 0.133333333333333 1 0.866666666666667
63 1 1 1 1
64 0 2 0 0.99 1 0.01
65 1 1 1 1
66 0 2 0 0.99 1 0.01
67 1 1 1 1
68 1 2 0 0.383333333333333 1 0.616666666666667
69 1 1 1 1
70 1 2 0 0.3 1 0.7
71 1 1 1 1
72 0 2 0 0.99 1 0.01
73 1 1 1 1
74 0 2 0 0.99 1 0.01
75 1 1 1 1
76 1 2 0 0.3 1 0.7
77 1 1 1 1
78 1 2 0 0.216666666666667 1 0.783333333333333
79 1 1 1 1
80 0 2 0 0.99 1 0.01
81 1 1 1 1
82 0 2 0 0.99 1 0.01
83 1 1 1 1
84 1 2 0 0.3 1 0.7
85 1 1 1 1
86 1 2 0 0.216666666666667 1 0.783333333333333
87 1 1 1 1
88 0 2 0 0.99 1 0.01
89 1 1 1 1
90 0 2 0 0.99 1 0.01
91 1 1 1 1
92 1 2 0 0.216666666666667 1 0.783333333333333
93 1 1 1 1
94 1 2 0 0.133333333333333 1 0.866666666666667
95 1 1 1 1
96 0 2 0 0.99 1 0.01
97 1 1 1 1
98 0 2 0 0.99 1 0.01
99 1 1 1 1
100 1 2 0 0.3 1 0.7
101 1 1 1 1
102 1 2 0 0.216666666666667 1 0.783333333333333
103 1 1 1 1
104 0 2 0 0.99 1 0.01
105 1 1 1 1
106 0 2 0 0.99 1 0.01
107 1 1 1 1
108 1 2 0 0.216666666666667 1 0.783333333333333
109 1 1 1 1
110 1 2 0 0.133333333333333 1 0.866666666666667
111 1 1 1 1
112 0 2 0 0.99 1 0.01
113 1 1 1 1
114 0 2 0 0.99 1 0.01
115 1 1 1 1
116 1 2 0 0.216666666666667 1 0.783333333333333
117 1 1 1 1
118 1 2 0 0.133333333333333 1 0.866666666666667
119 1 1 1 1
120 0 2 0 0.99 1 0.01
121 1 1 1 1
122 0 2 0 0.99 1 0.01
123 1 1 1 1
124 1 2 0 0.133333333333333 1 0.866666666666667
125 1 1 1 1
126 1 2 0 0.05 1 0.95
127 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
1458
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
31
## name
running(c38)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(31) : $c(1)) ($s(31) : Bernoulli(+(/(*(+($s(42) $c(1)) $c(0.5)) $c(2)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(31) : $c(1)) ($s(31) : <=($c(0.5) +(/(*(+($s(42) $c(1)) $c(0.5)) $c(2)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
31
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
8
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 1 2 0 0.3 1 0.7
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 1 2 0 0.05 1 0.95
7 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
18
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 1
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
32
## name
running(c39)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(32) : $c(1)) ($s(32) : Bernoulli(+(/(*(+($s(28) $c(1)) $c(0.5)) $c(2)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(32) : $c(1)) ($s(32) : <=($c(0.5) +(/(*(+($s(28) $c(1)) $c(0.5)) $c(2)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
32
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
8
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 1 2 0 0.3 1 0.7
5 1 1 1 1
6 1 2 0 0.05 1 0.95
7 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
18
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 1
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
33
## name
running(c4)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(33) : $c(1)) ($s(33) : Bernoulli(+(/(*(+($s(48) $s(39) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(33) : $c(1)) ($s(33) : <=($c(0.5) +(/(*(+($s(48) $s(39) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
33
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
16
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 1 2 0 0.383333333333333 1 0.616666666666667
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 1 2 0 0.216666666666667 1 0.783333333333333
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 1 2 0 0.216666666666667 1 0.783333333333333
11 1 1 1 1
12 0 2 0 0.99 1 0.01
13 1 1 1 1
14 1 2 0 0.05 1 0.95
15 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
54
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 1
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
34
## name
running(c40)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(34) : $c(1)) ($s(34) : Bernoulli(+(/(*(+($s(3) $s(23) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(34) : $c(1)) ($s(34) : <=($c(0.5) +(/(*(+($s(3) $s(23) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
34
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
16
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 0 2 0 0.99 1 0.01
7 1 1 1 1
8 1 2 0 0.383333333333333 1 0.616666666666667
9 1 1 1 1
10 1 2 0 0.216666666666667 1 0.783333333333333
11 1 1 1 1
12 1 2 0 0.216666666666667 1 0.783333333333333
13 1 1 1 1
14 1 2 0 0.05 1 0.95
15 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
54
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
35
## name
running(c41)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(35) : $c(1)) ($s(35) : Bernoulli(+(/(*(+($s(48) $s(9) $s(39) $c(1)) $c(0.5)) $c(4)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(35) : $c(1)) ($s(35) : <=($c(0.5) +(/(*(+($s(48) $s(9) $s(39) $c(1)) $c(0.5)) $c(4)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
35
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
32
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 1 2 0 0.425 1 0.575
5 1 1 1 1
6 1 2 0 0.3 1 0.7
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 0 2 0 0.99 1 0.01
11 1 1 1 1
12 1 2 0 0.3 1 0.7
13 1 1 1 1
14 1 2 0 0.175 1 0.825
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 0 2 0 0.99 1 0.01
19 1 1 1 1
20 1 2 0 0.3 1 0.7
21 1 1 1 1
22 1 2 0 0.175 1 0.825
23 1 1 1 1
24 0 2 0 0.99 1 0.01
25 1 1 1 1
26 0 2 0 0.99 1 0.01
27 1 1 1 1
28 1 2 0 0.175 1 0.825
29 1 1 1 1
30 1 2 0 0.05 1 0.95
31 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
162
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
36
## name
running(c42)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(36) : $c(1)) ($s(36) : Bernoulli(+(/(*(+($s(47) $s(7) $s(19) $s(21) $s(27) $s(45) $c(1)) $c(0.5)) $c(7)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(36) : $c(1)) ($s(36) : <=($c(0.5) +(/(*(+($s(47) $s(7) $s(19) $s(21) $s(27) $s(45) $c(1)) $c(0.5)) $c(7)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
36
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
256
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 0 2 0 0.99 1 0.01
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 0 2 0 0.99 1 0.01
11 1 1 1 1
12 0 2 0 0.99 1 0.01
13 1 1 1 1
14 0 2 0 0.99 1 0.01
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 0 2 0 0.99 1 0.01
19 1 1 1 1
20 0 2 0 0.99 1 0.01
21 1 1 1 1
22 0 2 0 0.99 1 0.01
23 1 1 1 1
24 0 2 0 0.99 1 0.01
25 1 1 1 1
26 0 2 0 0.99 1 0.01
27 1 1 1 1
28 0 2 0 0.99 1 0.01
29 1 1 1 1
30 0 2 0 0.99 1 0.01
31 1 1 1 1
32 1 2 0 0.478571428571429 1 0.521428571428571
33 1 1 1 1
34 1 2 0 0.407142857142857 1 0.592857142857143
35 1 1 1 1
36 1 2 0 0.407142857142857 1 0.592857142857143
37 1 1 1 1
38 1 2 0 0.335714285714286 1 0.664285714285714
39 1 1 1 1
40 1 2 0 0.407142857142857 1 0.592857142857143
41 1 1 1 1
42 1 2 0 0.335714285714286 1 0.664285714285714
43 1 1 1 1
44 1 2 0 0.335714285714286 1 0.664285714285714
45 1 1 1 1
46 1 2 0 0.264285714285714 1 0.735714285714286
47 1 1 1 1
48 1 2 0 0.407142857142857 1 0.592857142857143
49 1 1 1 1
50 1 2 0 0.335714285714286 1 0.664285714285714
51 1 1 1 1
52 1 2 0 0.335714285714286 1 0.664285714285714
53 1 1 1 1
54 1 2 0 0.264285714285714 1 0.735714285714286
55 1 1 1 1
56 1 2 0 0.335714285714286 1 0.664285714285714
57 1 1 1 1
58 1 2 0 0.264285714285714 1 0.735714285714286
59 1 1 1 1
60 1 2 0 0.264285714285714 1 0.735714285714286
61 1 1 1 1
62 1 2 0 0.192857142857143 1 0.807142857142857
63 1 1 1 1
64 0 2 0 0.99 1 0.01
65 1 1 1 1
66 0 2 0 0.99 1 0.01
67 1 1 1 1
68 0 2 0 0.99 1 0.01
69 1 1 1 1
70 0 2 0 0.99 1 0.01
71 1 1 1 1
72 0 2 0 0.99 1 0.01
73 1 1 1 1
74 0 2 0 0.99 1 0.01
75 1 1 1 1
76 0 2 0 0.99 1 0.01
77 1 1 1 1
78 0 2 0 0.99 1 0.01
79 1 1 1 1
80 0 2 0 0.99 1 0.01
81 1 1 1 1
82 0 2 0 0.99 1 0.01
83 1 1 1 1
84 0 2 0 0.99 1 0.01
85 1 1 1 1
86 0 2 0 0.99 1 0.01
87 1 1 1 1
88 0 2 0 0.99 1 0.01
89 1 1 1 1
90 0 2 0 0.99 1 0.01
91 1 1 1 1
92 0 2 0 0.99 1 0.01
93 1 1 1 1
94 0 2 0 0.99 1 0.01
95 1 1 1 1
96 1 2 0 0.407142857142857 1 0.592857142857143
97 1 1 1 1
98 1 2 0 0.335714285714286 1 0.664285714285714
99 1 1 1 1
100 1 2 0 0.335714285714286 1 0.664285714285714
101 1 1 1 1
102 1 2 0 0.264285714285714 1 0.735714285714286
103 1 1 1 1
104 1 2 0 0.335714285714286 1 0.664285714285714
105 1 1 1 1
106 1 2 0 0.264285714285714 1 0.735714285714286
107 1 1 1 1
108 1 2 0 0.264285714285714 1 0.735714285714286
109 1 1 1 1
110 1 2 0 0.192857142857143 1 0.807142857142857
111 1 1 1 1
112 1 2 0 0.335714285714286 1 0.664285714285714
113 1 1 1 1
114 1 2 0 0.264285714285714 1 0.735714285714286
115 1 1 1 1
116 1 2 0 0.264285714285714 1 0.735714285714286
117 1 1 1 1
118 1 2 0 0.192857142857143 1 0.807142857142857
119 1 1 1 1
120 1 2 0 0.264285714285714 1 0.735714285714286
121 1 1 1 1
122 1 2 0 0.192857142857143 1 0.807142857142857
123 1 1 1 1
124 1 2 0 0.192857142857143 1 0.807142857142857
125 1 1 1 1
126 1 2 0 0.121428571428571 1 0.878571428571429
127 1 1 1 1
128 0 2 0 0.99 1 0.01
129 1 1 1 1
130 0 2 0 0.99 1 0.01
131 1 1 1 1
132 0 2 0 0.99 1 0.01
133 1 1 1 1
134 0 2 0 0.99 1 0.01
135 1 1 1 1
136 0 2 0 0.99 1 0.01
137 1 1 1 1
138 0 2 0 0.99 1 0.01
139 1 1 1 1
140 0 2 0 0.99 1 0.01
141 1 1 1 1
142 0 2 0 0.99 1 0.01
143 1 1 1 1
144 0 2 0 0.99 1 0.01
145 1 1 1 1
146 0 2 0 0.99 1 0.01
147 1 1 1 1
148 0 2 0 0.99 1 0.01
149 1 1 1 1
150 0 2 0 0.99 1 0.01
151 1 1 1 1
152 0 2 0 0.99 1 0.01
153 1 1 1 1
154 0 2 0 0.99 1 0.01
155 1 1 1 1
156 0 2 0 0.99 1 0.01
157 1 1 1 1
158 0 2 0 0.99 1 0.01
159 1 1 1 1
160 1 2 0 0.407142857142857 1 0.592857142857143
161 1 1 1 1
162 1 2 0 0.335714285714286 1 0.664285714285714
163 1 1 1 1
164 1 2 0 0.335714285714286 1 0.664285714285714
165 1 1 1 1
166 1 2 0 0.264285714285714 1 0.735714285714286
167 1 1 1 1
168 1 2 0 0.335714285714286 1 0.664285714285714
169 1 1 1 1
170 1 2 0 0.264285714285714 1 0.735714285714286
171 1 1 1 1
172 1 2 0 0.264285714285714 1 0.735714285714286
173 1 1 1 1
174 1 2 0 0.192857142857143 1 0.807142857142857
175 1 1 1 1
176 1 2 0 0.335714285714286 1 0.664285714285714
177 1 1 1 1
178 1 2 0 0.264285714285714 1 0.735714285714286
179 1 1 1 1
180 1 2 0 0.264285714285714 1 0.735714285714286
181 1 1 1 1
182 1 2 0 0.192857142857143 1 0.807142857142857
183 1 1 1 1
184 1 2 0 0.264285714285714 1 0.735714285714286
185 1 1 1 1
186 1 2 0 0.192857142857143 1 0.807142857142857
187 1 1 1 1
188 1 2 0 0.192857142857143 1 0.807142857142857
189 1 1 1 1
190 1 2 0 0.121428571428571 1 0.878571428571429
191 1 1 1 1
192 0 2 0 0.99 1 0.01
193 1 1 1 1
194 0 2 0 0.99 1 0.01
195 1 1 1 1
196 0 2 0 0.99 1 0.01
197 1 1 1 1
198 0 2 0 0.99 1 0.01
199 1 1 1 1
200 0 2 0 0.99 1 0.01
201 1 1 1 1
202 0 2 0 0.99 1 0.01
203 1 1 1 1
204 0 2 0 0.99 1 0.01
205 1 1 1 1
206 0 2 0 0.99 1 0.01
207 1 1 1 1
208 0 2 0 0.99 1 0.01
209 1 1 1 1
210 0 2 0 0.99 1 0.01
211 1 1 1 1
212 0 2 0 0.99 1 0.01
213 1 1 1 1
214 0 2 0 0.99 1 0.01
215 1 1 1 1
216 0 2 0 0.99 1 0.01
217 1 1 1 1
218 0 2 0 0.99 1 0.01
219 1 1 1 1
220 0 2 0 0.99 1 0.01
221 1 1 1 1
222 0 2 0 0.99 1 0.01
223 1 1 1 1
224 1 2 0 0.335714285714286 1 0.664285714285714
225 1 1 1 1
226 1 2 0 0.264285714285714 1 0.735714285714286
227 1 1 1 1
228 1 2 0 0.264285714285714 1 0.735714285714286
229 1 1 1 1
230 1 2 0 0.192857142857143 1 0.807142857142857
231 1 1 1 1
232 1 2 0 0.264285714285714 1 0.735714285714286
233 1 1 1 1
234 1 2 0 0.192857142857143 1 0.807142857142857
235 1 1 1 1
236 1 2 0 0.192857142857143 1 0.807142857142857
237 1 1 1 1
238 1 2 0 0.121428571428571 1 0.878571428571429
239 1 1 1 1
240 1 2 0 0.264285714285714 1 0.735714285714286
241 1 1 1 1
242 1 2 0 0.192857142857143 1 0.807142857142857
243 1 1 1 1
244 1 2 0 0.192857142857143 1 0.807142857142857
245 1 1 1 1
246 1 2 0 0.121428571428571 1 0.878571428571429
247 1 1 1 1
248 1 2 0 0.192857142857143 1 0.807142857142857
249 1 1 1 1
250 1 2 0 0.121428571428571 1 0.878571428571429
251 1 1 1 1
252 1 2 0 0.121428571428571 1 0.878571428571429
253 1 1 1 1
254 1 2 0 0.05 1 0.95
255 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
4374
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
37
## name
running(c43)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(37) : $c(1)) ($s(37) : Bernoulli(+(/(*(+($s(11) $s(8) $s(18) $s(35) $s(38) $s(40) $s(43) $c(1)) $c(0.5)) $c(8)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(37) : $c(1)) ($s(37) : <=($c(0.5) +(/(*(+($s(11) $s(8) $s(18) $s(35) $s(38) $s(40) $s(43) $c(1)) $c(0.5)) $c(8)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
37
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
512
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 0 2 0 0.99 1 0.01
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 0 2 0 0.99 1 0.01
11 1 1 1 1
12 0 2 0 0.99 1 0.01
13 1 1 1 1
14 0 2 0 0.99 1 0.01
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 0 2 0 0.99 1 0.01
19 1 1 1 1
20 0 2 0 0.99 1 0.01
21 1 1 1 1
22 0 2 0 0.99 1 0.01
23 1 1 1 1
24 0 2 0 0.99 1 0.01
25 1 1 1 1
26 0 2 0 0.99 1 0.01
27 1 1 1 1
28 0 2 0 0.99 1 0.01
29 1 1 1 1
30 0 2 0 0.99 1 0.01
31 1 1 1 1
32 1 2 0 0.4875 1 0.5125
33 1 1 1 1
34 1 2 0 0.425 1 0.575
35 1 1 1 1
36 1 2 0 0.425 1 0.575
37 1 1 1 1
38 1 2 0 0.3625 1 0.6375
39 1 1 1 1
40 1 2 0 0.425 1 0.575
41 1 1 1 1
42 1 2 0 0.3625 1 0.6375
43 1 1 1 1
44 1 2 0 0.3625 1 0.6375
45 1 1 1 1
46 1 2 0 0.3 1 0.7
47 1 1 1 1
48 1 2 0 0.425 1 0.575
49 1 1 1 1
50 1 2 0 0.3625 1 0.6375
51 1 1 1 1
52 1 2 0 0.3625 1 0.6375
53 1 1 1 1
54 1 2 0 0.3 1 0.7
55 1 1 1 1
56 1 2 0 0.3625 1 0.6375
57 1 1 1 1
58 1 2 0 0.3 1 0.7
59 1 1 1 1
60 1 2 0 0.3 1 0.7
61 1 1 1 1
62 1 2 0 0.2375 1 0.7625
63 1 1 1 1
64 0 2 0 0.99 1 0.01
65 1 1 1 1
66 0 2 0 0.99 1 0.01
67 1 1 1 1
68 0 2 0 0.99 1 0.01
69 1 1 1 1
70 0 2 0 0.99 1 0.01
71 1 1 1 1
72 0 2 0 0.99 1 0.01
73 1 1 1 1
74 0 2 0 0.99 1 0.01
75 1 1 1 1
76 0 2 0 0.99 1 0.01
77 1 1 1 1
78 0 2 0 0.99 1 0.01
79 1 1 1 1
80 0 2 0 0.99 1 0.01
81 1 1 1 1
82 0 2 0 0.99 1 0.01
83 1 1 1 1
84 0 2 0 0.99 1 0.01
85 1 1 1 1
86 0 2 0 0.99 1 0.01
87 1 1 1 1
88 0 2 0 0.99 1 0.01
89 1 1 1 1
90 0 2 0 0.99 1 0.01
91 1 1 1 1
92 0 2 0 0.99 1 0.01
93 1 1 1 1
94 0 2 0 0.99 1 0.01
95 1 1 1 1
96 1 2 0 0.425 1 0.575
97 1 1 1 1
98 1 2 0 0.3625 1 0.6375
99 1 1 1 1
100 1 2 0 0.3625 1 0.6375
101 1 1 1 1
102 1 2 0 0.3 1 0.7
103 1 1 1 1
104 1 2 0 0.3625 1 0.6375
105 1 1 1 1
106 1 2 0 0.3 1 0.7
107 1 1 1 1
108 1 2 0 0.3 1 0.7
109 1 1 1 1
110 1 2 0 0.2375 1 0.7625
111 1 1 1 1
112 1 2 0 0.3625 1 0.6375
113 1 1 1 1
114 1 2 0 0.3 1 0.7
115 1 1 1 1
116 1 2 0 0.3 1 0.7
117 1 1 1 1
118 1 2 0 0.2375 1 0.7625
119 1 1 1 1
120 1 2 0 0.3 1 0.7
121 1 1 1 1
122 1 2 0 0.2375 1 0.7625
123 1 1 1 1
124 1 2 0 0.2375 1 0.7625
125 1 1 1 1
126 1 2 0 0.175 1 0.825
127 1 1 1 1
128 0 2 0 0.99 1 0.01
129 1 1 1 1
130 0 2 0 0.99 1 0.01
131 1 1 1 1
132 0 2 0 0.99 1 0.01
133 1 1 1 1
134 0 2 0 0.99 1 0.01
135 1 1 1 1
136 0 2 0 0.99 1 0.01
137 1 1 1 1
138 0 2 0 0.99 1 0.01
139 1 1 1 1
140 0 2 0 0.99 1 0.01
141 1 1 1 1
142 0 2 0 0.99 1 0.01
143 1 1 1 1
144 0 2 0 0.99 1 0.01
145 1 1 1 1
146 0 2 0 0.99 1 0.01
147 1 1 1 1
148 0 2 0 0.99 1 0.01
149 1 1 1 1
150 0 2 0 0.99 1 0.01
151 1 1 1 1
152 0 2 0 0.99 1 0.01
153 1 1 1 1
154 0 2 0 0.99 1 0.01
155 1 1 1 1
156 0 2 0 0.99 1 0.01
157 1 1 1 1
158 0 2 0 0.99 1 0.01
159 1 1 1 1
160 1 2 0 0.425 1 0.575
161 1 1 1 1
162 1 2 0 0.3625 1 0.6375
163 1 1 1 1
164 1 2 0 0.3625 1 0.6375
165 1 1 1 1
166 1 2 0 0.3 1 0.7
167 1 1 1 1
168 1 2 0 0.3625 1 0.6375
169 1 1 1 1
170 1 2 0 0.3 1 0.7
171 1 1 1 1
172 1 2 0 0.3 1 0.7
173 1 1 1 1
174 1 2 0 0.2375 1 0.7625
175 1 1 1 1
176 1 2 0 0.3625 1 0.6375
177 1 1 1 1
178 1 2 0 0.3 1 0.7
179 1 1 1 1
180 1 2 0 0.3 1 0.7
181 1 1 1 1
182 1 2 0 0.2375 1 0.7625
183 1 1 1 1
184 1 2 0 0.3 1 0.7
185 1 1 1 1
186 1 2 0 0.2375 1 0.7625
187 1 1 1 1
188 1 2 0 0.2375 1 0.7625
189 1 1 1 1
190 1 2 0 0.175 1 0.825
191 1 1 1 1
192 0 2 0 0.99 1 0.01
193 1 1 1 1
194 0 2 0 0.99 1 0.01
195 1 1 1 1
196 0 2 0 0.99 1 0.01
197 1 1 1 1
198 0 2 0 0.99 1 0.01
199 1 1 1 1
200 0 2 0 0.99 1 0.01
201 1 1 1 1
202 0 2 0 0.99 1 0.01
203 1 1 1 1
204 0 2 0 0.99 1 0.01
205 1 1 1 1
206 0 2 0 0.99 1 0.01
207 1 1 1 1
208 0 2 0 0.99 1 0.01
209 1 1 1 1
210 0 2 0 0.99 1 0.01
211 1 1 1 1
212 0 2 0 0.99 1 0.01
213 1 1 1 1
214 0 2 0 0.99 1 0.01
215 1 1 1 1
216 0 2 0 0.99 1 0.01
217 1 1 1 1
218 0 2 0 0.99 1 0.01
219 1 1 1 1
220 0 2 0 0.99 1 0.01
221 1 1 1 1
222 0 2 0 0.99 1 0.01
223 1 1 1 1
224 1 2 0 0.3625 1 0.6375
225 1 1 1 1
226 1 2 0 0.3 1 0.7
227 1 1 1 1
228 1 2 0 0.3 1 0.7
229 1 1 1 1
230 1 2 0 0.2375 1 0.7625
231 1 1 1 1
232 1 2 0 0.3 1 0.7
233 1 1 1 1
234 1 2 0 0.2375 1 0.7625
235 1 1 1 1
236 1 2 0 0.2375 1 0.7625
237 1 1 1 1
238 1 2 0 0.175 1 0.825
239 1 1 1 1
240 1 2 0 0.3 1 0.7
241 1 1 1 1
242 1 2 0 0.2375 1 0.7625
243 1 1 1 1
244 1 2 0 0.2375 1 0.7625
245 1 1 1 1
246 1 2 0 0.175 1 0.825
247 1 1 1 1
248 1 2 0 0.2375 1 0.7625
249 1 1 1 1
250 1 2 0 0.175 1 0.825
251 1 1 1 1
252 1 2 0 0.175 1 0.825
253 1 1 1 1
254 1 2 0 0.1125 1 0.8875
255 1 1 1 1
256 0 2 0 0.99 1 0.01
257 1 1 1 1
258 0 2 0 0.99 1 0.01
259 1 1 1 1
260 0 2 0 0.99 1 0.01
261 1 1 1 1
262 0 2 0 0.99 1 0.01
263 1 1 1 1
264 0 2 0 0.99 1 0.01
265 1 1 1 1
266 0 2 0 0.99 1 0.01
267 1 1 1 1
268 0 2 0 0.99 1 0.01
269 1 1 1 1
270 0 2 0 0.99 1 0.01
271 1 1 1 1
272 0 2 0 0.99 1 0.01
273 1 1 1 1
274 0 2 0 0.99 1 0.01
275 1 1 1 1
276 0 2 0 0.99 1 0.01
277 1 1 1 1
278 0 2 0 0.99 1 0.01
279 1 1 1 1
280 0 2 0 0.99 1 0.01
281 1 1 1 1
282 0 2 0 0.99 1 0.01
283 1 1 1 1
284 0 2 0 0.99 1 0.01
285 1 1 1 1
286 0 2 0 0.99 1 0.01
287 1 1 1 1
288 1 2 0 0.425 1 0.575
289 1 1 1 1
290 1 2 0 0.3625 1 0.6375
291 1 1 1 1
292 1 2 0 0.3625 1 0.6375
293 1 1 1 1
294 1 2 0 0.3 1 0.7
295 1 1 1 1
296 1 2 0 0.3625 1 0.6375
297 1 1 1 1
298 1 2 0 0.3 1 0.7
299 1 1 1 1
300 1 2 0 0.3 1 0.7
301 1 1 1 1
302 1 2 0 0.2375 1 0.7625
303 1 1 1 1
304 1 2 0 0.3625 1 0.6375
305 1 1 1 1
306 1 2 0 0.3 1 0.7
307 1 1 1 1
308 1 2 0 0.3 1 0.7
309 1 1 1 1
310 1 2 0 0.2375 1 0.7625
311 1 1 1 1
312 1 2 0 0.3 1 0.7
313 1 1 1 1
314 1 2 0 0.2375 1 0.7625
315 1 1 1 1
316 1 2 0 0.2375 1 0.7625
317 1 1 1 1
318 1 2 0 0.175 1 0.825
319 1 1 1 1
320 0 2 0 0.99 1 0.01
321 1 1 1 1
322 0 2 0 0.99 1 0.01
323 1 1 1 1
324 0 2 0 0.99 1 0.01
325 1 1 1 1
326 0 2 0 0.99 1 0.01
327 1 1 1 1
328 0 2 0 0.99 1 0.01
329 1 1 1 1
330 0 2 0 0.99 1 0.01
331 1 1 1 1
332 0 2 0 0.99 1 0.01
333 1 1 1 1
334 0 2 0 0.99 1 0.01
335 1 1 1 1
336 0 2 0 0.99 1 0.01
337 1 1 1 1
338 0 2 0 0.99 1 0.01
339 1 1 1 1
340 0 2 0 0.99 1 0.01
341 1 1 1 1
342 0 2 0 0.99 1 0.01
343 1 1 1 1
344 0 2 0 0.99 1 0.01
345 1 1 1 1
346 0 2 0 0.99 1 0.01
347 1 1 1 1
348 0 2 0 0.99 1 0.01
349 1 1 1 1
350 0 2 0 0.99 1 0.01
351 1 1 1 1
352 1 2 0 0.3625 1 0.6375
353 1 1 1 1
354 1 2 0 0.3 1 0.7
355 1 1 1 1
356 1 2 0 0.3 1 0.7
357 1 1 1 1
358 1 2 0 0.2375 1 0.7625
359 1 1 1 1
360 1 2 0 0.3 1 0.7
361 1 1 1 1
362 1 2 0 0.2375 1 0.7625
363 1 1 1 1
364 1 2 0 0.2375 1 0.7625
365 1 1 1 1
366 1 2 0 0.175 1 0.825
367 1 1 1 1
368 1 2 0 0.3 1 0.7
369 1 1 1 1
370 1 2 0 0.2375 1 0.7625
371 1 1 1 1
372 1 2 0 0.2375 1 0.7625
373 1 1 1 1
374 1 2 0 0.175 1 0.825
375 1 1 1 1
376 1 2 0 0.2375 1 0.7625
377 1 1 1 1
378 1 2 0 0.175 1 0.825
379 1 1 1 1
380 1 2 0 0.175 1 0.825
381 1 1 1 1
382 1 2 0 0.1125 1 0.8875
383 1 1 1 1
384 0 2 0 0.99 1 0.01
385 1 1 1 1
386 0 2 0 0.99 1 0.01
387 1 1 1 1
388 0 2 0 0.99 1 0.01
389 1 1 1 1
390 0 2 0 0.99 1 0.01
391 1 1 1 1
392 0 2 0 0.99 1 0.01
393 1 1 1 1
394 0 2 0 0.99 1 0.01
395 1 1 1 1
396 0 2 0 0.99 1 0.01
397 1 1 1 1
398 0 2 0 0.99 1 0.01
399 1 1 1 1
400 0 2 0 0.99 1 0.01
401 1 1 1 1
402 0 2 0 0.99 1 0.01
403 1 1 1 1
404 0 2 0 0.99 1 0.01
405 1 1 1 1
406 0 2 0 0.99 1 0.01
407 1 1 1 1
408 0 2 0 0.99 1 0.01
409 1 1 1 1
410 0 2 0 0.99 1 0.01
411 1 1 1 1
412 0 2 0 0.99 1 0.01
413 1 1 1 1
414 0 2 0 0.99 1 0.01
415 1 1 1 1
416 1 2 0 0.3625 1 0.6375
417 1 1 1 1
418 1 2 0 0.3 1 0.7
419 1 1 1 1
420 1 2 0 0.3 1 0.7
421 1 1 1 1
422 1 2 0 0.2375 1 0.7625
423 1 1 1 1
424 1 2 0 0.3 1 0.7
425 1 1 1 1
426 1 2 0 0.2375 1 0.7625
427 1 1 1 1
428 1 2 0 0.2375 1 0.7625
429 1 1 1 1
430 1 2 0 0.175 1 0.825
431 1 1 1 1
432 1 2 0 0.3 1 0.7
433 1 1 1 1
434 1 2 0 0.2375 1 0.7625
435 1 1 1 1
436 1 2 0 0.2375 1 0.7625
437 1 1 1 1
438 1 2 0 0.175 1 0.825
439 1 1 1 1
440 1 2 0 0.2375 1 0.7625
441 1 1 1 1
442 1 2 0 0.175 1 0.825
443 1 1 1 1
444 1 2 0 0.175 1 0.825
445 1 1 1 1
446 1 2 0 0.1125 1 0.8875
447 1 1 1 1
448 0 2 0 0.99 1 0.01
449 1 1 1 1
450 0 2 0 0.99 1 0.01
451 1 1 1 1
452 0 2 0 0.99 1 0.01
453 1 1 1 1
454 0 2 0 0.99 1 0.01
455 1 1 1 1
456 0 2 0 0.99 1 0.01
457 1 1 1 1
458 0 2 0 0.99 1 0.01
459 1 1 1 1
460 0 2 0 0.99 1 0.01
461 1 1 1 1
462 0 2 0 0.99 1 0.01
463 1 1 1 1
464 0 2 0 0.99 1 0.01
465 1 1 1 1
466 0 2 0 0.99 1 0.01
467 1 1 1 1
468 0 2 0 0.99 1 0.01
469 1 1 1 1
470 0 2 0 0.99 1 0.01
471 1 1 1 1
472 0 2 0 0.99 1 0.01
473 1 1 1 1
474 0 2 0 0.99 1 0.01
475 1 1 1 1
476 0 2 0 0.99 1 0.01
477 1 1 1 1
478 0 2 0 0.99 1 0.01
479 1 1 1 1
480 1 2 0 0.3 1 0.7
481 1 1 1 1
482 1 2 0 0.2375 1 0.7625
483 1 1 1 1
484 1 2 0 0.2375 1 0.7625
485 1 1 1 1
486 1 2 0 0.175 1 0.825
487 1 1 1 1
488 1 2 0 0.2375 1 0.7625
489 1 1 1 1
490 1 2 0 0.175 1 0.825
491 1 1 1 1
492 1 2 0 0.175 1 0.825
493 1 1 1 1
494 1 2 0 0.1125 1 0.8875
495 1 1 1 1
496 1 2 0 0.2375 1 0.7625
497 1 1 1 1
498 1 2 0 0.175 1 0.825
499 1 1 1 1
500 1 2 0 0.175 1 0.825
501 1 1 1 1
502 1 2 0 0.1125 1 0.8875
503 1 1 1 1
504 1 2 0 0.175 1 0.825
505 1 1 1 1
506 1 2 0 0.1125 1 0.8875
507 1 1 1 1
508 1 2 0 0.1125 1 0.8875
509 1 1 1 1
510 1 2 0 0.05 1 0.95
511 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
13122
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
38
## name
running(c44)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(38) : $c(1)) ($s(38) : Bernoulli(+(/(*(+($s(44) $s(49) $s(15) $s(18) $s(19) $s(24) $s(42) $s(43) $c(1)) $c(0.5)) $c(9)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(38) : $c(1)) ($s(38) : <=($c(0.5) +(/(*(+($s(44) $s(49) $s(15) $s(18) $s(19) $s(24) $s(42) $s(43) $c(1)) $c(0.5)) $c(9)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
38
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
1024
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 0 2 0 0.99 1 0.01
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 0 2 0 0.99 1 0.01
11 1 1 1 1
12 0 2 0 0.99 1 0.01
13 1 1 1 1
14 0 2 0 0.99 1 0.01
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 0 2 0 0.99 1 0.01
19 1 1 1 1
20 0 2 0 0.99 1 0.01
21 1 1 1 1
22 0 2 0 0.99 1 0.01
23 1 1 1 1
24 0 2 0 0.99 1 0.01
25 1 1 1 1
26 0 2 0 0.99 1 0.01
27 1 1 1 1
28 0 2 0 0.99 1 0.01
29 1 1 1 1
30 0 2 0 0.99 1 0.01
31 1 1 1 1
32 1 2 0 0.494444444444444 1 0.505555555555556
33 1 1 1 1
34 1 2 0 0.438888888888889 1 0.561111111111111
35 1 1 1 1
36 1 2 0 0.438888888888889 1 0.561111111111111
37 1 1 1 1
38 1 2 0 0.383333333333333 1 0.616666666666667
39 1 1 1 1
40 1 2 0 0.438888888888889 1 0.561111111111111
41 1 1 1 1
42 1 2 0 0.383333333333333 1 0.616666666666667
43 1 1 1 1
44 1 2 0 0.383333333333333 1 0.616666666666667
45 1 1 1 1
46 1 2 0 0.327777777777778 1 0.672222222222222
47 1 1 1 1
48 1 2 0 0.438888888888889 1 0.561111111111111
49 1 1 1 1
50 1 2 0 0.383333333333333 1 0.616666666666667
51 1 1 1 1
52 1 2 0 0.383333333333333 1 0.616666666666667
53 1 1 1 1
54 1 2 0 0.327777777777778 1 0.672222222222222
55 1 1 1 1
56 1 2 0 0.383333333333333 1 0.616666666666667
57 1 1 1 1
58 1 2 0 0.327777777777778 1 0.672222222222222
59 1 1 1 1
60 1 2 0 0.327777777777778 1 0.672222222222222
61 1 1 1 1
62 1 2 0 0.272222222222222 1 0.727777777777778
63 1 1 1 1
64 0 2 0 0.99 1 0.01
65 1 1 1 1
66 0 2 0 0.99 1 0.01
67 1 1 1 1
68 0 2 0 0.99 1 0.01
69 1 1 1 1
70 0 2 0 0.99 1 0.01
71 1 1 1 1
72 0 2 0 0.99 1 0.01
73 1 1 1 1
74 0 2 0 0.99 1 0.01
75 1 1 1 1
76 0 2 0 0.99 1 0.01
77 1 1 1 1
78 0 2 0 0.99 1 0.01
79 1 1 1 1
80 0 2 0 0.99 1 0.01
81 1 1 1 1
82 0 2 0 0.99 1 0.01
83 1 1 1 1
84 0 2 0 0.99 1 0.01
85 1 1 1 1
86 0 2 0 0.99 1 0.01
87 1 1 1 1
88 0 2 0 0.99 1 0.01
89 1 1 1 1
90 0 2 0 0.99 1 0.01
91 1 1 1 1
92 0 2 0 0.99 1 0.01
93 1 1 1 1
94 0 2 0 0.99 1 0.01
95 1 1 1 1
96 1 2 0 0.438888888888889 1 0.561111111111111
97 1 1 1 1
98 1 2 0 0.383333333333333 1 0.616666666666667
99 1 1 1 1
100 1 2 0 0.383333333333333 1 0.616666666666667
101 1 1 1 1
102 1 2 0 0.327777777777778 1 0.672222222222222
103 1 1 1 1
104 1 2 0 0.383333333333333 1 0.616666666666667
105 1 1 1 1
106 1 2 0 0.327777777777778 1 0.672222222222222
107 1 1 1 1
108 1 2 0 0.327777777777778 1 0.672222222222222
109 1 1 1 1
110 1 2 0 0.272222222222222 1 0.727777777777778
111 1 1 1 1
112 1 2 0 0.383333333333333 1 0.616666666666667
113 1 1 1 1
114 1 2 0 0.327777777777778 1 0.672222222222222
115 1 1 1 1
116 1 2 0 0.327777777777778 1 0.672222222222222
117 1 1 1 1
118 1 2 0 0.272222222222222 1 0.727777777777778
119 1 1 1 1
120 1 2 0 0.327777777777778 1 0.672222222222222
121 1 1 1 1
122 1 2 0 0.272222222222222 1 0.727777777777778
123 1 1 1 1
124 1 2 0 0.272222222222222 1 0.727777777777778
125 1 1 1 1
126 1 2 0 0.216666666666667 1 0.783333333333333
127 1 1 1 1
128 0 2 0 0.99 1 0.01
129 1 1 1 1
130 0 2 0 0.99 1 0.01
131 1 1 1 1
132 0 2 0 0.99 1 0.01
133 1 1 1 1
134 0 2 0 0.99 1 0.01
135 1 1 1 1
136 0 2 0 0.99 1 0.01
137 1 1 1 1
138 0 2 0 0.99 1 0.01
139 1 1 1 1
140 0 2 0 0.99 1 0.01
141 1 1 1 1
142 0 2 0 0.99 1 0.01
143 1 1 1 1
144 0 2 0 0.99 1 0.01
145 1 1 1 1
146 0 2 0 0.99 1 0.01
147 1 1 1 1
148 0 2 0 0.99 1 0.01
149 1 1 1 1
150 0 2 0 0.99 1 0.01
151 1 1 1 1
152 0 2 0 0.99 1 0.01
153 1 1 1 1
154 0 2 0 0.99 1 0.01
155 1 1 1 1
156 0 2 0 0.99 1 0.01
157 1 1 1 1
158 0 2 0 0.99 1 0.01
159 1 1 1 1
160 1 2 0 0.438888888888889 1 0.561111111111111
161 1 1 1 1
162 1 2 0 0.383333333333333 1 0.616666666666667
163 1 1 1 1
164 1 2 0 0.383333333333333 1 0.616666666666667
165 1 1 1 1
166 1 2 0 0.327777777777778 1 0.672222222222222
167 1 1 1 1
168 1 2 0 0.383333333333333 1 0.616666666666667
169 1 1 1 1
170 1 2 0 0.327777777777778 1 0.672222222222222
171 1 1 1 1
172 1 2 0 0.327777777777778 1 0.672222222222222
173 1 1 1 1
174 1 2 0 0.272222222222222 1 0.727777777777778
175 1 1 1 1
176 1 2 0 0.383333333333333 1 0.616666666666667
177 1 1 1 1
178 1 2 0 0.327777777777778 1 0.672222222222222
179 1 1 1 1
180 1 2 0 0.327777777777778 1 0.672222222222222
181 1 1 1 1
182 1 2 0 0.272222222222222 1 0.727777777777778
183 1 1 1 1
184 1 2 0 0.327777777777778 1 0.672222222222222
185 1 1 1 1
186 1 2 0 0.272222222222222 1 0.727777777777778
187 1 1 1 1
188 1 2 0 0.272222222222222 1 0.727777777777778
189 1 1 1 1
190 1 2 0 0.216666666666667 1 0.783333333333333
191 1 1 1 1
192 0 2 0 0.99 1 0.01
193 1 1 1 1
194 0 2 0 0.99 1 0.01
195 1 1 1 1
196 0 2 0 0.99 1 0.01
197 1 1 1 1
198 0 2 0 0.99 1 0.01
199 1 1 1 1
200 0 2 0 0.99 1 0.01
201 1 1 1 1
202 0 2 0 0.99 1 0.01
203 1 1 1 1
204 0 2 0 0.99 1 0.01
205 1 1 1 1
206 0 2 0 0.99 1 0.01
207 1 1 1 1
208 0 2 0 0.99 1 0.01
209 1 1 1 1
210 0 2 0 0.99 1 0.01
211 1 1 1 1
212 0 2 0 0.99 1 0.01
213 1 1 1 1
214 0 2 0 0.99 1 0.01
215 1 1 1 1
216 0 2 0 0.99 1 0.01
217 1 1 1 1
218 0 2 0 0.99 1 0.01
219 1 1 1 1
220 0 2 0 0.99 1 0.01
221 1 1 1 1
222 0 2 0 0.99 1 0.01
223 1 1 1 1
224 1 2 0 0.383333333333333 1 0.616666666666667
225 1 1 1 1
226 1 2 0 0.327777777777778 1 0.672222222222222
227 1 1 1 1
228 1 2 0 0.327777777777778 1 0.672222222222222
229 1 1 1 1
230 1 2 0 0.272222222222222 1 0.727777777777778
231 1 1 1 1
232 1 2 0 0.327777777777778 1 0.672222222222222
233 1 1 1 1
234 1 2 0 0.272222222222222 1 0.727777777777778
235 1 1 1 1
236 1 2 0 0.272222222222222 1 0.727777777777778
237 1 1 1 1
238 1 2 0 0.216666666666667 1 0.783333333333333
239 1 1 1 1
240 1 2 0 0.327777777777778 1 0.672222222222222
241 1 1 1 1
242 1 2 0 0.272222222222222 1 0.727777777777778
243 1 1 1 1
244 1 2 0 0.272222222222222 1 0.727777777777778
245 1 1 1 1
246 1 2 0 0.216666666666667 1 0.783333333333333
247 1 1 1 1
248 1 2 0 0.272222222222222 1 0.727777777777778
249 1 1 1 1
250 1 2 0 0.216666666666667 1 0.783333333333333
251 1 1 1 1
252 1 2 0 0.216666666666667 1 0.783333333333333
253 1 1 1 1
254 1 2 0 0.161111111111111 1 0.838888888888889
255 1 1 1 1
256 0 2 0 0.99 1 0.01
257 1 1 1 1
258 0 2 0 0.99 1 0.01
259 1 1 1 1
260 0 2 0 0.99 1 0.01
261 1 1 1 1
262 0 2 0 0.99 1 0.01
263 1 1 1 1
264 0 2 0 0.99 1 0.01
265 1 1 1 1
266 0 2 0 0.99 1 0.01
267 1 1 1 1
268 0 2 0 0.99 1 0.01
269 1 1 1 1
270 0 2 0 0.99 1 0.01
271 1 1 1 1
272 0 2 0 0.99 1 0.01
273 1 1 1 1
274 0 2 0 0.99 1 0.01
275 1 1 1 1
276 0 2 0 0.99 1 0.01
277 1 1 1 1
278 0 2 0 0.99 1 0.01
279 1 1 1 1
280 0 2 0 0.99 1 0.01
281 1 1 1 1
282 0 2 0 0.99 1 0.01
283 1 1 1 1
284 0 2 0 0.99 1 0.01
285 1 1 1 1
286 0 2 0 0.99 1 0.01
287 1 1 1 1
288 1 2 0 0.438888888888889 1 0.561111111111111
289 1 1 1 1
290 1 2 0 0.383333333333333 1 0.616666666666667
291 1 1 1 1
292 1 2 0 0.383333333333333 1 0.616666666666667
293 1 1 1 1
294 1 2 0 0.327777777777778 1 0.672222222222222
295 1 1 1 1
296 1 2 0 0.383333333333333 1 0.616666666666667
297 1 1 1 1
298 1 2 0 0.327777777777778 1 0.672222222222222
299 1 1 1 1
300 1 2 0 0.327777777777778 1 0.672222222222222
301 1 1 1 1
302 1 2 0 0.272222222222222 1 0.727777777777778
303 1 1 1 1
304 1 2 0 0.383333333333333 1 0.616666666666667
305 1 1 1 1
306 1 2 0 0.327777777777778 1 0.672222222222222
307 1 1 1 1
308 1 2 0 0.327777777777778 1 0.672222222222222
309 1 1 1 1
310 1 2 0 0.272222222222222 1 0.727777777777778
311 1 1 1 1
312 1 2 0 0.327777777777778 1 0.672222222222222
313 1 1 1 1
314 1 2 0 0.272222222222222 1 0.727777777777778
315 1 1 1 1
316 1 2 0 0.272222222222222 1 0.727777777777778
317 1 1 1 1
318 1 2 0 0.216666666666667 1 0.783333333333333
319 1 1 1 1
320 0 2 0 0.99 1 0.01
321 1 1 1 1
322 0 2 0 0.99 1 0.01
323 1 1 1 1
324 0 2 0 0.99 1 0.01
325 1 1 1 1
326 0 2 0 0.99 1 0.01
327 1 1 1 1
328 0 2 0 0.99 1 0.01
329 1 1 1 1
330 0 2 0 0.99 1 0.01
331 1 1 1 1
332 0 2 0 0.99 1 0.01
333 1 1 1 1
334 0 2 0 0.99 1 0.01
335 1 1 1 1
336 0 2 0 0.99 1 0.01
337 1 1 1 1
338 0 2 0 0.99 1 0.01
339 1 1 1 1
340 0 2 0 0.99 1 0.01
341 1 1 1 1
342 0 2 0 0.99 1 0.01
343 1 1 1 1
344 0 2 0 0.99 1 0.01
345 1 1 1 1
346 0 2 0 0.99 1 0.01
347 1 1 1 1
348 0 2 0 0.99 1 0.01
349 1 1 1 1
350 0 2 0 0.99 1 0.01
351 1 1 1 1
352 1 2 0 0.383333333333333 1 0.616666666666667
353 1 1 1 1
354 1 2 0 0.327777777777778 1 0.672222222222222
355 1 1 1 1
356 1 2 0 0.327777777777778 1 0.672222222222222
357 1 1 1 1
358 1 2 0 0.272222222222222 1 0.727777777777778
359 1 1 1 1
360 1 2 0 0.327777777777778 1 0.672222222222222
361 1 1 1 1
362 1 2 0 0.272222222222222 1 0.727777777777778
363 1 1 1 1
364 1 2 0 0.272222222222222 1 0.727777777777778
365 1 1 1 1
366 1 2 0 0.216666666666667 1 0.783333333333333
367 1 1 1 1
368 1 2 0 0.327777777777778 1 0.672222222222222
369 1 1 1 1
370 1 2 0 0.272222222222222 1 0.727777777777778
371 1 1 1 1
372 1 2 0 0.272222222222222 1 0.727777777777778
373 1 1 1 1
374 1 2 0 0.216666666666667 1 0.783333333333333
375 1 1 1 1
376 1 2 0 0.272222222222222 1 0.727777777777778
377 1 1 1 1
378 1 2 0 0.216666666666667 1 0.783333333333333
379 1 1 1 1
380 1 2 0 0.216666666666667 1 0.783333333333333
381 1 1 1 1
382 1 2 0 0.161111111111111 1 0.838888888888889
383 1 1 1 1
384 0 2 0 0.99 1 0.01
385 1 1 1 1
386 0 2 0 0.99 1 0.01
387 1 1 1 1
388 0 2 0 0.99 1 0.01
389 1 1 1 1
390 0 2 0 0.99 1 0.01
391 1 1 1 1
392 0 2 0 0.99 1 0.01
393 1 1 1 1
394 0 2 0 0.99 1 0.01
395 1 1 1 1
396 0 2 0 0.99 1 0.01
397 1 1 1 1
398 0 2 0 0.99 1 0.01
399 1 1 1 1
400 0 2 0 0.99 1 0.01
401 1 1 1 1
402 0 2 0 0.99 1 0.01
403 1 1 1 1
404 0 2 0 0.99 1 0.01
405 1 1 1 1
406 0 2 0 0.99 1 0.01
407 1 1 1 1
408 0 2 0 0.99 1 0.01
409 1 1 1 1
410 0 2 0 0.99 1 0.01
411 1 1 1 1
412 0 2 0 0.99 1 0.01
413 1 1 1 1
414 0 2 0 0.99 1 0.01
415 1 1 1 1
416 1 2 0 0.383333333333333 1 0.616666666666667
417 1 1 1 1
418 1 2 0 0.327777777777778 1 0.672222222222222
419 1 1 1 1
420 1 2 0 0.327777777777778 1 0.672222222222222
421 1 1 1 1
422 1 2 0 0.272222222222222 1 0.727777777777778
423 1 1 1 1
424 1 2 0 0.327777777777778 1 0.672222222222222
425 1 1 1 1
426 1 2 0 0.272222222222222 1 0.727777777777778
427 1 1 1 1
428 1 2 0 0.272222222222222 1 0.727777777777778
429 1 1 1 1
430 1 2 0 0.216666666666667 1 0.783333333333333
431 1 1 1 1
432 1 2 0 0.327777777777778 1 0.672222222222222
433 1 1 1 1
434 1 2 0 0.272222222222222 1 0.727777777777778
435 1 1 1 1
436 1 2 0 0.272222222222222 1 0.727777777777778
437 1 1 1 1
438 1 2 0 0.216666666666667 1 0.783333333333333
439 1 1 1 1
440 1 2 0 0.272222222222222 1 0.727777777777778
441 1 1 1 1
442 1 2 0 0.216666666666667 1 0.783333333333333
443 1 1 1 1
444 1 2 0 0.216666666666667 1 0.783333333333333
445 1 1 1 1
446 1 2 0 0.161111111111111 1 0.838888888888889
447 1 1 1 1
448 0 2 0 0.99 1 0.01
449 1 1 1 1
450 0 2 0 0.99 1 0.01
451 1 1 1 1
452 0 2 0 0.99 1 0.01
453 1 1 1 1
454 0 2 0 0.99 1 0.01
455 1 1 1 1
456 0 2 0 0.99 1 0.01
457 1 1 1 1
458 0 2 0 0.99 1 0.01
459 1 1 1 1
460 0 2 0 0.99 1 0.01
461 1 1 1 1
462 0 2 0 0.99 1 0.01
463 1 1 1 1
464 0 2 0 0.99 1 0.01
465 1 1 1 1
466 0 2 0 0.99 1 0.01
467 1 1 1 1
468 0 2 0 0.99 1 0.01
469 1 1 1 1
470 0 2 0 0.99 1 0.01
471 1 1 1 1
472 0 2 0 0.99 1 0.01
473 1 1 1 1
474 0 2 0 0.99 1 0.01
475 1 1 1 1
476 0 2 0 0.99 1 0.01
477 1 1 1 1
478 0 2 0 0.99 1 0.01
479 1 1 1 1
480 1 2 0 0.327777777777778 1 0.672222222222222
481 1 1 1 1
482 1 2 0 0.272222222222222 1 0.727777777777778
483 1 1 1 1
484 1 2 0 0.272222222222222 1 0.727777777777778
485 1 1 1 1
486 1 2 0 0.216666666666667 1 0.783333333333333
487 1 1 1 1
488 1 2 0 0.272222222222222 1 0.727777777777778
489 1 1 1 1
490 1 2 0 0.216666666666667 1 0.783333333333333
491 1 1 1 1
492 1 2 0 0.216666666666667 1 0.783333333333333
493 1 1 1 1
494 1 2 0 0.161111111111111 1 0.838888888888889
495 1 1 1 1
496 1 2 0 0.272222222222222 1 0.727777777777778
497 1 1 1 1
498 1 2 0 0.216666666666667 1 0.783333333333333
499 1 1 1 1
500 1 2 0 0.216666666666667 1 0.783333333333333
501 1 1 1 1
502 1 2 0 0.161111111111111 1 0.838888888888889
503 1 1 1 1
504 1 2 0 0.216666666666667 1 0.783333333333333
505 1 1 1 1
506 1 2 0 0.161111111111111 1 0.838888888888889
507 1 1 1 1
508 1 2 0 0.161111111111111 1 0.838888888888889
509 1 1 1 1
510 1 2 0 0.105555555555556 1 0.894444444444444
511 1 1 1 1
512 0 2 0 0.99 1 0.01
513 1 1 1 1
514 0 2 0 0.99 1 0.01
515 1 1 1 1
516 0 2 0 0.99 1 0.01
517 1 1 1 1
518 0 2 0 0.99 1 0.01
519 1 1 1 1
520 0 2 0 0.99 1 0.01
521 1 1 1 1
522 0 2 0 0.99 1 0.01
523 1 1 1 1
524 0 2 0 0.99 1 0.01
525 1 1 1 1
526 0 2 0 0.99 1 0.01
527 1 1 1 1
528 0 2 0 0.99 1 0.01
529 1 1 1 1
530 0 2 0 0.99 1 0.01
531 1 1 1 1
532 0 2 0 0.99 1 0.01
533 1 1 1 1
534 0 2 0 0.99 1 0.01
535 1 1 1 1
536 0 2 0 0.99 1 0.01
537 1 1 1 1
538 0 2 0 0.99 1 0.01
539 1 1 1 1
540 0 2 0 0.99 1 0.01
541 1 1 1 1
542 0 2 0 0.99 1 0.01
543 1 1 1 1
544 1 2 0 0.438888888888889 1 0.561111111111111
545 1 1 1 1
546 1 2 0 0.383333333333333 1 0.616666666666667
547 1 1 1 1
548 1 2 0 0.383333333333333 1 0.616666666666667
549 1 1 1 1
550 1 2 0 0.327777777777778 1 0.672222222222222
551 1 1 1 1
552 1 2 0 0.383333333333333 1 0.616666666666667
553 1 1 1 1
554 1 2 0 0.327777777777778 1 0.672222222222222
555 1 1 1 1
556 1 2 0 0.327777777777778 1 0.672222222222222
557 1 1 1 1
558 1 2 0 0.272222222222222 1 0.727777777777778
559 1 1 1 1
560 1 2 0 0.383333333333333 1 0.616666666666667
561 1 1 1 1
562 1 2 0 0.327777777777778 1 0.672222222222222
563 1 1 1 1
564 1 2 0 0.327777777777778 1 0.672222222222222
565 1 1 1 1
566 1 2 0 0.272222222222222 1 0.727777777777778
567 1 1 1 1
568 1 2 0 0.327777777777778 1 0.672222222222222
569 1 1 1 1
570 1 2 0 0.272222222222222 1 0.727777777777778
571 1 1 1 1
572 1 2 0 0.272222222222222 1 0.727777777777778
573 1 1 1 1
574 1 2 0 0.216666666666667 1 0.783333333333333
575 1 1 1 1
576 0 2 0 0.99 1 0.01
577 1 1 1 1
578 0 2 0 0.99 1 0.01
579 1 1 1 1
580 0 2 0 0.99 1 0.01
581 1 1 1 1
582 0 2 0 0.99 1 0.01
583 1 1 1 1
584 0 2 0 0.99 1 0.01
585 1 1 1 1
586 0 2 0 0.99 1 0.01
587 1 1 1 1
588 0 2 0 0.99 1 0.01
589 1 1 1 1
590 0 2 0 0.99 1 0.01
591 1 1 1 1
592 0 2 0 0.99 1 0.01
593 1 1 1 1
594 0 2 0 0.99 1 0.01
595 1 1 1 1
596 0 2 0 0.99 1 0.01
597 1 1 1 1
598 0 2 0 0.99 1 0.01
599 1 1 1 1
600 0 2 0 0.99 1 0.01
601 1 1 1 1
602 0 2 0 0.99 1 0.01
603 1 1 1 1
604 0 2 0 0.99 1 0.01
605 1 1 1 1
606 0 2 0 0.99 1 0.01
607 1 1 1 1
608 1 2 0 0.383333333333333 1 0.616666666666667
609 1 1 1 1
610 1 2 0 0.327777777777778 1 0.672222222222222
611 1 1 1 1
612 1 2 0 0.327777777777778 1 0.672222222222222
613 1 1 1 1
614 1 2 0 0.272222222222222 1 0.727777777777778
615 1 1 1 1
616 1 2 0 0.327777777777778 1 0.672222222222222
617 1 1 1 1
618 1 2 0 0.272222222222222 1 0.727777777777778
619 1 1 1 1
620 1 2 0 0.272222222222222 1 0.727777777777778
621 1 1 1 1
622 1 2 0 0.216666666666667 1 0.783333333333333
623 1 1 1 1
624 1 2 0 0.327777777777778 1 0.672222222222222
625 1 1 1 1
626 1 2 0 0.272222222222222 1 0.727777777777778
627 1 1 1 1
628 1 2 0 0.272222222222222 1 0.727777777777778
629 1 1 1 1
630 1 2 0 0.216666666666667 1 0.783333333333333
631 1 1 1 1
632 1 2 0 0.272222222222222 1 0.727777777777778
633 1 1 1 1
634 1 2 0 0.216666666666667 1 0.783333333333333
635 1 1 1 1
636 1 2 0 0.216666666666667 1 0.783333333333333
637 1 1 1 1
638 1 2 0 0.161111111111111 1 0.838888888888889
639 1 1 1 1
640 0 2 0 0.99 1 0.01
641 1 1 1 1
642 0 2 0 0.99 1 0.01
643 1 1 1 1
644 0 2 0 0.99 1 0.01
645 1 1 1 1
646 0 2 0 0.99 1 0.01
647 1 1 1 1
648 0 2 0 0.99 1 0.01
649 1 1 1 1
650 0 2 0 0.99 1 0.01
651 1 1 1 1
652 0 2 0 0.99 1 0.01
653 1 1 1 1
654 0 2 0 0.99 1 0.01
655 1 1 1 1
656 0 2 0 0.99 1 0.01
657 1 1 1 1
658 0 2 0 0.99 1 0.01
659 1 1 1 1
660 0 2 0 0.99 1 0.01
661 1 1 1 1
662 0 2 0 0.99 1 0.01
663 1 1 1 1
664 0 2 0 0.99 1 0.01
665 1 1 1 1
666 0 2 0 0.99 1 0.01
667 1 1 1 1
668 0 2 0 0.99 1 0.01
669 1 1 1 1
670 0 2 0 0.99 1 0.01
671 1 1 1 1
672 1 2 0 0.383333333333333 1 0.616666666666667
673 1 1 1 1
674 1 2 0 0.327777777777778 1 0.672222222222222
675 1 1 1 1
676 1 2 0 0.327777777777778 1 0.672222222222222
677 1 1 1 1
678 1 2 0 0.272222222222222 1 0.727777777777778
679 1 1 1 1
680 1 2 0 0.327777777777778 1 0.672222222222222
681 1 1 1 1
682 1 2 0 0.272222222222222 1 0.727777777777778
683 1 1 1 1
684 1 2 0 0.272222222222222 1 0.727777777777778
685 1 1 1 1
686 1 2 0 0.216666666666667 1 0.783333333333333
687 1 1 1 1
688 1 2 0 0.327777777777778 1 0.672222222222222
689 1 1 1 1
690 1 2 0 0.272222222222222 1 0.727777777777778
691 1 1 1 1
692 1 2 0 0.272222222222222 1 0.727777777777778
693 1 1 1 1
694 1 2 0 0.216666666666667 1 0.783333333333333
695 1 1 1 1
696 1 2 0 0.272222222222222 1 0.727777777777778
697 1 1 1 1
698 1 2 0 0.216666666666667 1 0.783333333333333
699 1 1 1 1
700 1 2 0 0.216666666666667 1 0.783333333333333
701 1 1 1 1
702 1 2 0 0.161111111111111 1 0.838888888888889
703 1 1 1 1
704 0 2 0 0.99 1 0.01
705 1 1 1 1
706 0 2 0 0.99 1 0.01
707 1 1 1 1
708 0 2 0 0.99 1 0.01
709 1 1 1 1
710 0 2 0 0.99 1 0.01
711 1 1 1 1
712 0 2 0 0.99 1 0.01
713 1 1 1 1
714 0 2 0 0.99 1 0.01
715 1 1 1 1
716 0 2 0 0.99 1 0.01
717 1 1 1 1
718 0 2 0 0.99 1 0.01
719 1 1 1 1
720 0 2 0 0.99 1 0.01
721 1 1 1 1
722 0 2 0 0.99 1 0.01
723 1 1 1 1
724 0 2 0 0.99 1 0.01
725 1 1 1 1
726 0 2 0 0.99 1 0.01
727 1 1 1 1
728 0 2 0 0.99 1 0.01
729 1 1 1 1
730 0 2 0 0.99 1 0.01
731 1 1 1 1
732 0 2 0 0.99 1 0.01
733 1 1 1 1
734 0 2 0 0.99 1 0.01
735 1 1 1 1
736 1 2 0 0.327777777777778 1 0.672222222222222
737 1 1 1 1
738 1 2 0 0.272222222222222 1 0.727777777777778
739 1 1 1 1
740 1 2 0 0.272222222222222 1 0.727777777777778
741 1 1 1 1
742 1 2 0 0.216666666666667 1 0.783333333333333
743 1 1 1 1
744 1 2 0 0.272222222222222 1 0.727777777777778
745 1 1 1 1
746 1 2 0 0.216666666666667 1 0.783333333333333
747 1 1 1 1
748 1 2 0 0.216666666666667 1 0.783333333333333
749 1 1 1 1
750 1 2 0 0.161111111111111 1 0.838888888888889
751 1 1 1 1
752 1 2 0 0.272222222222222 1 0.727777777777778
753 1 1 1 1
754 1 2 0 0.216666666666667 1 0.783333333333333
755 1 1 1 1
756 1 2 0 0.216666666666667 1 0.783333333333333
757 1 1 1 1
758 1 2 0 0.161111111111111 1 0.838888888888889
759 1 1 1 1
760 1 2 0 0.216666666666667 1 0.783333333333333
761 1 1 1 1
762 1 2 0 0.161111111111111 1 0.838888888888889
763 1 1 1 1
764 1 2 0 0.161111111111111 1 0.838888888888889
765 1 1 1 1
766 1 2 0 0.105555555555556 1 0.894444444444444
767 1 1 1 1
768 0 2 0 0.99 1 0.01
769 1 1 1 1
770 0 2 0 0.99 1 0.01
771 1 1 1 1
772 0 2 0 0.99 1 0.01
773 1 1 1 1
774 0 2 0 0.99 1 0.01
775 1 1 1 1
776 0 2 0 0.99 1 0.01
777 1 1 1 1
778 0 2 0 0.99 1 0.01
779 1 1 1 1
780 0 2 0 0.99 1 0.01
781 1 1 1 1
782 0 2 0 0.99 1 0.01
783 1 1 1 1
784 0 2 0 0.99 1 0.01
785 1 1 1 1
786 0 2 0 0.99 1 0.01
787 1 1 1 1
788 0 2 0 0.99 1 0.01
789 1 1 1 1
790 0 2 0 0.99 1 0.01
791 1 1 1 1
792 0 2 0 0.99 1 0.01
793 1 1 1 1
794 0 2 0 0.99 1 0.01
795 1 1 1 1
796 0 2 0 0.99 1 0.01
797 1 1 1 1
798 0 2 0 0.99 1 0.01
799 1 1 1 1
800 1 2 0 0.383333333333333 1 0.616666666666667
801 1 1 1 1
802 1 2 0 0.327777777777778 1 0.672222222222222
803 1 1 1 1
804 1 2 0 0.327777777777778 1 0.672222222222222
805 1 1 1 1
806 1 2 0 0.272222222222222 1 0.727777777777778
807 1 1 1 1
808 1 2 0 0.327777777777778 1 0.672222222222222
809 1 1 1 1
810 1 2 0 0.272222222222222 1 0.727777777777778
811 1 1 1 1
812 1 2 0 0.272222222222222 1 0.727777777777778
813 1 1 1 1
814 1 2 0 0.216666666666667 1 0.783333333333333
815 1 1 1 1
816 1 2 0 0.327777777777778 1 0.672222222222222
817 1 1 1 1
818 1 2 0 0.272222222222222 1 0.727777777777778
819 1 1 1 1
820 1 2 0 0.272222222222222 1 0.727777777777778
821 1 1 1 1
822 1 2 0 0.216666666666667 1 0.783333333333333
823 1 1 1 1
824 1 2 0 0.272222222222222 1 0.727777777777778
825 1 1 1 1
826 1 2 0 0.216666666666667 1 0.783333333333333
827 1 1 1 1
828 1 2 0 0.216666666666667 1 0.783333333333333
829 1 1 1 1
830 1 2 0 0.161111111111111 1 0.838888888888889
831 1 1 1 1
832 0 2 0 0.99 1 0.01
833 1 1 1 1
834 0 2 0 0.99 1 0.01
835 1 1 1 1
836 0 2 0 0.99 1 0.01
837 1 1 1 1
838 0 2 0 0.99 1 0.01
839 1 1 1 1
840 0 2 0 0.99 1 0.01
841 1 1 1 1
842 0 2 0 0.99 1 0.01
843 1 1 1 1
844 0 2 0 0.99 1 0.01
845 1 1 1 1
846 0 2 0 0.99 1 0.01
847 1 1 1 1
848 0 2 0 0.99 1 0.01
849 1 1 1 1
850 0 2 0 0.99 1 0.01
851 1 1 1 1
852 0 2 0 0.99 1 0.01
853 1 1 1 1
854 0 2 0 0.99 1 0.01
855 1 1 1 1
856 0 2 0 0.99 1 0.01
857 1 1 1 1
858 0 2 0 0.99 1 0.01
859 1 1 1 1
860 0 2 0 0.99 1 0.01
861 1 1 1 1
862 0 2 0 0.99 1 0.01
863 1 1 1 1
864 1 2 0 0.327777777777778 1 0.672222222222222
865 1 1 1 1
866 1 2 0 0.272222222222222 1 0.727777777777778
867 1 1 1 1
868 1 2 0 0.272222222222222 1 0.727777777777778
869 1 1 1 1
870 1 2 0 0.216666666666667 1 0.783333333333333
871 1 1 1 1
872 1 2 0 0.272222222222222 1 0.727777777777778
873 1 1 1 1
874 1 2 0 0.216666666666667 1 0.783333333333333
875 1 1 1 1
876 1 2 0 0.216666666666667 1 0.783333333333333
877 1 1 1 1
878 1 2 0 0.161111111111111 1 0.838888888888889
879 1 1 1 1
880 1 2 0 0.272222222222222 1 0.727777777777778
881 1 1 1 1
882 1 2 0 0.216666666666667 1 0.783333333333333
883 1 1 1 1
884 1 2 0 0.216666666666667 1 0.783333333333333
885 1 1 1 1
886 1 2 0 0.161111111111111 1 0.838888888888889
887 1 1 1 1
888 1 2 0 0.216666666666667 1 0.783333333333333
889 1 1 1 1
890 1 2 0 0.161111111111111 1 0.838888888888889
891 1 1 1 1
892 1 2 0 0.161111111111111 1 0.838888888888889
893 1 1 1 1
894 1 2 0 0.105555555555556 1 0.894444444444444
895 1 1 1 1
896 0 2 0 0.99 1 0.01
897 1 1 1 1
898 0 2 0 0.99 1 0.01
899 1 1 1 1
900 0 2 0 0.99 1 0.01
901 1 1 1 1
902 0 2 0 0.99 1 0.01
903 1 1 1 1
904 0 2 0 0.99 1 0.01
905 1 1 1 1
906 0 2 0 0.99 1 0.01
907 1 1 1 1
908 0 2 0 0.99 1 0.01
909 1 1 1 1
910 0 2 0 0.99 1 0.01
911 1 1 1 1
912 0 2 0 0.99 1 0.01
913 1 1 1 1
914 0 2 0 0.99 1 0.01
915 1 1 1 1
916 0 2 0 0.99 1 0.01
917 1 1 1 1
918 0 2 0 0.99 1 0.01
919 1 1 1 1
920 0 2 0 0.99 1 0.01
921 1 1 1 1
922 0 2 0 0.99 1 0.01
923 1 1 1 1
924 0 2 0 0.99 1 0.01
925 1 1 1 1
926 0 2 0 0.99 1 0.01
927 1 1 1 1
928 1 2 0 0.327777777777778 1 0.672222222222222
929 1 1 1 1
930 1 2 0 0.272222222222222 1 0.727777777777778
931 1 1 1 1
932 1 2 0 0.272222222222222 1 0.727777777777778
933 1 1 1 1
934 1 2 0 0.216666666666667 1 0.783333333333333
935 1 1 1 1
936 1 2 0 0.272222222222222 1 0.727777777777778
937 1 1 1 1
938 1 2 0 0.216666666666667 1 0.783333333333333
939 1 1 1 1
940 1 2 0 0.216666666666667 1 0.783333333333333
941 1 1 1 1
942 1 2 0 0.161111111111111 1 0.838888888888889
943 1 1 1 1
944 1 2 0 0.272222222222222 1 0.727777777777778
945 1 1 1 1
946 1 2 0 0.216666666666667 1 0.783333333333333
947 1 1 1 1
948 1 2 0 0.216666666666667 1 0.783333333333333
949 1 1 1 1
950 1 2 0 0.161111111111111 1 0.838888888888889
951 1 1 1 1
952 1 2 0 0.216666666666667 1 0.783333333333333
953 1 1 1 1
954 1 2 0 0.161111111111111 1 0.838888888888889
955 1 1 1 1
956 1 2 0 0.161111111111111 1 0.838888888888889
957 1 1 1 1
958 1 2 0 0.105555555555556 1 0.894444444444444
959 1 1 1 1
960 0 2 0 0.99 1 0.01
961 1 1 1 1
962 0 2 0 0.99 1 0.01
963 1 1 1 1
964 0 2 0 0.99 1 0.01
965 1 1 1 1
966 0 2 0 0.99 1 0.01
967 1 1 1 1
968 0 2 0 0.99 1 0.01
969 1 1 1 1
970 0 2 0 0.99 1 0.01
971 1 1 1 1
972 0 2 0 0.99 1 0.01
973 1 1 1 1
974 0 2 0 0.99 1 0.01
975 1 1 1 1
976 0 2 0 0.99 1 0.01
977 1 1 1 1
978 0 2 0 0.99 1 0.01
979 1 1 1 1
980 0 2 0 0.99 1 0.01
981 1 1 1 1
982 0 2 0 0.99 1 0.01
983 1 1 1 1
984 0 2 0 0.99 1 0.01
985 1 1 1 1
986 0 2 0 0.99 1 0.01
987 1 1 1 1
988 0 2 0 0.99 1 0.01
989 1 1 1 1
990 0 2 0 0.99 1 0.01
991 1 1 1 1
992 1 2 0 0.272222222222222 1 0.727777777777778
993 1 1 1 1
994 1 2 0 0.216666666666667 1 0.783333333333333
995 1 1 1 1
996 1 2 0 0.216666666666667 1 0.783333333333333
997 1 1 1 1
998 1 2 0 0.161111111111111 1 0.838888888888889
999 1 1 1 1
1000 1 2 0 0.216666666666667 1 0.783333333333333
1001 1 1 1 1
1002 1 2 0 0.161111111111111 1 0.838888888888889
1003 1 1 1 1
1004 1 2 0 0.161111111111111 1 0.838888888888889
1005 1 1 1 1
1006 1 2 0 0.105555555555556 1 0.894444444444444
1007 1 1 1 1
1008 1 2 0 0.216666666666667 1 0.783333333333333
1009 1 1 1 1
1010 1 2 0 0.161111111111111 1 0.838888888888889
1011 1 1 1 1
1012 1 2 0 0.161111111111111 1 0.838888888888889
1013 1 1 1 1
1014 1 2 0 0.105555555555556 1 0.894444444444444
1015 1 1 1 1
1016 1 2 0 0.161111111111111 1 0.838888888888889
1017 1 1 1 1
1018 1 2 0 0.105555555555556 1 0.894444444444444
1019 1 1 1 1
1020 1 2 0 0.105555555555556 1 0.894444444444444
1021 1 1 1 1
1022 1 2 0 0.05 1 0.95
1023 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
39366
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
39
## name
running(c45)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(39) : $c(1)) ($s(39) : Bernoulli(+(/(*(+($s(0) $s(25) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(39) : $c(1)) ($s(39) : <=($c(0.5) +(/(*(+($s(0) $s(25) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
39
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
16
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 0 2 0 0.99 1 0.01
7 1 1 1 1
8 1 2 0 0.383333333333333 1 0.616666666666667
9 1 1 1 1
10 1 2 0 0.216666666666667 1 0.783333333333333
11 1 1 1 1
12 1 2 0 0.216666666666667 1 0.783333333333333
13 1 1 1 1
14 1 2 0 0.05 1 0.95
15 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
54
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
40
## name
running(c46)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(40) : $c(1)) ($s(40) : Bernoulli(+(/(*(+($s(16) $s(23) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(40) : $c(1)) ($s(40) : <=($c(0.5) +(/(*(+($s(16) $s(23) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
40
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
16
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 0 2 0 0.99 1 0.01
7 1 1 1 1
8 1 2 0 0.383333333333333 1 0.616666666666667
9 1 1 1 1
10 1 2 0 0.216666666666667 1 0.783333333333333
11 1 1 1 1
12 1 2 0 0.216666666666667 1 0.783333333333333
13 1 1 1 1
14 1 2 0 0.05 1 0.95
15 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
54
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
41
## name
running(c47)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(41) : $c(1)) ($s(41) : Bernoulli(+(/(*(+($s(6) $c(1)) $c(0.5)) $c(2)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(41) : $c(1)) ($s(41) : <=($c(0.5) +(/(*(+($s(6) $c(1)) $c(0.5)) $c(2)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
41
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
8
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 1 2 0 0.3 1 0.7
5 1 1 1 1
6 1 2 0 0.05 1 0.95
7 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
18
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
42
## name
running(c48)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(42) : $c(1)) ($s(42) : Bernoulli(+(/(*(+($s(10) $s(39) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(42) : $c(1)) ($s(42) : <=($c(0.5) +(/(*(+($s(10) $s(39) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
42
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
16
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 0 2 0 0.99 1 0.01
7 1 1 1 1
8 1 2 0 0.383333333333333 1 0.616666666666667
9 1 1 1 1
10 1 2 0 0.216666666666667 1 0.783333333333333
11 1 1 1 1
12 1 2 0 0.216666666666667 1 0.783333333333333
13 1 1 1 1
14 1 2 0 0.05 1 0.95
15 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
54
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
43
## name
running(c49)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(43) : $c(1)) ($s(43) : Bernoulli(+(/(*(+($s(0) $s(13) $s(15) $c(1)) $c(0.5)) $c(4)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(43) : $c(1)) ($s(43) : <=($c(0.5) +(/(*(+($s(0) $s(13) $s(15) $c(1)) $c(0.5)) $c(4)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
43
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
32
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 0 2 0 0.99 1 0.01
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 0 2 0 0.99 1 0.01
11 1 1 1 1
12 0 2 0 0.99 1 0.01
13 1 1 1 1
14 0 2 0 0.99 1 0.01
15 1 1 1 1
16 1 2 0 0.425 1 0.575
17 1 1 1 1
18 1 2 0 0.3 1 0.7
19 1 1 1 1
20 1 2 0 0.3 1 0.7
21 1 1 1 1
22 1 2 0 0.175 1 0.825
23 1 1 1 1
24 1 2 0 0.3 1 0.7
25 1 1 1 1
26 1 2 0 0.175 1 0.825
27 1 1 1 1
28 1 2 0 0.175 1 0.825
29 1 1 1 1
30 1 2 0 0.05 1 0.95
31 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
162
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
44
## name
running(c5)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(44) : $c(1)) ($s(44) : Bernoulli(+(/(*(+($s(3) $s(14) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(44) : $c(1)) ($s(44) : <=($c(0.5) +(/(*(+($s(3) $s(14) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
44
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
16
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 0 2 0 0.99 1 0.01
7 1 1 1 1
8 1 2 0 0.383333333333333 1 0.616666666666667
9 1 1 1 1
10 1 2 0 0.216666666666667 1 0.783333333333333
11 1 1 1 1
12 1 2 0 0.216666666666667 1 0.783333333333333
13 1 1 1 1
14 1 2 0 0.05 1 0.95
15 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
54
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
45
## name
running(c50)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(45) : $c(1)) ($s(45) : Bernoulli(+(/(*(+($s(2) $s(29) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(45) : $c(1)) ($s(45) : <=($c(0.5) +(/(*(+($s(2) $s(29) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
45
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
16
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 0 2 0 0.99 1 0.01
7 1 1 1 1
8 1 2 0 0.383333333333333 1 0.616666666666667
9 1 1 1 1
10 1 2 0 0.216666666666667 1 0.783333333333333
11 1 1 1 1
12 1 2 0 0.216666666666667 1 0.783333333333333
13 1 1 1 1
14 1 2 0 0.05 1 0.95
15 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
54
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
46
## name
running(c6)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(46) : $c(1)) ($s(46) : Bernoulli($c(0.95))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(46) : $c(1)) ($s(46) : $c(1)) ($c(1) : $c(0)) )
## hash index
46
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
4
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 1 2 0 0.05 1 0.95
3 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
6
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
47
## name
running(c7)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(47) : $c(1)) ($s(47) : Bernoulli(+(/(*(+($s(33) $s(4) $s(40) $c(1)) $c(0.5)) $c(4)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(47) : $c(1)) ($s(47) : <=($c(0.5) +(/(*(+($s(33) $s(4) $s(40) $c(1)) $c(0.5)) $c(4)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
47
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
32
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 0 2 0 0.99 1 0.01
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 0 2 0 0.99 1 0.01
11 1 1 1 1
12 0 2 0 0.99 1 0.01
13 1 1 1 1
14 0 2 0 0.99 1 0.01
15 1 1 1 1
16 1 2 0 0.425 1 0.575
17 1 1 1 1
18 1 2 0 0.3 1 0.7
19 1 1 1 1
20 1 2 0 0.3 1 0.7
21 1 1 1 1
22 1 2 0 0.175 1 0.825
23 1 1 1 1
24 1 2 0 0.3 1 0.7
25 1 1 1 1
26 1 2 0 0.175 1 0.825
27 1 1 1 1
28 1 2 0 0.175 1 0.825
29 1 1 1 1
30 1 2 0 0.05 1 0.95
31 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
162
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
48
## name
running(c8)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(48) : $c(1)) ($s(48) : Bernoulli(+(/(*(+($s(22) $s(7) $s(29) $s(35) $c(1)) $c(0.5)) $c(5)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(48) : $c(1)) ($s(48) : <=($c(0.5) +(/(*(+($s(22) $s(7) $s(29) $s(35) $c(1)) $c(0.5)) $c(5)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
48
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
64
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 0 2 0 0.99 1 0.01
7 1 1 1 1
8 0 2 0 0.99 1 0.01
9 1 1 1 1
10 0 2 0 0.99 1 0.01
11 1 1 1 1
12 0 2 0 0.99 1 0.01
13 1 1 1 1
14 0 2 0 0.99 1 0.01
15 1 1 1 1
16 0 2 0 0.99 1 0.01
17 1 1 1 1
18 0 2 0 0.99 1 0.01
19 1 1 1 1
20 0 2 0 0.99 1 0.01
21 1 1 1 1
22 0 2 0 0.99 1 0.01
23 1 1 1 1
24 0 2 0 0.99 1 0.01
25 1 1 1 1
26 0 2 0 0.99 1 0.01
27 1 1 1 1
28 0 2 0 0.99 1 0.01
29 1 1 1 1
30 0 2 0 0.99 1 0.01
31 1 1 1 1
32 1 2 0 0.45 1 0.55
33 1 1 1 1
34 1 2 0 0.35 1 0.65
35 1 1 1 1
36 1 2 0 0.35 1 0.65
37 1 1 1 1
38 1 2 0 0.25 1 0.75
39 1 1 1 1
40 1 2 0 0.35 1 0.65
41 1 1 1 1
42 1 2 0 0.25 1 0.75
43 1 1 1 1
44 1 2 0 0.25 1 0.75
45 1 1 1 1
46 1 2 0 0.15 1 0.85
47 1 1 1 1
48 1 2 0 0.35 1 0.65
49 1 1 1 1
50 1 2 0 0.25 1 0.75
51 1 1 1 1
52 1 2 0 0.25 1 0.75
53 1 1 1 1
54 1 2 0 0.15 1 0.85
55 1 1 1 1
56 1 2 0 0.25 1 0.75
57 1 1 1 1
58 1 2 0 0.15 1 0.85
59 1 1 1 1
60 1 2 0 0.15 1 0.85
61 1 1 1 1
62 1 2 0 0.05 1 0.95
63 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
486
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0

## index
49
## name
running(c9)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(49) : $c(1)) ($s(49) : Bernoulli(+(/(*(+($s(34) $s(36) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : Bernoulli($c(0.01))) )
## determinized formula
switch( ($a(49) : $c(1)) ($s(49) : <=($c(0.5) +(/(*(+($s(34) $s(36) $c(1)) $c(0.5)) $c(3)) $c(0.45)))) ($c(1) : $c(0)) )
## hash index
49
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
16
0 0 2 0 0.99 1 0.01
1 1 1 1 1
2 0 2 0 0.99 1 0.01
3 1 1 1 1
4 0 2 0 0.99 1 0.01
5 1 1 1 1
6 0 2 0 0.99 1 0.01
7 1 1 1 1
8 1 2 0 0.383333333333333 1 0.616666666666667
9 1 1 1 1
10 1 2 0 0.216666666666667 1 0.783333333333333
11 1 1 1 1
12 1 2 0 0.216666666666667 1 0.783333333333333
13 1 1 1 1
14 1 2 0 0.05 1 0.95
15 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
54
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0



#####REWARD#####
## formula
+(-($s(0) *($a(0) $c(0.75))) -($s(11) *($a(11) $c(0.75))) -($s(22) *($a(22) $c(0.75))) -($s(33) *($a(33) $c(0.75))) -($s(44) *($a(44) $c(0.75))) -($s(46) *($a(46) $c(0.75))) -($s(47) *($a(47) $c(0.75))) -($s(48) *($a(48) $c(0.75))) -($s(49) *($a(49) $c(0.75))) -($s(1) *($a(1) $c(0.75))) -($s(2) *($a(2) $c(0.75))) -($s(3) *($a(3) $c(0.75))) -($s(4) *($a(4) $c(0.75))) -($s(5) *($a(5) $c(0.75))) -($s(6) *($a(6) $c(0.75))) -($s(7) *($a(7) $c(0.75))) -($s(8) *($a(8) $c(0.75))) -($s(9) *($a(9) $c(0.75))) -($s(10) *($a(10) $c(0.75))) -($s(12) *($a(12) $c(0.75))) -($s(13) *($a(13) $c(0.75))) -($s(14) *($a(14) $c(0.75))) -($s(15) *($a(15) $c(0.75))) -($s(16) *($a(16) $c(0.75))) -($s(17) *($a(17) $c(0.75))) -($s(18) *($a(18) $c(0.75))) -($s(19) *($a(19) $c(0.75))) -($s(20) *($a(20) $c(0.75))) -($s(21) *($a(21) $c(0.75))) -($s(23) *($a(23) $c(0.75))) -($s(24) *($a(24) $c(0.75))) -($s(25) *($a(25) $c(0.75))) -($s(26) *($a(26) $c(0.75))) -($s(27) *($a(27) $c(0.75))) -($s(28) *($a(28) $c(0.75))) -($s(29) *($a(29) $c(0.75))) -($s(30) *($a(30) $c(0.75))) -($s(31) *($a(31) $c(0.75))) -($s(32) *($a(32) $c(0.75))) -($s(34) *($a(34) $c(0.75))) -($s(35) *($a(35) $c(0.75))) -($s(36) *($a(36) $c(0.75))) -($s(37) *($a(37) $c(0.75))) -($s(38) *($a(38) $c(0.75))) -($s(39) *($a(39) $c(0.75))) -($s(40) *($a(40) $c(0.75))) -($s(41) *($a(41) $c(0.75))) -($s(42) *($a(42) $c(0.75))) -($s(43) *($a(43) $c(0.75))) -($s(45) *($a(45) $c(0.75))))
## min
-0.75
## max
50
## independent from actions
0
## hash index
50
## caching type
MAP
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10
11 11
12 12
13 13
14 14
15 15
16 16
17 17
18 18
19 19
20 20
21 21
22 22
23 23
24 24
25 25
26 26
27 27
28 28
29 29
30 30
31 31
32 32
33 33
34 34
35 35
36 36
37 37
38 38
39 39
40 40
41 41
42 42
43 43
44 44
45 45
46 46
47 47
48 48
49 49
50 50


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
9
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
10
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
11
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
12
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
13
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
14
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
15
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
16
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
17
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
18
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
19
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
20
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
21
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
22
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
23
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
24
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
25
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
26
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
27
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
28
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
29
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
30
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
31
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
32
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
33
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
34
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
35
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
36
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
37
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
38
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
39
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
40
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
41
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
42
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
43
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
44
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
45
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
46
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
47
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
48
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
49
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
50
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####

#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## state fluent hash keys (first line is the number of keys)
5
0 2
16 2
39 2
43 2
50 51
## kleene state fluent hash keys (first line is the number of keys)
4
0 2
16 2
39 2
43 2

## index
1
## state hash key (for each value in the domain)
0 2
## state fluent hash keys (first line is the number of keys)
5
0 4
1 2
12 2
13 2
50 102
## kleene state fluent hash keys (first line is the number of keys)
4
0 6
1 2
12 2
13 2

## index
2
## state hash key (for each value in the domain)
0 4
## state fluent hash keys (first line is the number of keys)
5
0 8
2 2
13 4
45 2
50 204
## kleene state fluent hash keys (first line is the number of keys)
4
0 18
2 2
13 6
45 2

## index
3
## state hash key (for each value in the domain)
0 8
## state fluent hash keys (first line is the number of keys)
5
3 2
11 2
34 2
44 2
50 408
## kleene state fluent hash keys (first line is the number of keys)
4
3 2
11 2
34 2
44 2

## index
4
## state hash key (for each value in the domain)
0 16
## state fluent hash keys (first line is the number of keys)
4
4 2
11 4
47 2
50 816
## kleene state fluent hash keys (first line is the number of keys)
3
4 2
11 6
47 2

## index
5
## state hash key (for each value in the domain)
0 32
## state fluent hash keys (first line is the number of keys)
4
3 4
5 2
25 2
50 1632
## kleene state fluent hash keys (first line is the number of keys)
3
3 6
5 2
25 2

## index
6
## state hash key (for each value in the domain)
0 64
## state fluent hash keys (first line is the number of keys)
5
6 2
7 2
15 2
41 2
50 3264
## kleene state fluent hash keys (first line is the number of keys)
4
6 2
7 2
15 2
41 2

## index
7
## state hash key (for each value in the domain)
0 128
## state fluent hash keys (first line is the number of keys)
5
7 4
14 2
36 2
48 2
50 6528
## kleene state fluent hash keys (first line is the number of keys)
4
7 6
14 2
36 2
48 2

## index
8
## state hash key (for each value in the domain)
0 256
## state fluent hash keys (first line is the number of keys)
5
8 2
18 2
20 2
37 2
50 13056
## kleene state fluent hash keys (first line is the number of keys)
4
8 2
18 2
20 2
37 2

## index
9
## state hash key (for each value in the domain)
0 512
## state fluent hash keys (first line is the number of keys)
5
0 16
5 4
9 2
35 2
50 26112
## kleene state fluent hash keys (first line is the number of keys)
4
0 54
5 6
9 2
35 2

## index
10
## state hash key (for each value in the domain)
0 1024
## state fluent hash keys (first line is the number of keys)
5
1 4
10 2
13 8
42 2
50 52224
## kleene state fluent hash keys (first line is the number of keys)
4
1 6
10 2
13 18
42 2

## index
11
## state hash key (for each value in the domain)
0 2048
## state fluent hash keys (first line is the number of keys)
5
7 8
11 8
30 2
37 4
50 104448
## kleene state fluent hash keys (first line is the number of keys)
4
7 18
11 18
30 2
37 6

## index
12
## state hash key (for each value in the domain)
0 4096
## state fluent hash keys (first line is the number of keys)
5
5 8
12 4
20 4
27 2
50 208896
## kleene state fluent hash keys (first line is the number of keys)
4
5 18
12 6
20 6
27 2

## index
13
## state hash key (for each value in the domain)
0 8192
## state fluent hash keys (first line is the number of keys)
5
13 16
15 4
16 4
43 4
50 417792
## kleene state fluent hash keys (first line is the number of keys)
4
13 54
15 6
16 6
43 6

## index
14
## state hash key (for each value in the domain)
0 16384
## state fluent hash keys (first line is the number of keys)
5
11 16
14 4
27 4
44 4
50 835584
## kleene state fluent hash keys (first line is the number of keys)
4
11 54
14 6
27 6
44 6

## index
15
## state hash key (for each value in the domain)
0 32768
## state fluent hash keys (first line is the number of keys)
5
13 32
15 8
38 2
43 8
50 1671168
## kleene state fluent hash keys (first line is the number of keys)
4
13 162
15 18
38 2
43 18

## index
16
## state hash key (for each value in the domain)
0 65536
## state fluent hash keys (first line is the number of keys)
5
11 32
16 8
29 2
40 2
50 3342336
## kleene state fluent hash keys (first line is the number of keys)
4
11 162
16 18
29 2
40 2

## index
17
## state hash key (for each value in the domain)
0 131072
## state fluent hash keys (first line is the number of keys)
5
1 8
10 4
17 2
24 2
50 6684672
## kleene state fluent hash keys (first line is the number of keys)
4
1 18
10 6
17 2
24 2

## index
18
## state hash key (for each value in the domain)
0 262144
## state fluent hash keys (first line is the number of keys)
5
14 8
18 4
37 8
38 4
50 13369344
## kleene state fluent hash keys (first line is the number of keys)
4
14 18
18 6
37 18
38 6

## index
19
## state hash key (for each value in the domain)
0 524288
## state fluent hash keys (first line is the number of keys)
5
10 8
19 2
36 4
38 8
50 26738688
## kleene state fluent hash keys (first line is the number of keys)
4
10 18
19 2
36 6
38 18

## index
20
## state hash key (for each value in the domain)
0 1048576
## state fluent hash keys (first line is the number of keys)
5
5 16
10 16
11 64
20 8
50 53477376
## kleene state fluent hash keys (first line is the number of keys)
4
5 54
10 54
11 486
20 18

## index
21
## state hash key (for each value in the domain)
0 2097152
## state fluent hash keys (first line is the number of keys)
5
7 16
19 4
21 2
36 8
50 106954752
## kleene state fluent hash keys (first line is the number of keys)
4
7 54
19 6
21 2
36 18

## index
22
## state hash key (for each value in the domain)
0 4194304
## state fluent hash keys (first line is the number of keys)
5
19 8
20 16
22 2
48 4
50 213909504
## kleene state fluent hash keys (first line is the number of keys)
4
19 18
20 54
22 2
48 6

## index
23
## state hash key (for each value in the domain)
0 8388608
## state fluent hash keys (first line is the number of keys)
5
4 4
23 2
34 4
40 4
50 427819008
## kleene state fluent hash keys (first line is the number of keys)
4
4 6
23 2
34 6
40 6

## index
24
## state hash key (for each value in the domain)
0 16777216
## state fluent hash keys (first line is the number of keys)
5
17 4
24 4
28 2
38 16
50 855638016
## kleene state fluent hash keys (first line is the number of keys)
4
17 6
24 6
28 2
38 54

## index
25
## state hash key (for each value in the domain)
0 33554432
## state fluent hash keys (first line is the number of keys)
5
9 4
14 16
25 4
39 4
50 1711276032
## kleene state fluent hash keys (first line is the number of keys)
4
9 6
14 54
25 6
39 6

## index
26
## state hash key (for each value in the domain)
0 67108864
## state fluent hash keys (first line is the number of keys)
5
6 4
22 4
24 8
26 2
50 3422552064
## kleene state fluent hash keys (first line is the number of keys)
4
6 6
22 6
24 18
26 2

## index
27
## state hash key (for each value in the domain)
0 134217728
## state fluent hash keys (first line is the number of keys)
5
5 32
26 4
27 8
36 16
50 6845104128
## kleene state fluent hash keys (first line is the number of keys)
4
5 162
26 6
27 18
36 54

## index
28
## state hash key (for each value in the domain)
0 268435456
## state fluent hash keys (first line is the number of keys)
5
4 8
28 4
29 4
32 2
50 13690208256
## kleene state fluent hash keys (first line is the number of keys)
4
4 18
28 6
29 6
32 2

## index
29
## state hash key (for each value in the domain)
0 536870912
## state fluent hash keys (first line is the number of keys)
5
23 4
29 8
45 4
48 8
50 27380416512
## kleene state fluent hash keys (first line is the number of keys)
4
23 6
29 18
45 6
48 18

## index
30
## state hash key (for each value in the domain)
0 1073741824
## state fluent hash keys (first line is the number of keys)
5
4 16
6 8
26 8
30 4
50 54760833024
## kleene state fluent hash keys (first line is the number of keys)
4
4 54
6 18
26 18
30 6

## index
31
## state hash key (for each value in the domain)
0 2147483648
## state fluent hash keys (first line is the number of keys)
5
12 8
17 8
21 4
31 2
50 109521666048
## kleene state fluent hash keys (first line is the number of keys)
4
12 18
17 18
21 6
31 2

## index
32
## state hash key (for each value in the domain)
0 4294967296
## state fluent hash keys (first line is the number of keys)
5
0 32
1 16
2 4
32 4
50 219043332096
## kleene state fluent hash keys (first line is the number of keys)
4
0 162
1 54
2 6
32 6

## index
33
## state hash key (for each value in the domain)
0 8589934592
## state fluent hash keys (first line is the number of keys)
4
17 16
33 2
47 4
50 438086664192
## kleene state fluent hash keys (first line is the number of keys)
3
17 54
33 2
47 6

## index
34
## state hash key (for each value in the domain)
0 17179869184
## state fluent hash keys (first line is the number of keys)
5
0 64
9 8
34 8
49 2
50 876173328384
## kleene state fluent hash keys (first line is the number of keys)
4
0 486
9 18
34 18
49 2

## index
35
## state hash key (for each value in the domain)
0 34359738368
## state fluent hash keys (first line is the number of keys)
5
4 32
35 4
37 16
48 16
50 1752346656768
## kleene state fluent hash keys (first line is the number of keys)
4
4 162
35 6
37 54
48 54

## index
36
## state hash key (for each value in the domain)
0 68719476736
## state fluent hash keys (first line is the number of keys)
5
6 16
23 8
36 32
49 4
50 3504693313536
## kleene state fluent hash keys (first line is the number of keys)
4
6 54
23 18
36 162
49 6

## index
37
## state hash key (for each value in the domain)
0 137438953472
## state fluent hash keys (first line is the number of keys)
5
17 32
27 16
30 8
37 32
50 7009386627072
## kleene state fluent hash keys (first line is the number of keys)
4
17 162
27 54
30 18
37 162

## index
38
## state hash key (for each value in the domain)
0 274877906944
## state fluent hash keys (first line is the number of keys)
5
18 8
28 8
37 64
38 32
50 14018773254144
## kleene state fluent hash keys (first line is the number of keys)
4
18 18
28 18
37 486
38 162

## index
39
## state hash key (for each value in the domain)
0 549755813888
## state fluent hash keys (first line is the number of keys)
5
33 4
35 8
39 8
42 4
50 28037546508288
## kleene state fluent hash keys (first line is the number of keys)
4
33 6
35 18
39 18
42 6

## index
40
## state hash key (for each value in the domain)
0 1099511627776
## state fluent hash keys (first line is the number of keys)
4
37 128
40 8
47 8
50 56075093016576
## kleene state fluent hash keys (first line is the number of keys)
3
37 1458
40 18
47 18

## index
41
## state hash key (for each value in the domain)
0 2199023255552
## state fluent hash keys (first line is the number of keys)
5
12 16
23 16
26 16
41 4
50 112150186033152
## kleene state fluent hash keys (first line is the number of keys)
4
12 54
23 54
26 54
41 6

## index
42
## state hash key (for each value in the domain)
0 4398046511104
## state fluent hash keys (first line is the number of keys)
5
21 8
31 4
38 64
42 8
50 224300372066304
## kleene state fluent hash keys (first line is the number of keys)
4
21 18
31 6
38 486
42 18

## index
43
## state hash key (for each value in the domain)
0 8796093022208
## state fluent hash keys (first line is the number of keys)
5
30 16
37 256
38 128
43 16
50 448600744132608
## kleene state fluent hash keys (first line is the number of keys)
4
30 54
37 4374
38 1458
43 54

## index
44
## state hash key (for each value in the domain)
0 17592186044416
## state fluent hash keys (first line is the number of keys)
5
17 64
24 16
38 256
44 8
50 897201488265216
## kleene state fluent hash keys (first line is the number of keys)
4
17 486
24 54
38 4374
44 18

## index
45
## state hash key (for each value in the domain)
0 35184372088832
## state fluent hash keys (first line is the number of keys)
5
27 32
30 32
36 64
45 8
50 1794402976530432
## kleene state fluent hash keys (first line is the number of keys)
4
27 162
30 162
36 486
45 18

## index
46
## state hash key (for each value in the domain)
0 70368744177664
## state fluent hash keys (first line is the number of keys)
5
12 32
20 32
30 64
46 2
50 3588805953060864
## kleene state fluent hash keys (first line is the number of keys)
4
12 162
20 162
30 486
46 2

## index
47
## state hash key (for each value in the domain)
0 140737488355328
## state fluent hash keys (first line is the number of keys)
5
20 64
25 8
36 128
47 16
50 7177611906121728
## kleene state fluent hash keys (first line is the number of keys)
4
20 486
25 18
36 1458
47 54

## index
48
## state hash key (for each value in the domain)
0 281474976710656
## state fluent hash keys (first line is the number of keys)
5
16 16
33 8
35 16
48 32
50 14355223812243456
## kleene state fluent hash keys (first line is the number of keys)
4
16 54
33 18
35 54
48 162

## index
49
## state hash key (for each value in the domain)
0 562949953421312
## state fluent hash keys (first line is the number of keys)
5
1 32
14 32
38 512
49 8
50 28710447624486912
## kleene state fluent hash keys (first line is the number of keys)
4
1 162
14 162
38 13122
49 18



#####TRAINING SET#####
200
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 1 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 1 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 1 0 0 0 0 1 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 1 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 
0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0 1 0 0 0 1 0 1 0 1 0 1 0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 1 0 1 0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 1 0 0 0 0 1 1 0 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
0 0 1 1 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
0 0 1 1 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 
0 0 0 0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 
0 1 1 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
1 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 
1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 
0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 1 0 0 0 
1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 
1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 
1 0 0 1 0 0 0 0 1 1 0 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 0 0 0 
1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 1 0 0 0 1 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 
1 1 1 1 0 1 1 0 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 1 0 1 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 
1 1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 
0 1 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 
0 0 0 1 0 0 0 1 1 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 
1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 
0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 0 0 
0 0 0 0 1 1 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 0 0 0 
0 1 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 0 0 0 
1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
1 0 0 1 0 1 0 1 1 1 1 0 1 1 1 0 0 1 1 0 1 0 0 1 0 1 0 0 1 0 0 0 1 0 1 0 0 1 1 0 1 1 0 0 1 0 0 1 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 1 0 0 
0 0 1 0 0 0 1 1 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 0 1 0 1 0 1 0 1 1 1 0 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 0 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 1 1 0 1 0 1 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 
0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 1 0 1 1 0 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 1 1 0 0 0 0 1 0 1 0 1 0 0 1 0 
0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 0 0 1 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 0 1 0 1 0 
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 
1 1 0 1 1 1 1 1 0 0 0 0 0 1 0 1 0 1 1 0 1 0 1 1 1 0 1 0 1 1 1 0 1 0 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 0 
0 0 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 1 0 0 1 1 0 1 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 0 1 1 1 1 0 
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 1 
1 1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 1 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 
0 0 1 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 
0 0 1 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 
1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 1 0 0 1 
1 0 1 0 0 1 0 0 1 0 1 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 0 0 1 
1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 1 0 1 0 0 0 0 1 1 0 1 0 0 1 
1 0 0 1 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 0 0 1 
1 1 1 1 0 1 1 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 1 0 1 0 0 0 0 1 0 1 0 1 1 0 1 0 0 1 
1 1 1 1 0 1 1 1 0 1 0 1 0 1 1 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 1 1 1 1 0 0 0 0 1 0 1 0 1 1 0 1 0 0 1 
1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 1 0 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 0 1 0 0 1 
1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 
0 1 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 1 
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 1 
1 1 1 1 0 1 1 0 1 1 1 1 1 0 1 0 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 0 1 0 1 0 0 0 1 0 0 1 1 0 0 0 1 1 0 1 
1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 0 1 1 1 0 1 1 0 1 0 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
1 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 1 0 0 0 0 1 1 0 0 1 1 0 0 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 1 1 0 1 
1 0 1 0 0 0 0 1 0 1 0 1 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 0 0 1 1 0 1 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 0 1 
0 0 1 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 1 0 1 0 1 1 1 0 1 
1 0 1 1 0 1 0 1 1 1 0 1 0 1 1 1 0 0 1 0 1 1 1 0 0 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 
1 1 0 1 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 0 1 1 1 0 1 1 1 1 0 0 1 1 0 1 1 0 1 1 1 1 1 0 1 
1 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 0 0 1 0 0 1 1 0 1 1 0 0 1 1 0 0 1 0 0 1 0 1 1 1 1 0 1 1 1 0 1 0 1 1 
1 1 1 1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 
1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 1 
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
1 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 0 1 1 
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 1 1 0 1 1 
1 1 1 1 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 0 0 1 1 1 0 1 1 
1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 0 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 1 1 
1 1 0 1 1 1 1 1 1 0 1 0 0 1 0 1 0 1 1 0 1 0 1 1 1 0 1 0 1 1 1 0 1 0 0 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 
0 0 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 1 1 
1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 1 1 1 0 1 1 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 1 1 1 1 
1 1 1 1 1 1 0 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 
1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 
0 0 1 0 0 1 1 1 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 
1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
