#####TASK#####
## name
triangle_tireworld_inst_mdp__2
## horizon
40
## discount factor
1
## number of action fluents
12
## number of det state fluents
11
## number of prob state fluents
1
## number of preconds
0
## number of actions
13
## number of hashing functions
13
## initial state
0 0 1 1 1 1 0 0 0 0 0 1 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
1
## method to calculate the final reward
NOOP
## 1 if reward formula allows reward lock detection and a reward lock was found during task analysis
1
## 1 if an unreasonable action was detected
1
## 1 if an unreasonable action was detected in the determinization
1
## number of states that were encountered during task analysis
15158
## number of unique states that were encountered during task analysis
95
## number of states with only one applicable reasonable action that were encountered during task analysis
12644
## number of unique states with only one applicable reasonable action that were encountered during task analysis
34


#####ACTION FLUENTS#####
## index
0
## name
changetire
## number of values
2
## values
0 false
1 true

## index
1
## name
loadtire(la2a1)
## number of values
2
## values
0 false
1 true

## index
2
## name
loadtire(la2a2)
## number of values
2
## values
0 false
1 true

## index
3
## name
loadtire(la3a1)
## number of values
2
## values
0 false
1 true

## index
4
## name
move-car(la1a1, la1a2)
## number of values
2
## values
0 false
1 true

## index
5
## name
move-car(la1a1, la2a1)
## number of values
2
## values
0 false
1 true

## index
6
## name
move-car(la1a2, la1a3)
## number of values
2
## values
0 false
1 true

## index
7
## name
move-car(la1a2, la2a2)
## number of values
2
## values
0 false
1 true

## index
8
## name
move-car(la2a1, la1a2)
## number of values
2
## values
0 false
1 true

## index
9
## name
move-car(la2a1, la3a1)
## number of values
2
## values
0 false
1 true

## index
10
## name
move-car(la2a2, la1a3)
## number of values
2
## values
0 false
1 true

## index
11
## name
move-car(la3a1, la2a2)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
goal-reward-received
## number of values
2
## values
0 false
1 true
## formula
or($s(0) $s(7))
## hash index
0
## caching type 
VECTOR
## precomputed results
4
0 0
1 1
2 1
3 1
## kleene caching type
VECTOR
## kleene caching vec size
9
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0

## index
1
## name
hasspare
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(0) $s(1)) : $c(0)) (or(and($a(1) $s(8) $s(2)) and($a(2) $s(9) $s(3)) and($a(3) $s(10) $s(4))) : $c(1)) ($c(1) : $s(1)) )
## hash index
1
## caching type 
VECTOR
## precomputed results
640
0 0
1 0
2 0
3 0
4 0
5 1
6 1
7 1
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 1
17 1
18 1
19 0
20 0
21 0
22 0
23 0
24 0
25 1
26 1
27 1
28 1
29 0
30 0
31 0
32 0
33 0
34 0
35 1
36 1
37 1
38 1
39 0
40 0
41 0
42 0
43 0
44 0
45 1
46 1
47 1
48 1
49 0
50 0
51 0
52 0
53 0
54 0
55 1
56 1
57 1
58 1
59 0
60 0
61 0
62 0
63 0
64 0
65 1
66 1
67 1
68 1
69 0
70 0
71 0
72 0
73 0
74 0
75 1
76 1
77 1
78 1
79 0
80 0
81 0
82 0
83 0
84 0
85 1
86 1
87 1
88 1
89 0
90 0
91 0
92 0
93 1
94 0
95 1
96 1
97 1
98 1
99 0
100 0
101 0
102 0
103 0
104 0
105 1
106 1
107 1
108 1
109 0
110 0
111 0
112 0
113 1
114 0
115 1
116 1
117 1
118 1
119 0
120 0
121 0
122 0
123 0
124 0
125 1
126 1
127 1
128 1
129 0
130 0
131 0
132 0
133 1
134 0
135 1
136 1
137 1
138 1
139 0
140 0
141 0
142 0
143 0
144 0
145 1
146 1
147 1
148 1
149 0
150 0
151 0
152 0
153 1
154 0
155 1
156 1
157 1
158 1
159 0
160 0
161 0
162 0
163 0
164 0
165 1
166 1
167 1
168 1
169 0
170 0
171 0
172 0
173 0
174 0
175 1
176 1
177 1
178 1
179 0
180 0
181 0
182 1
183 0
184 0
185 1
186 1
187 1
188 1
189 0
190 0
191 0
192 1
193 0
194 0
195 1
196 1
197 1
198 1
199 0
200 0
201 0
202 0
203 0
204 0
205 1
206 1
207 1
208 1
209 0
210 0
211 0
212 0
213 0
214 0
215 1
216 1
217 1
218 1
219 0
220 0
221 0
222 1
223 0
224 0
225 1
226 1
227 1
228 1
229 0
230 0
231 0
232 1
233 0
234 0
235 1
236 1
237 1
238 1
239 0
240 0
241 0
242 0
243 0
244 0
245 1
246 1
247 1
248 1
249 0
250 0
251 0
252 0
253 1
254 0
255 1
256 1
257 1
258 1
259 0
260 0
261 0
262 1
263 0
264 0
265 1
266 1
267 1
268 1
269 0
270 0
271 0
272 1
273 1
274 0
275 1
276 1
277 1
278 1
279 0
280 0
281 0
282 0
283 0
284 0
285 1
286 1
287 1
288 1
289 0
290 0
291 0
292 0
293 1
294 0
295 1
296 1
297 1
298 1
299 0
300 0
301 0
302 1
303 0
304 0
305 1
306 1
307 1
308 1
309 0
310 0
311 0
312 1
313 1
314 0
315 1
316 1
317 1
318 1
319 0
320 0
321 0
322 0
323 0
324 0
325 1
326 1
327 1
328 1
329 0
330 0
331 0
332 0
333 0
334 0
335 1
336 1
337 1
338 1
339 0
340 0
341 0
342 0
343 0
344 0
345 1
346 1
347 1
348 1
349 0
350 0
351 0
352 0
353 0
354 0
355 1
356 1
357 1
358 1
359 0
360 0
361 1
362 0
363 0
364 0
365 1
366 1
367 1
368 1
369 0
370 0
371 1
372 0
373 0
374 0
375 1
376 1
377 1
378 1
379 0
380 0
381 1
382 0
383 0
384 0
385 1
386 1
387 1
388 1
389 0
390 0
391 1
392 0
393 0
394 0
395 1
396 1
397 1
398 1
399 0
400 0
401 0
402 0
403 0
404 0
405 1
406 1
407 1
408 1
409 0
410 0
411 0
412 0
413 1
414 0
415 1
416 1
417 1
418 1
419 0
420 0
421 0
422 0
423 0
424 0
425 1
426 1
427 1
428 1
429 0
430 0
431 0
432 0
433 1
434 0
435 1
436 1
437 1
438 1
439 0
440 0
441 1
442 0
443 0
444 0
445 1
446 1
447 1
448 1
449 0
450 0
451 1
452 0
453 1
454 0
455 1
456 1
457 1
458 1
459 0
460 0
461 1
462 0
463 0
464 0
465 1
466 1
467 1
468 1
469 0
470 0
471 1
472 0
473 1
474 0
475 1
476 1
477 1
478 1
479 0
480 0
481 0
482 0
483 0
484 0
485 1
486 1
487 1
488 1
489 0
490 0
491 0
492 0
493 0
494 0
495 1
496 1
497 1
498 1
499 0
500 0
501 0
502 1
503 0
504 0
505 1
506 1
507 1
508 1
509 0
510 0
511 0
512 1
513 0
514 0
515 1
516 1
517 1
518 1
519 0
520 0
521 1
522 0
523 0
524 0
525 1
526 1
527 1
528 1
529 0
530 0
531 1
532 0
533 0
534 0
535 1
536 1
537 1
538 1
539 0
540 0
541 1
542 1
543 0
544 0
545 1
546 1
547 1
548 1
549 0
550 0
551 1
552 1
553 0
554 0
555 1
556 1
557 1
558 1
559 0
560 0
561 0
562 0
563 0
564 0
565 1
566 1
567 1
568 1
569 0
570 0
571 0
572 0
573 1
574 0
575 1
576 1
577 1
578 1
579 0
580 0
581 0
582 1
583 0
584 0
585 1
586 1
587 1
588 1
589 0
590 0
591 0
592 1
593 1
594 0
595 1
596 1
597 1
598 1
599 0
600 0
601 1
602 0
603 0
604 0
605 1
606 1
607 1
608 1
609 0
610 0
611 1
612 0
613 1
614 0
615 1
616 1
617 1
618 1
619 0
620 0
621 1
622 1
623 0
624 0
625 1
626 1
627 1
628 1
629 0
630 0
631 1
632 1
633 1
634 0
635 1
636 1
637 1
638 1
639 0
## kleene caching type
VECTOR
## kleene caching vec size
10935
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 2
11 3
12 4

## index
2
## name
spare-in(la2a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(1) $s(8) $s(2)) : $c(0)) ($c(1) : $s(2)) )
## hash index
2
## caching type 
VECTOR
## precomputed results
8
0 0
1 0
2 1
3 1
4 0
5 0
6 1
7 0
## kleene caching type
VECTOR
## kleene caching vec size
18
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0

## index
3
## name
spare-in(la2a2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(2) $s(9) $s(3)) : $c(0)) ($c(1) : $s(3)) )
## hash index
3
## caching type 
VECTOR
## precomputed results
8
0 0
1 0
2 1
3 1
4 0
5 0
6 1
7 0
## kleene caching type
VECTOR
## kleene caching vec size
18
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0

## index
4
## name
spare-in(la3a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(3) $s(10) $s(4)) : $c(0)) ($c(1) : $s(4)) )
## hash index
4
## caching type 
VECTOR
## precomputed results
8
0 0
1 0
2 1
3 1
4 0
5 0
6 1
7 0
## kleene caching type
VECTOR
## kleene caching vec size
18
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0

## index
5
## name
vehicle-at(la1a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(4) $s(5) $s(11)) and($a(5) $s(5) $s(11))) : $c(0)) ($c(1) : $s(5)) )
## hash index
5
## caching type 
VECTOR
## precomputed results
12
0 0
1 0
2 0
3 1
4 1
5 1
6 0
7 0
8 0
9 1
10 0
11 0
## kleene caching type
VECTOR
## kleene caching vec size
27
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 2
9 0
10 0
11 0
12 0

## index
6
## name
vehicle-at(la1a2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(4) $s(5) $s(11)) and($a(8) $s(8) $s(11))) : $c(1)) (or(and($a(6) $s(6) $s(11)) and($a(7) $s(6) $s(11))) : $c(0)) ($c(1) : $s(6)) )
## hash index
6
## caching type 
VECTOR
## precomputed results
80
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 1
12 1
13 1
14 1
15 1
16 1
17 1
18 1
19 1
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 1
32 1
33 1
34 1
35 1
36 1
37 1
38 1
39 1
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 1
50 1
51 1
52 0
53 0
54 1
55 1
56 1
57 0
58 0
59 1
60 0
61 1
62 0
63 0
64 0
65 0
66 1
67 0
68 0
69 1
70 1
71 1
72 0
73 0
74 1
75 1
76 1
77 0
78 0
79 1
## kleene caching type
VECTOR
## kleene caching vec size
405
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 2
6 3
7 0
8 4
9 0
10 0
11 0
12 0

## index
7
## name
vehicle-at(la1a3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(6) $s(6) $s(11)) and($a(10) $s(9) $s(11))) : $c(1)) ($c(1) : $s(7)) )
## hash index
7
## caching type 
VECTOR
## precomputed results
48
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 1
8 1
9 1
10 1
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 1
19 1
20 1
21 1
22 1
23 1
24 0
25 0
26 0
27 0
28 0
29 1
30 1
31 1
32 1
33 1
34 1
35 1
36 0
37 1
38 0
39 0
40 1
41 1
42 1
43 1
44 1
45 1
46 1
47 1
## kleene caching type
VECTOR
## kleene caching vec size
243
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 2
7 0
8 0
9 0
10 0
11 0
12 0

## index
8
## name
vehicle-at(la2a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(5) $s(5) $s(11)) : $c(1)) (or(and($a(8) $s(8) $s(11)) and($a(9) $s(8) $s(11))) : $c(0)) ($c(1) : $s(8)) )
## hash index
8
## caching type 
VECTOR
## precomputed results
32
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 1
10 1
11 1
12 1
13 1
14 1
15 1
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 1
24 1
25 0
26 0
27 1
28 1
29 0
30 0
31 1
## kleene caching type
VECTOR
## kleene caching vec size
108
## action hash keys
0 0
1 0
2 0
3 1
4 2
5 0
6 0
7 3
8 0
9 0
10 0
11 0
12 0

## index
9
## name
vehicle-at(la2a2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(7) $s(6) $s(11)) and($a(11) $s(10) $s(11))) : $c(1)) (and($a(10) $s(9) $s(11)) : $c(0)) ($c(1) : $s(9)) )
## hash index
9
## caching type 
VECTOR
## precomputed results
64
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 1
10 1
11 1
12 1
13 1
14 1
15 1
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 1
26 1
27 1
28 1
29 1
30 1
31 1
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 1
40 1
41 1
42 0
43 1
44 1
45 1
46 0
47 1
48 0
49 1
50 0
51 0
52 0
53 1
54 0
55 1
56 1
57 1
58 0
59 1
60 1
61 1
62 0
63 1
## kleene caching type
VECTOR
## kleene caching vec size
324
## action hash keys
0 0
1 1
2 2
3 0
4 0
5 3
6 0
7 0
8 0
9 0
10 0
11 0
12 0

## index
10
## name
vehicle-at(la3a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(9) $s(8) $s(11)) : $c(1)) (and($a(11) $s(10) $s(11)) : $c(0)) ($c(1) : $s(10)) )
## hash index
10
## caching type 
VECTOR
## precomputed results
24
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 1
8 1
9 1
10 1
11 1
12 0
13 0
14 0
15 0
16 0
17 1
18 1
19 0
20 1
21 1
22 0
23 1
## kleene caching type
VECTOR
## kleene caching vec size
81
## action hash keys
0 0
1 1
2 0
3 2
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
not-flattire
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(4) $s(5) $s(11)) and($a(5) $s(5) $s(11)) and($a(6) $s(6) $s(11)) and($a(7) $s(6) $s(11)) and($a(8) $s(8) $s(11)) and($a(9) $s(8) $s(11)) and($a(10) $s(9) $s(11)) and($a(11) $s(10) $s(11))) : Bernoulli($c(0.499))) (and($a(0) $s(1)) : $c(1)) ($c(1) : $s(11)) )
## determinized formula
switch( (or(and($a(4) $s(5) $s(11)) and($a(5) $s(5) $s(11)) and($a(6) $s(6) $s(11)) and($a(7) $s(6) $s(11)) and($a(8) $s(8) $s(11)) and($a(9) $s(8) $s(11)) and($a(10) $s(9) $s(11)) and($a(11) $s(10) $s(11))) : $c(0)) (and($a(0) $s(1)) : $c(1)) ($c(1) : $s(11)) )
## hash index
11
## caching type 
VECTOR
## precomputed results (key - determinization - size of distribution - value-probability pairs)
1280
0 0 1 0 1
1 0 1 0 1
2 0 1 0 1
3 0 1 0 1
4 0 1 0 1
5 0 1 0 1
6 0 1 0 1
7 0 1 0 1
8 0 1 0 1
9 0 1 0 1
10 0 1 0 1
11 0 1 0 1
12 0 1 0 1
13 0 1 0 1
14 0 1 0 1
15 0 1 0 1
16 0 1 0 1
17 0 1 0 1
18 0 1 0 1
19 1 1 1 1
20 0 1 0 1
21 0 1 0 1
22 0 1 0 1
23 0 1 0 1
24 0 1 0 1
25 0 1 0 1
26 0 1 0 1
27 0 1 0 1
28 0 1 0 1
29 0 1 0 1
30 0 1 0 1
31 0 1 0 1
32 0 1 0 1
33 0 1 0 1
34 0 1 0 1
35 0 1 0 1
36 0 1 0 1
37 0 1 0 1
38 0 1 0 1
39 1 1 1 1
40 0 1 0 1
41 0 1 0 1
42 0 1 0 1
43 0 1 0 1
44 0 1 0 1
45 0 1 0 1
46 0 1 0 1
47 0 1 0 1
48 0 1 0 1
49 0 1 0 1
50 0 1 0 1
51 0 1 0 1
52 0 1 0 1
53 0 1 0 1
54 0 1 0 1
55 0 1 0 1
56 0 1 0 1
57 0 1 0 1
58 0 1 0 1
59 1 1 1 1
60 0 1 0 1
61 0 1 0 1
62 0 1 0 1
63 0 1 0 1
64 0 1 0 1
65 0 1 0 1
66 0 1 0 1
67 0 1 0 1
68 0 1 0 1
69 0 1 0 1
70 0 1 0 1
71 0 1 0 1
72 0 1 0 1
73 0 1 0 1
74 0 1 0 1
75 0 1 0 1
76 0 1 0 1
77 0 1 0 1
78 0 1 0 1
79 1 1 1 1
80 0 1 0 1
81 0 1 0 1
82 0 1 0 1
83 0 1 0 1
84 0 1 0 1
85 0 1 0 1
86 0 1 0 1
87 0 1 0 1
88 0 1 0 1
89 0 1 0 1
90 0 1 0 1
91 0 1 0 1
92 0 1 0 1
93 0 1 0 1
94 0 1 0 1
95 0 1 0 1
96 0 1 0 1
97 0 1 0 1
98 0 1 0 1
99 1 1 1 1
100 0 1 0 1
101 0 1 0 1
102 0 1 0 1
103 0 1 0 1
104 0 1 0 1
105 0 1 0 1
106 0 1 0 1
107 0 1 0 1
108 0 1 0 1
109 0 1 0 1
110 0 1 0 1
111 0 1 0 1
112 0 1 0 1
113 0 1 0 1
114 0 1 0 1
115 0 1 0 1
116 0 1 0 1
117 0 1 0 1
118 0 1 0 1
119 1 1 1 1
120 0 1 0 1
121 0 1 0 1
122 0 1 0 1
123 0 1 0 1
124 0 1 0 1
125 0 1 0 1
126 0 1 0 1
127 0 1 0 1
128 0 1 0 1
129 0 1 0 1
130 0 1 0 1
131 0 1 0 1
132 0 1 0 1
133 0 1 0 1
134 0 1 0 1
135 0 1 0 1
136 0 1 0 1
137 0 1 0 1
138 0 1 0 1
139 1 1 1 1
140 0 1 0 1
141 0 1 0 1
142 0 1 0 1
143 0 1 0 1
144 0 1 0 1
145 0 1 0 1
146 0 1 0 1
147 0 1 0 1
148 0 1 0 1
149 0 1 0 1
150 0 1 0 1
151 0 1 0 1
152 0 1 0 1
153 0 1 0 1
154 0 1 0 1
155 0 1 0 1
156 0 1 0 1
157 0 1 0 1
158 0 1 0 1
159 1 1 1 1
160 0 1 0 1
161 0 1 0 1
162 0 1 0 1
163 0 1 0 1
164 0 1 0 1
165 0 1 0 1
166 0 1 0 1
167 0 1 0 1
168 0 1 0 1
169 0 1 0 1
170 0 1 0 1
171 0 1 0 1
172 0 1 0 1
173 0 1 0 1
174 0 1 0 1
175 0 1 0 1
176 0 1 0 1
177 0 1 0 1
178 0 1 0 1
179 1 1 1 1
180 0 1 0 1
181 0 1 0 1
182 0 1 0 1
183 0 1 0 1
184 0 1 0 1
185 0 1 0 1
186 0 1 0 1
187 0 1 0 1
188 0 1 0 1
189 0 1 0 1
190 0 1 0 1
191 0 1 0 1
192 0 1 0 1
193 0 1 0 1
194 0 1 0 1
195 0 1 0 1
196 0 1 0 1
197 0 1 0 1
198 0 1 0 1
199 1 1 1 1
200 0 1 0 1
201 0 1 0 1
202 0 1 0 1
203 0 1 0 1
204 0 1 0 1
205 0 1 0 1
206 0 1 0 1
207 0 1 0 1
208 0 1 0 1
209 0 1 0 1
210 0 1 0 1
211 0 1 0 1
212 0 1 0 1
213 0 1 0 1
214 0 1 0 1
215 0 1 0 1
216 0 1 0 1
217 0 1 0 1
218 0 1 0 1
219 1 1 1 1
220 0 1 0 1
221 0 1 0 1
222 0 1 0 1
223 0 1 0 1
224 0 1 0 1
225 0 1 0 1
226 0 1 0 1
227 0 1 0 1
228 0 1 0 1
229 0 1 0 1
230 0 1 0 1
231 0 1 0 1
232 0 1 0 1
233 0 1 0 1
234 0 1 0 1
235 0 1 0 1
236 0 1 0 1
237 0 1 0 1
238 0 1 0 1
239 1 1 1 1
240 0 1 0 1
241 0 1 0 1
242 0 1 0 1
243 0 1 0 1
244 0 1 0 1
245 0 1 0 1
246 0 1 0 1
247 0 1 0 1
248 0 1 0 1
249 0 1 0 1
250 0 1 0 1
251 0 1 0 1
252 0 1 0 1
253 0 1 0 1
254 0 1 0 1
255 0 1 0 1
256 0 1 0 1
257 0 1 0 1
258 0 1 0 1
259 1 1 1 1
260 0 1 0 1
261 0 1 0 1
262 0 1 0 1
263 0 1 0 1
264 0 1 0 1
265 0 1 0 1
266 0 1 0 1
267 0 1 0 1
268 0 1 0 1
269 0 1 0 1
270 0 1 0 1
271 0 1 0 1
272 0 1 0 1
273 0 1 0 1
274 0 1 0 1
275 0 1 0 1
276 0 1 0 1
277 0 1 0 1
278 0 1 0 1
279 1 1 1 1
280 0 1 0 1
281 0 1 0 1
282 0 1 0 1
283 0 1 0 1
284 0 1 0 1
285 0 1 0 1
286 0 1 0 1
287 0 1 0 1
288 0 1 0 1
289 0 1 0 1
290 0 1 0 1
291 0 1 0 1
292 0 1 0 1
293 0 1 0 1
294 0 1 0 1
295 0 1 0 1
296 0 1 0 1
297 0 1 0 1
298 0 1 0 1
299 1 1 1 1
300 0 1 0 1
301 0 1 0 1
302 0 1 0 1
303 0 1 0 1
304 0 1 0 1
305 0 1 0 1
306 0 1 0 1
307 0 1 0 1
308 0 1 0 1
309 0 1 0 1
310 0 1 0 1
311 0 1 0 1
312 0 1 0 1
313 0 1 0 1
314 0 1 0 1
315 0 1 0 1
316 0 1 0 1
317 0 1 0 1
318 0 1 0 1
319 1 1 1 1
320 0 1 0 1
321 0 1 0 1
322 0 1 0 1
323 0 1 0 1
324 0 1 0 1
325 0 1 0 1
326 0 1 0 1
327 0 1 0 1
328 0 1 0 1
329 0 1 0 1
330 0 1 0 1
331 0 1 0 1
332 0 1 0 1
333 0 1 0 1
334 0 1 0 1
335 0 1 0 1
336 0 1 0 1
337 0 1 0 1
338 0 1 0 1
339 1 1 1 1
340 0 1 0 1
341 0 1 0 1
342 0 1 0 1
343 0 1 0 1
344 0 1 0 1
345 0 1 0 1
346 0 1 0 1
347 0 1 0 1
348 0 1 0 1
349 0 1 0 1
350 0 1 0 1
351 0 1 0 1
352 0 1 0 1
353 0 1 0 1
354 0 1 0 1
355 0 1 0 1
356 0 1 0 1
357 0 1 0 1
358 0 1 0 1
359 1 1 1 1
360 0 1 0 1
361 0 1 0 1
362 0 1 0 1
363 0 1 0 1
364 0 1 0 1
365 0 1 0 1
366 0 1 0 1
367 0 1 0 1
368 0 1 0 1
369 0 1 0 1
370 0 1 0 1
371 0 1 0 1
372 0 1 0 1
373 0 1 0 1
374 0 1 0 1
375 0 1 0 1
376 0 1 0 1
377 0 1 0 1
378 0 1 0 1
379 1 1 1 1
380 0 1 0 1
381 0 1 0 1
382 0 1 0 1
383 0 1 0 1
384 0 1 0 1
385 0 1 0 1
386 0 1 0 1
387 0 1 0 1
388 0 1 0 1
389 0 1 0 1
390 0 1 0 1
391 0 1 0 1
392 0 1 0 1
393 0 1 0 1
394 0 1 0 1
395 0 1 0 1
396 0 1 0 1
397 0 1 0 1
398 0 1 0 1
399 1 1 1 1
400 0 1 0 1
401 0 1 0 1
402 0 1 0 1
403 0 1 0 1
404 0 1 0 1
405 0 1 0 1
406 0 1 0 1
407 0 1 0 1
408 0 1 0 1
409 0 1 0 1
410 0 1 0 1
411 0 1 0 1
412 0 1 0 1
413 0 1 0 1
414 0 1 0 1
415 0 1 0 1
416 0 1 0 1
417 0 1 0 1
418 0 1 0 1
419 1 1 1 1
420 0 1 0 1
421 0 1 0 1
422 0 1 0 1
423 0 1 0 1
424 0 1 0 1
425 0 1 0 1
426 0 1 0 1
427 0 1 0 1
428 0 1 0 1
429 0 1 0 1
430 0 1 0 1
431 0 1 0 1
432 0 1 0 1
433 0 1 0 1
434 0 1 0 1
435 0 1 0 1
436 0 1 0 1
437 0 1 0 1
438 0 1 0 1
439 1 1 1 1
440 0 1 0 1
441 0 1 0 1
442 0 1 0 1
443 0 1 0 1
444 0 1 0 1
445 0 1 0 1
446 0 1 0 1
447 0 1 0 1
448 0 1 0 1
449 0 1 0 1
450 0 1 0 1
451 0 1 0 1
452 0 1 0 1
453 0 1 0 1
454 0 1 0 1
455 0 1 0 1
456 0 1 0 1
457 0 1 0 1
458 0 1 0 1
459 1 1 1 1
460 0 1 0 1
461 0 1 0 1
462 0 1 0 1
463 0 1 0 1
464 0 1 0 1
465 0 1 0 1
466 0 1 0 1
467 0 1 0 1
468 0 1 0 1
469 0 1 0 1
470 0 1 0 1
471 0 1 0 1
472 0 1 0 1
473 0 1 0 1
474 0 1 0 1
475 0 1 0 1
476 0 1 0 1
477 0 1 0 1
478 0 1 0 1
479 1 1 1 1
480 0 1 0 1
481 0 1 0 1
482 0 1 0 1
483 0 1 0 1
484 0 1 0 1
485 0 1 0 1
486 0 1 0 1
487 0 1 0 1
488 0 1 0 1
489 0 1 0 1
490 0 1 0 1
491 0 1 0 1
492 0 1 0 1
493 0 1 0 1
494 0 1 0 1
495 0 1 0 1
496 0 1 0 1
497 0 1 0 1
498 0 1 0 1
499 1 1 1 1
500 0 1 0 1
501 0 1 0 1
502 0 1 0 1
503 0 1 0 1
504 0 1 0 1
505 0 1 0 1
506 0 1 0 1
507 0 1 0 1
508 0 1 0 1
509 0 1 0 1
510 0 1 0 1
511 0 1 0 1
512 0 1 0 1
513 0 1 0 1
514 0 1 0 1
515 0 1 0 1
516 0 1 0 1
517 0 1 0 1
518 0 1 0 1
519 1 1 1 1
520 0 1 0 1
521 0 1 0 1
522 0 1 0 1
523 0 1 0 1
524 0 1 0 1
525 0 1 0 1
526 0 1 0 1
527 0 1 0 1
528 0 1 0 1
529 0 1 0 1
530 0 1 0 1
531 0 1 0 1
532 0 1 0 1
533 0 1 0 1
534 0 1 0 1
535 0 1 0 1
536 0 1 0 1
537 0 1 0 1
538 0 1 0 1
539 1 1 1 1
540 0 1 0 1
541 0 1 0 1
542 0 1 0 1
543 0 1 0 1
544 0 1 0 1
545 0 1 0 1
546 0 1 0 1
547 0 1 0 1
548 0 1 0 1
549 0 1 0 1
550 0 1 0 1
551 0 1 0 1
552 0 1 0 1
553 0 1 0 1
554 0 1 0 1
555 0 1 0 1
556 0 1 0 1
557 0 1 0 1
558 0 1 0 1
559 1 1 1 1
560 0 1 0 1
561 0 1 0 1
562 0 1 0 1
563 0 1 0 1
564 0 1 0 1
565 0 1 0 1
566 0 1 0 1
567 0 1 0 1
568 0 1 0 1
569 0 1 0 1
570 0 1 0 1
571 0 1 0 1
572 0 1 0 1
573 0 1 0 1
574 0 1 0 1
575 0 1 0 1
576 0 1 0 1
577 0 1 0 1
578 0 1 0 1
579 1 1 1 1
580 0 1 0 1
581 0 1 0 1
582 0 1 0 1
583 0 1 0 1
584 0 1 0 1
585 0 1 0 1
586 0 1 0 1
587 0 1 0 1
588 0 1 0 1
589 0 1 0 1
590 0 1 0 1
591 0 1 0 1
592 0 1 0 1
593 0 1 0 1
594 0 1 0 1
595 0 1 0 1
596 0 1 0 1
597 0 1 0 1
598 0 1 0 1
599 1 1 1 1
600 0 1 0 1
601 0 1 0 1
602 0 1 0 1
603 0 1 0 1
604 0 1 0 1
605 0 1 0 1
606 0 1 0 1
607 0 1 0 1
608 0 1 0 1
609 0 1 0 1
610 0 1 0 1
611 0 1 0 1
612 0 1 0 1
613 0 1 0 1
614 0 1 0 1
615 0 1 0 1
616 0 1 0 1
617 0 1 0 1
618 0 1 0 1
619 1 1 1 1
620 0 1 0 1
621 0 1 0 1
622 0 1 0 1
623 0 1 0 1
624 0 1 0 1
625 0 1 0 1
626 0 1 0 1
627 0 1 0 1
628 0 1 0 1
629 0 1 0 1
630 0 1 0 1
631 0 1 0 1
632 0 1 0 1
633 0 1 0 1
634 0 1 0 1
635 0 1 0 1
636 0 1 0 1
637 0 1 0 1
638 0 1 0 1
639 1 1 1 1
640 1 1 1 1
641 1 1 1 1
642 1 1 1 1
643 1 1 1 1
644 1 1 1 1
645 1 1 1 1
646 1 1 1 1
647 1 1 1 1
648 1 1 1 1
649 1 1 1 1
650 1 1 1 1
651 1 1 1 1
652 1 1 1 1
653 1 1 1 1
654 1 1 1 1
655 1 1 1 1
656 1 1 1 1
657 1 1 1 1
658 1 1 1 1
659 1 1 1 1
660 1 1 1 1
661 1 1 1 1
662 1 1 1 1
663 1 1 1 1
664 1 1 1 1
665 1 1 1 1
666 1 1 1 1
667 0 2 0 0.501 1 0.499
668 0 2 0 0.501 1 0.499
669 1 1 1 1
670 1 1 1 1
671 1 1 1 1
672 1 1 1 1
673 1 1 1 1
674 1 1 1 1
675 1 1 1 1
676 1 1 1 1
677 0 2 0 0.501 1 0.499
678 0 2 0 0.501 1 0.499
679 1 1 1 1
680 1 1 1 1
681 1 1 1 1
682 1 1 1 1
683 1 1 1 1
684 1 1 1 1
685 0 2 0 0.501 1 0.499
686 0 2 0 0.501 1 0.499
687 1 1 1 1
688 1 1 1 1
689 1 1 1 1
690 1 1 1 1
691 1 1 1 1
692 1 1 1 1
693 1 1 1 1
694 1 1 1 1
695 0 2 0 0.501 1 0.499
696 0 2 0 0.501 1 0.499
697 1 1 1 1
698 1 1 1 1
699 1 1 1 1
700 1 1 1 1
701 1 1 1 1
702 1 1 1 1
703 1 1 1 1
704 1 1 1 1
705 0 2 0 0.501 1 0.499
706 0 2 0 0.501 1 0.499
707 0 2 0 0.501 1 0.499
708 0 2 0 0.501 1 0.499
709 1 1 1 1
710 1 1 1 1
711 1 1 1 1
712 1 1 1 1
713 1 1 1 1
714 1 1 1 1
715 0 2 0 0.501 1 0.499
716 0 2 0 0.501 1 0.499
717 0 2 0 0.501 1 0.499
718 0 2 0 0.501 1 0.499
719 1 1 1 1
720 1 1 1 1
721 1 1 1 1
722 1 1 1 1
723 0 2 0 0.501 1 0.499
724 0 2 0 0.501 1 0.499
725 1 1 1 1
726 1 1 1 1
727 1 1 1 1
728 1 1 1 1
729 1 1 1 1
730 1 1 1 1
731 1 1 1 1
732 1 1 1 1
733 0 2 0 0.501 1 0.499
734 0 2 0 0.501 1 0.499
735 1 1 1 1
736 1 1 1 1
737 1 1 1 1
738 1 1 1 1
739 1 1 1 1
740 1 1 1 1
741 1 1 1 1
742 1 1 1 1
743 0 2 0 0.501 1 0.499
744 0 2 0 0.501 1 0.499
745 1 1 1 1
746 1 1 1 1
747 0 2 0 0.501 1 0.499
748 0 2 0 0.501 1 0.499
749 1 1 1 1
750 1 1 1 1
751 1 1 1 1
752 1 1 1 1
753 0 2 0 0.501 1 0.499
754 0 2 0 0.501 1 0.499
755 1 1 1 1
756 1 1 1 1
757 0 2 0 0.501 1 0.499
758 0 2 0 0.501 1 0.499
759 1 1 1 1
760 1 1 1 1
761 1 1 1 1
762 1 1 1 1
763 0 2 0 0.501 1 0.499
764 0 2 0 0.501 1 0.499
765 0 2 0 0.501 1 0.499
766 0 2 0 0.501 1 0.499
767 1 1 1 1
768 1 1 1 1
769 1 1 1 1
770 1 1 1 1
771 1 1 1 1
772 1 1 1 1
773 0 2 0 0.501 1 0.499
774 0 2 0 0.501 1 0.499
775 0 2 0 0.501 1 0.499
776 0 2 0 0.501 1 0.499
777 1 1 1 1
778 1 1 1 1
779 1 1 1 1
780 1 1 1 1
781 1 1 1 1
782 1 1 1 1
783 0 2 0 0.501 1 0.499
784 0 2 0 0.501 1 0.499
785 0 2 0 0.501 1 0.499
786 0 2 0 0.501 1 0.499
787 0 2 0 0.501 1 0.499
788 0 2 0 0.501 1 0.499
789 1 1 1 1
790 1 1 1 1
791 1 1 1 1
792 1 1 1 1
793 0 2 0 0.501 1 0.499
794 0 2 0 0.501 1 0.499
795 0 2 0 0.501 1 0.499
796 0 2 0 0.501 1 0.499
797 0 2 0 0.501 1 0.499
798 0 2 0 0.501 1 0.499
799 1 1 1 1
800 1 1 1 1
801 1 1 1 1
802 0 2 0 0.501 1 0.499
803 1 1 1 1
804 1 1 1 1
805 1 1 1 1
806 1 1 1 1
807 1 1 1 1
808 1 1 1 1
809 1 1 1 1
810 1 1 1 1
811 1 1 1 1
812 0 2 0 0.501 1 0.499
813 1 1 1 1
814 1 1 1 1
815 1 1 1 1
816 1 1 1 1
817 1 1 1 1
818 1 1 1 1
819 1 1 1 1
820 1 1 1 1
821 1 1 1 1
822 0 2 0 0.501 1 0.499
823 1 1 1 1
824 1 1 1 1
825 1 1 1 1
826 1 1 1 1
827 0 2 0 0.501 1 0.499
828 0 2 0 0.501 1 0.499
829 1 1 1 1
830 1 1 1 1
831 1 1 1 1
832 0 2 0 0.501 1 0.499
833 1 1 1 1
834 1 1 1 1
835 1 1 1 1
836 1 1 1 1
837 0 2 0 0.501 1 0.499
838 0 2 0 0.501 1 0.499
839 1 1 1 1
840 1 1 1 1
841 1 1 1 1
842 0 2 0 0.501 1 0.499
843 1 1 1 1
844 1 1 1 1
845 0 2 0 0.501 1 0.499
846 0 2 0 0.501 1 0.499
847 1 1 1 1
848 1 1 1 1
849 1 1 1 1
850 1 1 1 1
851 1 1 1 1
852 0 2 0 0.501 1 0.499
853 1 1 1 1
854 1 1 1 1
855 0 2 0 0.501 1 0.499
856 0 2 0 0.501 1 0.499
857 1 1 1 1
858 1 1 1 1
859 1 1 1 1
860 1 1 1 1
861 1 1 1 1
862 0 2 0 0.501 1 0.499
863 1 1 1 1
864 1 1 1 1
865 0 2 0 0.501 1 0.499
866 0 2 0 0.501 1 0.499
867 0 2 0 0.501 1 0.499
868 0 2 0 0.501 1 0.499
869 1 1 1 1
870 1 1 1 1
871 1 1 1 1
872 0 2 0 0.501 1 0.499
873 1 1 1 1
874 1 1 1 1
875 0 2 0 0.501 1 0.499
876 0 2 0 0.501 1 0.499
877 0 2 0 0.501 1 0.499
878 0 2 0 0.501 1 0.499
879 1 1 1 1
880 1 1 1 1
881 1 1 1 1
882 0 2 0 0.501 1 0.499
883 0 2 0 0.501 1 0.499
884 0 2 0 0.501 1 0.499
885 1 1 1 1
886 1 1 1 1
887 1 1 1 1
888 1 1 1 1
889 1 1 1 1
890 1 1 1 1
891 1 1 1 1
892 0 2 0 0.501 1 0.499
893 0 2 0 0.501 1 0.499
894 0 2 0 0.501 1 0.499
895 1 1 1 1
896 1 1 1 1
897 1 1 1 1
898 1 1 1 1
899 1 1 1 1
900 1 1 1 1
901 1 1 1 1
902 0 2 0 0.501 1 0.499
903 0 2 0 0.501 1 0.499
904 0 2 0 0.501 1 0.499
905 1 1 1 1
906 1 1 1 1
907 0 2 0 0.501 1 0.499
908 0 2 0 0.501 1 0.499
909 1 1 1 1
910 1 1 1 1
911 1 1 1 1
912 0 2 0 0.501 1 0.499
913 0 2 0 0.501 1 0.499
914 0 2 0 0.501 1 0.499
915 1 1 1 1
916 1 1 1 1
917 0 2 0 0.501 1 0.499
918 0 2 0 0.501 1 0.499
919 1 1 1 1
920 1 1 1 1
921 1 1 1 1
922 0 2 0 0.501 1 0.499
923 0 2 0 0.501 1 0.499
924 0 2 0 0.501 1 0.499
925 0 2 0 0.501 1 0.499
926 0 2 0 0.501 1 0.499
927 1 1 1 1
928 1 1 1 1
929 1 1 1 1
930 1 1 1 1
931 1 1 1 1
932 0 2 0 0.501 1 0.499
933 0 2 0 0.501 1 0.499
934 0 2 0 0.501 1 0.499
935 0 2 0 0.501 1 0.499
936 0 2 0 0.501 1 0.499
937 1 1 1 1
938 1 1 1 1
939 1 1 1 1
940 1 1 1 1
941 1 1 1 1
942 0 2 0 0.501 1 0.499
943 0 2 0 0.501 1 0.499
944 0 2 0 0.501 1 0.499
945 0 2 0 0.501 1 0.499
946 0 2 0 0.501 1 0.499
947 0 2 0 0.501 1 0.499
948 0 2 0 0.501 1 0.499
949 1 1 1 1
950 1 1 1 1
951 1 1 1 1
952 0 2 0 0.501 1 0.499
953 0 2 0 0.501 1 0.499
954 0 2 0 0.501 1 0.499
955 0 2 0 0.501 1 0.499
956 0 2 0 0.501 1 0.499
957 0 2 0 0.501 1 0.499
958 0 2 0 0.501 1 0.499
959 1 1 1 1
960 1 1 1 1
961 0 2 0 0.501 1 0.499
962 1 1 1 1
963 1 1 1 1
964 1 1 1 1
965 1 1 1 1
966 1 1 1 1
967 1 1 1 1
968 1 1 1 1
969 1 1 1 1
970 1 1 1 1
971 0 2 0 0.501 1 0.499
972 1 1 1 1
973 1 1 1 1
974 1 1 1 1
975 1 1 1 1
976 1 1 1 1
977 1 1 1 1
978 1 1 1 1
979 1 1 1 1
980 1 1 1 1
981 0 2 0 0.501 1 0.499
982 1 1 1 1
983 1 1 1 1
984 1 1 1 1
985 1 1 1 1
986 1 1 1 1
987 0 2 0 0.501 1 0.499
988 0 2 0 0.501 1 0.499
989 1 1 1 1
990 1 1 1 1
991 0 2 0 0.501 1 0.499
992 1 1 1 1
993 1 1 1 1
994 1 1 1 1
995 1 1 1 1
996 1 1 1 1
997 0 2 0 0.501 1 0.499
998 0 2 0 0.501 1 0.499
999 1 1 1 1
1000 1 1 1 1
1001 0 2 0 0.501 1 0.499
1002 1 1 1 1
1003 1 1 1 1
1004 1 1 1 1
1005 0 2 0 0.501 1 0.499
1006 0 2 0 0.501 1 0.499
1007 1 1 1 1
1008 1 1 1 1
1009 1 1 1 1
1010 1 1 1 1
1011 0 2 0 0.501 1 0.499
1012 1 1 1 1
1013 1 1 1 1
1014 1 1 1 1
1015 0 2 0 0.501 1 0.499
1016 0 2 0 0.501 1 0.499
1017 1 1 1 1
1018 1 1 1 1
1019 1 1 1 1
1020 1 1 1 1
1021 0 2 0 0.501 1 0.499
1022 1 1 1 1
1023 1 1 1 1
1024 1 1 1 1
1025 0 2 0 0.501 1 0.499
1026 0 2 0 0.501 1 0.499
1027 0 2 0 0.501 1 0.499
1028 0 2 0 0.501 1 0.499
1029 1 1 1 1
1030 1 1 1 1
1031 0 2 0 0.501 1 0.499
1032 1 1 1 1
1033 1 1 1 1
1034 1 1 1 1
1035 0 2 0 0.501 1 0.499
1036 0 2 0 0.501 1 0.499
1037 0 2 0 0.501 1 0.499
1038 0 2 0 0.501 1 0.499
1039 1 1 1 1
1040 1 1 1 1
1041 0 2 0 0.501 1 0.499
1042 1 1 1 1
1043 0 2 0 0.501 1 0.499
1044 0 2 0 0.501 1 0.499
1045 1 1 1 1
1046 1 1 1 1
1047 1 1 1 1
1048 1 1 1 1
1049 1 1 1 1
1050 1 1 1 1
1051 0 2 0 0.501 1 0.499
1052 1 1 1 1
1053 0 2 0 0.501 1 0.499
1054 0 2 0 0.501 1 0.499
1055 1 1 1 1
1056 1 1 1 1
1057 1 1 1 1
1058 1 1 1 1
1059 1 1 1 1
1060 1 1 1 1
1061 0 2 0 0.501 1 0.499
1062 1 1 1 1
1063 0 2 0 0.501 1 0.499
1064 0 2 0 0.501 1 0.499
1065 1 1 1 1
1066 1 1 1 1
1067 0 2 0 0.501 1 0.499
1068 0 2 0 0.501 1 0.499
1069 1 1 1 1
1070 1 1 1 1
1071 0 2 0 0.501 1 0.499
1072 1 1 1 1
1073 0 2 0 0.501 1 0.499
1074 0 2 0 0.501 1 0.499
1075 1 1 1 1
1076 1 1 1 1
1077 0 2 0 0.501 1 0.499
1078 0 2 0 0.501 1 0.499
1079 1 1 1 1
1080 1 1 1 1
1081 0 2 0 0.501 1 0.499
1082 1 1 1 1
1083 0 2 0 0.501 1 0.499
1084 0 2 0 0.501 1 0.499
1085 0 2 0 0.501 1 0.499
1086 0 2 0 0.501 1 0.499
1087 1 1 1 1
1088 1 1 1 1
1089 1 1 1 1
1090 1 1 1 1
1091 0 2 0 0.501 1 0.499
1092 1 1 1 1
1093 0 2 0 0.501 1 0.499
1094 0 2 0 0.501 1 0.499
1095 0 2 0 0.501 1 0.499
1096 0 2 0 0.501 1 0.499
1097 1 1 1 1
1098 1 1 1 1
1099 1 1 1 1
1100 1 1 1 1
1101 0 2 0 0.501 1 0.499
1102 1 1 1 1
1103 0 2 0 0.501 1 0.499
1104 0 2 0 0.501 1 0.499
1105 0 2 0 0.501 1 0.499
1106 0 2 0 0.501 1 0.499
1107 0 2 0 0.501 1 0.499
1108 0 2 0 0.501 1 0.499
1109 1 1 1 1
1110 1 1 1 1
1111 0 2 0 0.501 1 0.499
1112 1 1 1 1
1113 0 2 0 0.501 1 0.499
1114 0 2 0 0.501 1 0.499
1115 0 2 0 0.501 1 0.499
1116 0 2 0 0.501 1 0.499
1117 0 2 0 0.501 1 0.499
1118 0 2 0 0.501 1 0.499
1119 1 1 1 1
1120 1 1 1 1
1121 0 2 0 0.501 1 0.499
1122 0 2 0 0.501 1 0.499
1123 1 1 1 1
1124 1 1 1 1
1125 1 1 1 1
1126 1 1 1 1
1127 1 1 1 1
1128 1 1 1 1
1129 1 1 1 1
1130 1 1 1 1
1131 0 2 0 0.501 1 0.499
1132 0 2 0 0.501 1 0.499
1133 1 1 1 1
1134 1 1 1 1
1135 1 1 1 1
1136 1 1 1 1
1137 1 1 1 1
1138 1 1 1 1
1139 1 1 1 1
1140 1 1 1 1
1141 0 2 0 0.501 1 0.499
1142 0 2 0 0.501 1 0.499
1143 1 1 1 1
1144 1 1 1 1
1145 1 1 1 1
1146 1 1 1 1
1147 0 2 0 0.501 1 0.499
1148 0 2 0 0.501 1 0.499
1149 1 1 1 1
1150 1 1 1 1
1151 0 2 0 0.501 1 0.499
1152 0 2 0 0.501 1 0.499
1153 1 1 1 1
1154 1 1 1 1
1155 1 1 1 1
1156 1 1 1 1
1157 0 2 0 0.501 1 0.499
1158 0 2 0 0.501 1 0.499
1159 1 1 1 1
1160 1 1 1 1
1161 0 2 0 0.501 1 0.499
1162 0 2 0 0.501 1 0.499
1163 1 1 1 1
1164 1 1 1 1
1165 0 2 0 0.501 1 0.499
1166 0 2 0 0.501 1 0.499
1167 1 1 1 1
1168 1 1 1 1
1169 1 1 1 1
1170 1 1 1 1
1171 0 2 0 0.501 1 0.499
1172 0 2 0 0.501 1 0.499
1173 1 1 1 1
1174 1 1 1 1
1175 0 2 0 0.501 1 0.499
1176 0 2 0 0.501 1 0.499
1177 1 1 1 1
1178 1 1 1 1
1179 1 1 1 1
1180 1 1 1 1
1181 0 2 0 0.501 1 0.499
1182 0 2 0 0.501 1 0.499
1183 1 1 1 1
1184 1 1 1 1
1185 0 2 0 0.501 1 0.499
1186 0 2 0 0.501 1 0.499
1187 0 2 0 0.501 1 0.499
1188 0 2 0 0.501 1 0.499
1189 1 1 1 1
1190 1 1 1 1
1191 0 2 0 0.501 1 0.499
1192 0 2 0 0.501 1 0.499
1193 1 1 1 1
1194 1 1 1 1
1195 0 2 0 0.501 1 0.499
1196 0 2 0 0.501 1 0.499
1197 0 2 0 0.501 1 0.499
1198 0 2 0 0.501 1 0.499
1199 1 1 1 1
1200 1 1 1 1
1201 0 2 0 0.501 1 0.499
1202 0 2 0 0.501 1 0.499
1203 0 2 0 0.501 1 0.499
1204 0 2 0 0.501 1 0.499
1205 1 1 1 1
1206 1 1 1 1
1207 1 1 1 1
1208 1 1 1 1
1209 1 1 1 1
1210 1 1 1 1
1211 0 2 0 0.501 1 0.499
1212 0 2 0 0.501 1 0.499
1213 0 2 0 0.501 1 0.499
1214 0 2 0 0.501 1 0.499
1215 1 1 1 1
1216 1 1 1 1
1217 1 1 1 1
1218 1 1 1 1
1219 1 1 1 1
1220 1 1 1 1
1221 0 2 0 0.501 1 0.499
1222 0 2 0 0.501 1 0.499
1223 0 2 0 0.501 1 0.499
1224 0 2 0 0.501 1 0.499
1225 1 1 1 1
1226 1 1 1 1
1227 0 2 0 0.501 1 0.499
1228 0 2 0 0.501 1 0.499
1229 1 1 1 1
1230 1 1 1 1
1231 0 2 0 0.501 1 0.499
1232 0 2 0 0.501 1 0.499
1233 0 2 0 0.501 1 0.499
1234 0 2 0 0.501 1 0.499
1235 1 1 1 1
1236 1 1 1 1
1237 0 2 0 0.501 1 0.499
1238 0 2 0 0.501 1 0.499
1239 1 1 1 1
1240 1 1 1 1
1241 0 2 0 0.501 1 0.499
1242 0 2 0 0.501 1 0.499
1243 0 2 0 0.501 1 0.499
1244 0 2 0 0.501 1 0.499
1245 0 2 0 0.501 1 0.499
1246 0 2 0 0.501 1 0.499
1247 1 1 1 1
1248 1 1 1 1
1249 1 1 1 1
1250 1 1 1 1
1251 0 2 0 0.501 1 0.499
1252 0 2 0 0.501 1 0.499
1253 0 2 0 0.501 1 0.499
1254 0 2 0 0.501 1 0.499
1255 0 2 0 0.501 1 0.499
1256 0 2 0 0.501 1 0.499
1257 1 1 1 1
1258 1 1 1 1
1259 1 1 1 1
1260 1 1 1 1
1261 0 2 0 0.501 1 0.499
1262 0 2 0 0.501 1 0.499
1263 0 2 0 0.501 1 0.499
1264 0 2 0 0.501 1 0.499
1265 0 2 0 0.501 1 0.499
1266 0 2 0 0.501 1 0.499
1267 0 2 0 0.501 1 0.499
1268 0 2 0 0.501 1 0.499
1269 1 1 1 1
1270 1 1 1 1
1271 0 2 0 0.501 1 0.499
1272 0 2 0 0.501 1 0.499
1273 0 2 0 0.501 1 0.499
1274 0 2 0 0.501 1 0.499
1275 0 2 0 0.501 1 0.499
1276 0 2 0 0.501 1 0.499
1277 0 2 0 0.501 1 0.499
1278 0 2 0 0.501 1 0.499
1279 1 1 1 1
## kleene caching type
VECTOR
## kleene caching vec size
21870
## action hash keys
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 0
10 0
11 0
12 9



#####REWARD#####
## formula
switch( (and(~($s(0)) $s(7)) : $c(100)) ($s(0) : $c(0)) ($c(1) : $c(-1)) )
## min
-1
## max
100
## independent from actions
1
## hash index
12
## caching type
VECTOR
## precomputed results
4
0 -1
1 0
2 100
3 0
## kleene caching type
VECTOR
## kleene caching vec size
9
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
9
## state
0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
10
## state
0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
11
## state
0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
12
## state
1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## kleene state hash key base
1
## state fluent hash keys (first line is the number of keys)
2
0 1
12 1
## kleene state fluent hash keys (first line is the number of keys)
2
0 1
12 1

## index
1
## state hash key (for each value in the domain)
0 2
## kleene state hash key base
3
## state fluent hash keys (first line is the number of keys)
2
1 5
11 10
## kleene state fluent hash keys (first line is the number of keys)
2
1 5
11 10

## index
2
## state hash key (for each value in the domain)
0 4
## kleene state hash key base
9
## state fluent hash keys (first line is the number of keys)
2
1 10
2 2
## kleene state fluent hash keys (first line is the number of keys)
2
1 15
2 2

## index
3
## state hash key (for each value in the domain)
0 8
## kleene state hash key base
27
## state fluent hash keys (first line is the number of keys)
2
1 20
3 2
## kleene state fluent hash keys (first line is the number of keys)
2
1 45
3 2

## index
4
## state hash key (for each value in the domain)
0 16
## kleene state hash key base
81
## state fluent hash keys (first line is the number of keys)
2
1 40
4 2
## kleene state fluent hash keys (first line is the number of keys)
2
1 135
4 2

## index
5
## state hash key (for each value in the domain)
0 32
## kleene state hash key base
243
## state fluent hash keys (first line is the number of keys)
4
5 3
6 5
8 4
11 20
## kleene state fluent hash keys (first line is the number of keys)
4
5 3
6 5
8 4
11 30

## index
6
## state hash key (for each value in the domain)
0 64
## kleene state hash key base
729
## state fluent hash keys (first line is the number of keys)
4
6 10
7 3
9 4
11 40
## kleene state fluent hash keys (first line is the number of keys)
4
6 15
7 3
9 4
11 90

## index
7
## state hash key (for each value in the domain)
0 128
## kleene state hash key base
2187
## state fluent hash keys (first line is the number of keys)
3
0 2
7 6
12 2
## kleene state fluent hash keys (first line is the number of keys)
3
0 3
7 9
12 3

## index
8
## state hash key (for each value in the domain)
0 256
## kleene state hash key base
6561
## state fluent hash keys (first line is the number of keys)
6
1 80
2 4
6 20
8 8
10 3
11 80
## kleene state fluent hash keys (first line is the number of keys)
6
1 405
2 6
6 45
8 12
10 3
11 270

## index
9
## state hash key (for each value in the domain)
0 512
## kleene state hash key base
19683
## state fluent hash keys (first line is the number of keys)
5
1 160
3 4
7 12
9 8
11 160
## kleene state fluent hash keys (first line is the number of keys)
5
1 1215
3 6
7 27
9 12
11 810

## index
10
## state hash key (for each value in the domain)
0 1024
## kleene state hash key base
59049
## state fluent hash keys (first line is the number of keys)
5
1 320
4 4
9 16
10 6
11 320
## kleene state fluent hash keys (first line is the number of keys)
5
1 3645
4 6
9 36
10 9
11 2430


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 2048
## kleene state hash key base
177147
## state fluent hash keys (first line is the number of keys)
7
5 6
6 40
7 24
8 16
9 32
10 12
11 640
## kleene state fluent hash keys (first line is the number of keys)
7
5 9
6 135
7 81
8 36
9 108
10 27
11 7290



#####TRAINING SET#####
95
0 0 0 1 1 0 1 0 0 0 0 0 
0 1 0 1 1 0 1 0 0 0 0 0 
0 0 1 1 1 0 1 0 0 0 0 0 
0 0 0 0 0 0 0 1 0 0 0 0 
1 0 0 0 0 0 0 1 0 0 0 0 
0 1 0 0 0 0 0 1 0 0 0 0 
1 1 0 0 0 0 0 1 0 0 0 0 
0 0 1 0 0 0 0 1 0 0 0 0 
1 0 1 0 0 0 0 1 0 0 0 0 
0 1 1 0 0 0 0 1 0 0 0 0 
0 0 0 1 0 0 0 1 0 0 0 0 
1 0 0 1 0 0 0 1 0 0 0 0 
0 1 0 1 0 0 0 1 0 0 0 0 
1 1 0 1 0 0 0 1 0 0 0 0 
0 0 1 1 0 0 0 1 0 0 0 0 
1 0 1 1 0 0 0 1 0 0 0 0 
0 1 1 1 0 0 0 1 0 0 0 0 
1 1 1 1 0 0 0 1 0 0 0 0 
0 0 0 0 1 0 0 1 0 0 0 0 
1 0 0 0 1 0 0 1 0 0 0 0 
0 0 1 0 1 0 0 1 0 0 0 0 
1 0 1 0 1 0 0 1 0 0 0 0 
0 1 1 0 1 0 0 1 0 0 0 0 
1 1 1 0 1 0 0 1 0 0 0 0 
0 0 0 1 1 0 0 1 0 0 0 0 
1 0 0 1 1 0 0 1 0 0 0 0 
0 0 1 1 1 0 0 1 0 0 0 0 
1 0 1 1 1 0 0 1 0 0 0 0 
0 1 0 1 1 0 0 0 1 0 0 0 
0 0 1 1 1 0 0 0 1 0 0 0 
0 1 0 0 0 0 0 0 0 1 0 0 
0 1 1 0 0 0 0 0 0 1 0 0 
0 0 0 1 0 0 0 0 0 1 0 0 
0 1 0 1 0 0 0 0 0 1 0 0 
0 0 1 1 0 0 0 0 0 1 0 0 
0 1 1 1 0 0 0 0 0 1 0 0 
0 1 0 0 1 0 0 0 0 1 0 0 
0 1 1 0 1 0 0 0 0 1 0 0 
0 0 0 1 1 0 0 0 0 1 0 0 
0 1 0 1 1 0 0 0 0 1 0 0 
0 0 1 1 1 0 0 0 0 1 0 0 
0 1 0 1 0 0 0 0 0 0 1 0 
0 1 1 1 0 0 0 0 0 0 1 0 
0 0 0 1 1 0 0 0 0 0 1 0 
0 1 0 1 1 0 0 0 0 0 1 0 
0 0 1 1 1 0 0 0 0 0 1 0 
0 0 1 1 1 1 0 0 0 0 0 1 
0 0 0 1 1 0 1 0 0 0 0 1 
0 1 0 1 1 0 1 0 0 0 0 1 
0 0 1 1 1 0 1 0 0 0 0 1 
0 0 0 0 0 0 0 1 0 0 0 1 
1 0 0 0 0 0 0 1 0 0 0 1 
0 1 0 0 0 0 0 1 0 0 0 1 
0 0 1 0 0 0 0 1 0 0 0 1 
1 0 1 0 0 0 0 1 0 0 0 1 
0 1 1 0 0 0 0 1 0 0 0 1 
0 0 0 1 0 0 0 1 0 0 0 1 
1 0 0 1 0 0 0 1 0 0 0 1 
0 1 0 1 0 0 0 1 0 0 0 1 
0 0 1 1 0 0 0 1 0 0 0 1 
1 0 1 1 0 0 0 1 0 0 0 1 
0 0 0 0 1 0 0 1 0 0 0 1 
1 0 0 0 1 0 0 1 0 0 0 1 
0 0 1 0 1 0 0 1 0 0 0 1 
1 0 1 0 1 0 0 1 0 0 0 1 
0 1 1 0 1 0 0 1 0 0 0 1 
1 1 1 0 1 0 0 1 0 0 0 1 
0 0 0 1 1 0 0 1 0 0 0 1 
1 0 0 1 1 0 0 1 0 0 0 1 
0 0 1 1 1 0 0 1 0 0 0 1 
1 0 1 1 1 0 0 1 0 0 0 1 
0 0 0 1 1 0 0 0 1 0 0 1 
0 1 0 1 1 0 0 0 1 0 0 1 
0 0 1 1 1 0 0 0 1 0 0 1 
0 0 0 0 0 0 0 0 0 1 0 1 
0 1 0 0 0 0 0 0 0 1 0 1 
0 0 1 0 0 0 0 0 0 1 0 1 
0 1 1 0 0 0 0 0 0 1 0 1 
0 0 0 1 0 0 0 0 0 1 0 1 
0 1 0 1 0 0 0 0 0 1 0 1 
0 0 1 1 0 0 0 0 0 1 0 1 
0 1 1 1 0 0 0 0 0 1 0 1 
0 0 0 0 1 0 0 0 0 1 0 1 
0 1 0 0 1 0 0 0 0 1 0 1 
0 0 1 0 1 0 0 0 0 1 0 1 
0 1 1 0 1 0 0 0 0 1 0 1 
0 0 0 1 1 0 0 0 0 1 0 1 
0 0 1 1 1 0 0 0 0 1 0 1 
0 0 0 1 0 0 0 0 0 0 1 1 
0 1 0 1 0 0 0 0 0 0 1 1 
0 0 1 1 0 0 0 0 0 0 1 1 
0 1 1 1 0 0 0 0 0 0 1 1 
0 0 0 1 1 0 0 0 0 0 1 1 
0 1 0 1 1 0 0 0 0 0 1 1 
0 0 1 1 1 0 0 0 0 0 1 1 
